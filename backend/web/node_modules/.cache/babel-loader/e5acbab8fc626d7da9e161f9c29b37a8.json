{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { TextField, Grid, Button } from '@material-ui/core';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { Done, Clear } from '@material-ui/icons';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction';\nimport { useMountEffect } from '../../utils/main';\nimport { SmartComponentActions } from '../../redux/actions';\nimport { getOrDownloadSmartComponents } from '../../utils/smartComponents';\nimport { useStore } from '../templates/Store/Store';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DigitalTwinForm = props => {\n  _s();\n\n  var _props$confirmDialog$, _props$confirmDialog$2, _props$confirmDialog$3;\n\n  /**styles */\n  const classes = useFunctionBlockStyles();\n  /**Digital Twin Name*/\n\n  const {\n    dtName,\n    setDtName\n  } = props.dtName;\n  const [validDtName, setValidDtName] = useState(true);\n  const onChangeDtName = useCallback(event => {\n    setDtName(event.target.value.trim());\n    setValidDtName(true);\n  }, [setDtName]);\n  /* Buttons */\n\n  const onCancel = props.cancel.action;\n  const cancelLabel = props.cancel.label;\n  const confirmLabel = props.confirmDialog.buttonTitle;\n  /* Confirmation */\n\n  const [confirm, setConfirm] = useState(false);\n\n  const validateFields = () => {\n    const cValidDtName = dtName.trim() !== '';\n    if (!cValidDtName) setValidDtName(cValidDtName);\n    return cValidDtName;\n  };\n\n  const confirmButtonAction = () => {\n    if (validateFields()) setConfirm(true);\n  };\n\n  const confirmActionStates = {\n    start: {\n      label: (_props$confirmDialog$ = props.confirmDialog.start) === null || _props$confirmDialog$ === void 0 ? void 0 : _props$confirmDialog$.label,\n      positiveLabel: (_props$confirmDialog$2 = props.confirmDialog.start) === null || _props$confirmDialog$2 === void 0 ? void 0 : _props$confirmDialog$2.positiveLabel,\n      negativeLabel: (_props$confirmDialog$3 = props.confirmDialog.start) === null || _props$confirmDialog$3 === void 0 ? void 0 : _props$confirmDialog$3.negativeLabel,\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: props.confirmDialog.success.label,\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    },\n    error: {\n      label: props.confirmDialog.error.label,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    }\n  };\n  const confirmActionProps = {\n    title: props.confirmDialog.title,\n    states: confirmActionStates,\n    currentState: confirmActionStates.executing,\n    onCancel: () => setConfirm(false),\n    onError: () => setConfirm(false),\n    onSuccess: props.confirmDialog.onSuccess,\n    action: props.confirmDialog.action\n  }; // Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n\n  const [fetching, setFetching] = useState(true);\n  const {\n    data: smartComponents,\n    dispatchAction: dispatchSmartComponentActions\n  } = useStore('smartComponents');\n\n  const updateSmartComponents = scs => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(scs));\n\n  const [error, setError] = useState('');\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadSmartComponents(smartComponents).then(result => updateSmartComponents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); // Associar um smartComponent ao Digital Twin\n\n  const [smartComponentChoice, setSmartComponentChoice] = useState('');\n  const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0);\n\n  const handleSmartComponentChoice = event => {\n    setSmartComponentChoice(event.target.value);\n    let i = 0;\n\n    while (i < smartComponents.length) {\n      if (smartComponents[i].scName === event.target.value) {\n        setSmartComponentIdChoice(smartComponents[i].scId);\n      }\n\n      i++;\n    }\n  };\n\n  const columns = [{\n    field: 'smartComponent',\n    headerName: 'Smart Component',\n    width: 70\n  }];\n  const rows = [...smartComponents];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", confirm ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      spacing: 1,\n      justify: \"space-between\",\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: onChangeDtName,\n          value: dtName,\n          helperText: \"\",\n          error: !validDtName,\n          fullWidth: true,\n          required: true,\n          label: \"Insert New Digital Twin Name\",\n          id: \"dt-name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        container: true,\n        direction: \"row\",\n        spacing: 2,\n        alignItems: \"center\",\n        justify: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onCancel,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 86\n            }, this), cancelLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: confirmButtonAction,\n            color: \"primary\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(Done, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 93\n            }, this), confirmLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DigitalTwinForm, \"YI7F5//Xg3rxGc73VgmF1ll6O3Y=\", false, function () {\n  return [useFunctionBlockStyles, useStore, useMountEffect];\n});\n\n_c = DigitalTwinForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalTwinForm\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx"],"names":["React","useState","useCallback","TextField","Grid","Button","useFunctionBlockStyles","Done","Clear","ConfirmActionStateLabel","ConfirmAction","useMountEffect","SmartComponentActions","getOrDownloadSmartComponents","useStore","DataGrid","DigitalTwinForm","props","classes","dtName","setDtName","validDtName","setValidDtName","onChangeDtName","event","target","value","trim","onCancel","cancel","action","cancelLabel","label","confirmLabel","confirmDialog","buttonTitle","confirm","setConfirm","validateFields","cValidDtName","confirmButtonAction","confirmActionStates","start","positiveLabel","negativeLabel","state","executing","success","error","confirmActionProps","title","states","currentState","onError","onSuccess","fetching","setFetching","data","smartComponents","dispatchAction","dispatchSmartComponentActions","updateSmartComponents","scs","updateSmartComponent","setError","setTimeout","then","result","catch","e","msg","finally","smartComponentChoice","setSmartComponentChoice","smartComponentIdChoice","setSmartComponentIdChoice","handleSmartComponentChoice","i","length","scName","scId","columns","field","headerName","width","rows","height"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { TextField, Grid, Button, InputLabel, MenuItem, Select, FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\nimport { Done, Clear } from '@material-ui/icons'\nimport { ConfirmActionProps, ConfirmActionStateLabel, ConfirmActionAction, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction'\nimport { useMountEffect } from '../../utils/main'\nimport { SmartComponent } from '../../model'\nimport { SmartComponentActions } from '../../redux/actions'\nimport { getOrDownloadSmartComponents } from '../../utils/smartComponents'\nimport { RequestResponseState } from '../../services/api/api'\nimport { useStore } from '../templates/Store/Store'\nimport { DataGrid } from '@material-ui/data-grid';\n\ninterface DigitalTwinProps {\n\n    dtName: {\n        dtName: string\n        setDtName: Function\n    },\n    cancel: {\n        label: string\n        action: () => void\n    },\n    confirmDialog: {\n        buttonTitle: string\n        title: string\n        initialState: ConfirmActionStateLabel\n        action: ConfirmActionAction\n        onSuccess : () => void\n        start? : {\n            label: string\n            positiveLabel: string\n            negativeLabel: string\n        }\n        success: {\n            label:string\n            positiveLabel: string\n        }\n        error: {\n            label: string\n            positiveLabel: string\n        }\n    },\n}\n\nexport const DigitalTwinForm = (props: DigitalTwinProps) => {\n\n    /**styles */\n    const classes = useFunctionBlockStyles()\n\n    /**Digital Twin Name*/\n    const {dtName, setDtName} = props.dtName\n    const [validDtName, setValidDtName] = useState(true)\n    const onChangeDtName = useCallback((event:any) => {\n\n        setDtName(event.target.value.trim())\n        setValidDtName(true)\n    \n      },[setDtName])\n\n    /* Buttons */\n\n    const onCancel = props.cancel.action\n    const cancelLabel = props.cancel.label\n\n    const confirmLabel = props.confirmDialog.buttonTitle\n\n    /* Confirmation */\n\n    const [confirm, setConfirm] : [boolean, Function] = useState(false)\n\n    const validateFields = () : boolean => {\n\n        const cValidDtName = dtName.trim() !== ''\n            \n        if(!cValidDtName) setValidDtName(cValidDtName)\n    \n        return cValidDtName\n    \n    }\n\n    const confirmButtonAction = () => {\n\n        if(validateFields())\n          setConfirm(true)\n    }\n\n    const confirmActionStates = {\n        start: {\n            label: props.confirmDialog.start?.label,\n            positiveLabel: props.confirmDialog.start?.positiveLabel,\n            negativeLabel: props.confirmDialog.start?.negativeLabel,\n            state: ConfirmActionStateLabel.start\n        },\n        executing: {\n          label: '',\n          state: ConfirmActionStateLabel.executing,\n        },\n        success: {\n          label: props.confirmDialog.success.label,\n          state: ConfirmActionStateLabel.success,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n        error: {\n          label: props.confirmDialog.error.label,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n      }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: props.confirmDialog.title,\n        states: confirmActionStates,\n        currentState: confirmActionStates.executing,\n        onCancel: () => setConfirm(false),\n        onError: () => setConfirm(false),\n        onSuccess: props.confirmDialog.onSuccess,\n        action:props.confirmDialog.action,\n      \n    }\n\n    // Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n\n    const [fetching,setFetching] = useState(true)\n    const {data:smartComponents, dispatchAction:dispatchSmartComponentActions} = useStore('smartComponents')\n    const updateSmartComponents = (scs: SmartComponent[]) => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(scs))\n    const [error,setError] = useState('')\n    \n    useMountEffect(() => {\n\n      setTimeout(() => {\n  \n      setFetching(true)\n      getOrDownloadSmartComponents(smartComponents)\n          .then((result: SmartComponent[]) => updateSmartComponents(result))\n          .catch((e:RequestResponseState) => setError(e.msg))\n          .finally(() => setFetching(false))\n      }, 0)\n      })\n  \n      // Associar um smartComponent ao Digital Twin\n      const [smartComponentChoice, setSmartComponentChoice] = useState('')\n      const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0)\n  \n      const handleSmartComponentChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\n      setSmartComponentChoice(event.target.value as string);\n      let i = 0;\n      while(i < smartComponents.length)\n      {\n          if( smartComponents[i].scName === (event.target.value as string))\n          {\n              setSmartComponentIdChoice(smartComponents[i].scId)\n          }\n          i++;\n      }\n      };\n    \n    const columns = [\n      { field: 'smartComponent', headerName: 'Smart Component', width: 70 },\n    ];\n\n    const rows = [...smartComponents];\n \n    return (\n        <> {confirm ? <ConfirmAction {...confirmActionProps} /> : null}\n            <Grid spacing={1} justify=\"space-between\" item xs container direction=\"row\">\n              <Grid item xs={6}>\n                <TextField\n                  onChange={onChangeDtName} \n                  value={dtName}\n                  helperText=\"\"\n                  error={!validDtName} \n                  fullWidth required \n                  label=\"Insert New Digital Twin Name\" \n                  id=\"dt-name\" \n                  type=\"text\" />\n            </Grid>\n            </Grid>\n            <div style={{ height: 400, width: '100%' }}>\n              <DataGrid rows={rows} columns={columns}  checkboxSelection />\n            </div>\n            <Grid item xs container direction=\"row\" justify=\"space-between\" alignItems=\"center\"> \n              <Grid item xs={6} container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"flex-end\">\n                <Grid item>\n                    <Button onClick={onCancel} color=\"secondary\" variant=\"contained\"><Clear/>{cancelLabel}</Button>\n                </Grid>\n                <Grid>\n                  <Button onClick={confirmButtonAction} color=\"primary\" variant=\"contained\"><Done/>{confirmLabel}</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}