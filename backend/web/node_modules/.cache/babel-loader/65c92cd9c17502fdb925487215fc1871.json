{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinMonitoring.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navigator } from '../templates/Navigator/Navigator';\nimport { ConfirmAction, ConfirmActionStateLabel } from '../templates/ConfirmAction/ConfirmAction';\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent';\nimport { JPTable } from '../templates/Table/JPTable';\nimport { useMountEffect } from '../../utils/main';\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities, getOrDownloadMonitoredEvents, getOrDownloadMonitoredVariables } from '../../utils/digitalTwins';\nimport { getOrDownloadAssociatedSmartComponents } from '../../utils/associatedSmartComponents';\nimport { useStore } from '../templates/Store/Store';\nimport { FunctionalityActions, DigitalTwinActions, AssociatedSmartComponentActions, MonitoredVariableActions, MonitoredEventActions } from '../../redux/actions';\nimport { TextField, Grid, Button, Box, Dialog, DialogTitle, CircularProgress, Select, InputLabel, MenuItem, DialogActions } from '@material-ui/core';\nimport { createFunctionality, createMonitoredEvent, createMonitoredVariable, deleteMonitoredEvent, deleteMonitoredVariable, updateFunctionality } from '../../services/api/digital-twin';\nimport { deleteFunctionality } from '../../services/api/digital-twin';\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { Redirect } from 'react-router-dom';\nimport { CheckCircle } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/;\nconst FUNCTION_BLOCK_RE = /[a-zA-Z0-9]{3,}/;\nconst VARIABLE_RE = /[a-zA-Z0-9]{3,}/;\nconst EVENT_RE = /[a-zA-Z0-9]{3,}/;\nlet functionalityId = -1;\nlet idMonitoredVariable = -1;\nlet idMonitoredEvent = -1;\nconst funcUserId = 1;\n\nconst EditFunctionalityDialog = props => {\n  _s();\n\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n  const classes = useDialogStyles();\n\n  const action = () => {\n    if (props.func.funcId) {\n      props.func.funcName = newFuncName;\n\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        }).finally(() => setSending(false));\n      } else {\n        if (result.good) props.onGood({ ...props.func,\n          funcName: newFuncName\n        });else props.onError();\n      }\n    }\n\n    props.onCancel();\n    document.location.reload(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: true,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Edit Functionality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.box,\n        children: !result.done ? /*#__PURE__*/_jsxDEV(TextField, {\n          disabled: sending,\n          value: newFuncName,\n          onChange: event => setNewFuncName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: result.good ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(Error, {\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: result.good ? classes.good : classes.error,\n              textAlign: \"center\",\n              children: result.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: sending,\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: sending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: action,\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditFunctionalityDialog, \"bUzfaD7b4GtqKNIHzTtn3fZWk30=\", false, function () {\n  return [useDialogStyles];\n});\n\n_c = EditFunctionalityDialog;\n\nconst AddFunctionalityDetails = props => {\n  _s2();\n\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const classes = useDialogStyles();\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n  const [fetching, setFetching] = useState(true);\n  const {\n    data: associatedSmartComponents,\n    dispatchAction: dispatchAssociatedSmartComponentActions\n  } = useStore('associatedSmartComponents');\n\n  const updateAssociatedSmartComponents = assScs => dispatchAssociatedSmartComponentActions(AssociatedSmartComponentActions.updateAssociatedSmartComponents(assScs));\n\n  const [error, setError] = useState('');\n  const [availableSmartComponents, setAvailableSmartComponents] = useState([]); // Recuperar da base de dados os Smart Components Associados ao Digital Twin associado\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadAssociatedSmartComponents(associatedSmartComponents).then(result => updateAssociatedSmartComponents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n  let i = 0;\n\n  while (i < associatedSmartComponents.length) {\n    if (associatedSmartComponents[i].scDtId === props.func.funcdtId) {\n      availableSmartComponents[i] = associatedSmartComponents[i];\n    }\n\n    i++;\n  } // Escolher um AssociatedSmartComponent de dentro dos disponíveis pelo DT respectivo \n\n\n  const [smartComponentChoice, setSmartComponentChoice] = useState('');\n  const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0);\n\n  const handleSmartComponentChoice = event => {\n    setSmartComponentChoice(event.target.value);\n    let j = 0;\n\n    while (j < associatedSmartComponents.length) {\n      if (associatedSmartComponents[j].scName === event.target.value) {\n        setSmartComponentIdChoice(associatedSmartComponents[j].scId);\n      }\n\n      j++;\n    }\n  }; //Variáveis e funções de apoio à escolha do Function Block\n\n\n  const [validFunctionBlock, setValidFunctionBlock] = useState(true);\n  const [newFb, setNewFb] = useState('');\n\n  const isFunctionBlockValid = fb => NEW_FUNCTIONALITY_RE.test(fb); //Variáveis e funções de apoio à escolha da Variable\n\n\n  const [validVariable, setValidVariable] = useState(true);\n  const [newVariable, setNewVariable] = useState('');\n\n  const isVariableValid = variable => VARIABLE_RE.test(variable);\n\n  const buildMonitoredVariable = funcId => ({\n    monitoredVariableName: newVariable,\n    fbAssociated: newFb,\n    funcIdAssociated: funcId,\n    idMonitoredVariable: idMonitoredVariable,\n    scAssociated: smartComponentChoice\n  }); //Variáveis e funções de apoio à escolha do Event\n\n\n  const [validEvent, setValidEvent] = useState(true);\n  const [newEvent, setNewEvent] = useState('');\n\n  const isEventValid = event => EVENT_RE.test(event);\n\n  const buildMonitoredEvent = funcId => ({\n    monitoredEventName: newEvent,\n    fbAssociated: newFb,\n    funcIdAssociated: funcId,\n    idMonitoredEvent: idMonitoredEvent,\n    scAssociated: smartComponentChoice\n  }); //Função de atualização da database com os dados escolhidos \n\n\n  const action = () => {\n    let funcId = props.func.funcId;\n    const monitoredVariable = buildMonitoredVariable(funcId);\n    const monitoredEvent = buildMonitoredEvent(funcId);\n\n    if (props.func.funcId) {\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        });\n\n        if (newVariable != '') {\n          createMonitoredVariable(monitoredVariable).then(response => {\n            setResult({\n              done: true,\n              good: true,\n              message: response.msg\n            });\n          }).catch(error => {\n            setResult({\n              done: true,\n              good: false,\n              message: error.msg\n            });\n          });\n        }\n\n        if (newEvent != '') {\n          createMonitoredEvent(monitoredEvent).then(response => {\n            setResult({\n              done: true,\n              good: true,\n              message: response.msg\n            });\n          }).catch(error => {\n            setResult({\n              done: true,\n              good: false,\n              message: error.msg\n            });\n          });\n        }\n      } else {\n        if (result.good) {\n          props.onGood({ ...props.func,\n            funcName: newFuncName\n          });\n        } else props.onError();\n      }\n    }\n\n    props.onCancel();\n    document.location.reload(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Add Functionality Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.box,\n            spacing: 3,\n            item: true,\n            container: true,\n            direction: \"column\",\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: `smart-component-label-${availableSmartComponents}`,\n                children: \"DINASORE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: `smart-component-label-${availableSmartComponents}`,\n                value: smartComponentChoice,\n                onChange: handleSmartComponentChoice,\n                children: (availableSmartComponents || []).map(sc => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: sc.scName,\n                    children: sc.scName\n                  }, sc.scId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 88\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Function Block\",\n                helperText: !validFunctionBlock ? FUNCTION_BLOCK_RE.toString() : '',\n                error: !validFunctionBlock,\n                required: true,\n                onChange: event => {\n                  setNewFb(event.target.value);\n                  if (!validFunctionBlock) setValidFunctionBlock(isFunctionBlockValid(event.target.value.trim()));\n                },\n                fullWidth: true,\n                value: newFb\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Variable\",\n                helperText: !validVariable ? VARIABLE_RE.toString() : '',\n                error: !validVariable,\n                required: true,\n                onChange: event => {\n                  setNewVariable(event.target.value);\n                  if (!validVariable) setValidVariable(isVariableValid(event.target.value.trim()));\n                },\n                fullWidth: true,\n                value: newVariable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Event\",\n                helperText: !validEvent ? EVENT_RE.toString() : '',\n                error: !validEvent,\n                required: true,\n                onChange: event => {\n                  setNewEvent(event.target.value);\n                  if (!validEvent) setValidEvent(isEventValid(event.target.value.trim()));\n                },\n                fullWidth: true,\n                value: newEvent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.buttons,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: sending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: action,\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: sending,\n            onClick: props.onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AddFunctionalityDetails, \"lNhY3ul82GyaswiwXfjATeWRg3I=\", false, function () {\n  return [useDialogStyles, useStore, useMountEffect];\n});\n\n_c2 = AddFunctionalityDetails;\nexport const DigitalTwinMonitoring = () => {\n  _s3();\n\n  const classes = useFunctionBlockStyles();\n  const [fetching, setFetching] = useState(true);\n  const [error, setError] = useState('');\n  const [newFunc, setNewFunc] = useState('');\n  const [confirmEditing, setConfirmEditing] = useState(false);\n  const [confirmAddFunc, setConfirmAddFunc] = useState(false);\n  const [validNewFunc, setValidNewFunc] = useState(true);\n  const errorFetchingFunctionalityState = {\n    label: error,\n    state: ConfirmActionStateLabel.error,\n    positiveLabel: 'Ok'\n  };\n  const [redirectTo, setRedirectTo] = useState(-1);\n  const {\n    data: functionalities,\n    dispatchAction: dispatchFunctionalityActions\n  } = useStore('functionalities');\n  const {\n    data: digitalTwins,\n    dispatchAction: dispatchDigitalTwinActions\n  } = useStore('digitalTwins');\n  const {\n    data: monitoredVariables,\n    dispatchAction: dispatchMonitoredVariableActions\n  } = useStore('monitoredVariables');\n  const {\n    data: monitoredEvents,\n    dispatchAction: dispatchMonitoredEventActions\n  } = useStore('monitoredEvents');\n\n  const onCancel = () => setError('');\n\n  const updateFunctionalities = funcs => dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs));\n\n  const updateDigitalTwins = dts => dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(dts));\n\n  const updateMonitoredVariables = monVars => dispatchMonitoredVariableActions(MonitoredVariableActions.updateMonitoredVariable(monVars));\n\n  const updateMonitoredEvents = monEvs => dispatchMonitoredEventActions(MonitoredEventActions.updateMonitoredEvent(monEvs));\n\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({\n    funcId: functionalityId,\n    funcUserId: 1,\n    funcName: newFunc,\n    funcdtId: 1,\n    funcSamplingTime: 10\n  }));\n\n  const [editingFunc, setEditingFunc] = useState(null);\n  const [addDetailsFunc, setAddDetailsFunc] = useState(null);\n  const indexes = [{\n    label: 'Functionality',\n    key: 'funcName'\n  }, {\n    label: 'Digital Twin',\n    key: 'dtName'\n  } //{label: 'Sampling Time', key: 'funcSamplingTime'}\n  ]; // Recuperar da base de dados as funcionalidades (Functionality)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadFunctionalities(functionalities).then(result => updateFunctionalities(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); // Recuperar da base de dados os digital twins (DigitalTwin)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadDigitalTwins(digitalTwins).then(result => updateDigitalTwins(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n\n  const isFunctionalityValid = func => NEW_FUNCTIONALITY_RE.test(func);\n\n  const validateAndCreate = () => {\n    const validFunc = isFunctionalityValid(newFunc);\n    if (!validFunc) setValidNewFunc(false);else {\n      setConfirmAddFunc(true);\n    }\n  };\n\n  const buildFunctionality = () => ({\n    funcName: newFunc,\n    funcId: functionalityId,\n    funcdtId: digitalTwinIdChoice,\n    funcUserId,\n    funcdtName: digitalTwinChoice,\n    funcSamplingTime: 10\n  });\n\n  const addNewFunctionalityAction = () => {\n    const functionality = buildFunctionality();\n    return new Promise((res, rej) => {\n      createFunctionality(functionality).then(result => {\n        functionalityId = result.extra.lastInsertedId;\n        res('Functionality created');\n      }).catch(e => rej(e.msg));\n    });\n  };\n\n  const confirmFunctionalityCreationActionStates = {\n    start: {\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\n      positiveLabel: 'Ok',\n      negativeLabel: 'Cancel',\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: 'Functionality Created',\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: 'Ok'\n    },\n    error: {\n      label: 'Error Creating Functionality',\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: 'Ok'\n    }\n  };\n  const confirmActionProps = {\n    title: 'Add Functionality',\n    states: confirmFunctionalityCreationActionStates,\n    currentState: confirmFunctionalityCreationActionStates.start,\n    onCancel: () => setConfirmAddFunc(false),\n    onError: () => setConfirmAddFunc(false),\n    onSuccess: () => {\n      addFunc();\n      setNewFunc('');\n      document.location.reload(true);\n    },\n    action: addNewFunctionalityAction\n  };\n\n  const getDataFunctionality = () => functionalities.map(functionality => {\n    return { ...functionality\n    };\n  }); // Recuperar da base de dados os monitoredEvents (MonitoredEvent)\n\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadMonitoredEvents(monitoredEvents).then(result => updateMonitoredEvents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); // Recuperar da base de dados as monitoredVariables (MonitoredVariable)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadMonitoredVariables(monitoredVariables).then(result => updateMonitoredVariables(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n\n  const deleteFunctionalityAction = func => {\n    return new Promise(async (res, rej) => {\n      let monitoredVariablesToDelete = [];\n      let monitoredEventsToDelete = [];\n      let i = 0;\n\n      while (i < monitoredVariables.length) {\n        if (monitoredVariables[i].funcIdAssociated === func.funcId) {\n          monitoredVariablesToDelete.push(monitoredVariables[i]);\n        }\n\n        i++;\n      }\n\n      i = 0;\n\n      while (i < monitoredEvents.length) {\n        if (monitoredEvents[i].funcIdAssociated === func.funcId) {\n          monitoredEventsToDelete.push(monitoredEvents[i]);\n        }\n\n        i++;\n      }\n\n      if (!func.funcId) {\n        rej('Error');\n        return;\n      }\n\n      try {\n        const response = await deleteFunctionality(func.funcId);\n        i = 0;\n\n        while (i < monitoredVariablesToDelete.length) {\n          const response1 = await deleteMonitoredVariable(monitoredVariablesToDelete[i].idMonitoredVariable);\n          res(response1);\n          i++;\n        }\n\n        i = 0;\n\n        while (i < monitoredEventsToDelete.length) {\n          const response1 = await deleteMonitoredEvent(monitoredEventsToDelete[i].idMonitoredEvent);\n          i++;\n        }\n\n        res(response);\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }; //Adicionar Detalhes à Funcionalidade\n\n\n  const cancelAddDetails = () => setAddDetailsFunc(null);\n\n  const showAddDetails = func => setAddDetailsFunc(func); //Editar a Funcionalidade\n\n\n  const cancelEditing = () => setEditingFunc(null);\n\n  const showEditing = func => setEditingFunc(func);\n\n  const onGoodEditing = editingFunctionality => {\n    const newFunctionalities = functionalities.map(func => {\n      if (func.funcId === editingFunctionality.funcId) return { ...func,\n        funcName: editingFunctionality.funcName,\n        funcdtId: editingFunctionality.funcdtId\n      };\n      return func;\n    });\n    cancelEditing();\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities));\n  }; // Associar um digital twin à nova funcionalidade criada\n\n\n  const [digitalTwinChoice, setDigitalTwinChoice] = useState('');\n  const [digitalTwinIdChoice, setDigitalTwinIdChoice] = useState(0);\n\n  const handleDigitalTwinChoice = event => {\n    setDigitalTwinChoice(event.target.value);\n    let i = 0;\n\n    while (i < digitalTwins.length) {\n      if (digitalTwins[i].dtName === event.target.value) {\n        setDigitalTwinIdChoice(digitalTwins[i].dtId);\n      }\n\n      i++;\n    }\n  };\n\n  const redirectToList = func => {\n    setRedirectTo(func.funcId);\n  };\n\n  const indexes_test = [{\n    label: 'delete',\n    key: 'delete'\n  }];\n  if (redirectTo !== -1) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `/functionality-details/${redirectTo}`,\n    push: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 634,\n    columnNumber: 11\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Navigator, {\n    title: \"Digital Twin Monitoring\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [error !== '' ? /*#__PURE__*/_jsxDEV(ConfirmAction, {\n        title: \"Fetching Functionalities\",\n        currentState: errorFetchingFunctionalityState,\n        states: {\n          error: errorFetchingFunctionalityState\n        },\n        onCancel: onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(LazyComponent, {\n        loaded: !fetching,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [confirmEditing ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 19\n          }, this) : editingFunc ? /*#__PURE__*/_jsxDEV(EditFunctionalityDialog, {\n            onGood: onGoodEditing,\n            func: editingFunc,\n            onError: cancelEditing,\n            onCancel: cancelEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 19\n          }, this) : null, confirmAddFunc ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 19\n          }, this) : addDetailsFunc ? /*#__PURE__*/_jsxDEV(AddFunctionalityDetails, {\n            onGood: onGoodEditing,\n            func: addDetailsFunc,\n            onError: cancelAddDetails,\n            onCancel: cancelAddDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 20\n          }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(JPTable, {\n                sortedkey: \"funcName\",\n                data: getDataFunctionality(),\n                updateData: updateFunctionalities,\n                indexes: indexes,\n                tName: \"Functionality\",\n                extra: {\n                  delete: {\n                    action: deleteFunctionalityAction,\n                    labelKey: 'funcName',\n                    onSuccessDelete: () => {}\n                  },\n                  edit: {\n                    action: showEditing\n                  },\n                  details: {\n                    action: redirectToList\n                  },\n                  add: {\n                    action: showAddDetails\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: \"New Functionality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.box,\n                  spacing: 1,\n                  item: true,\n                  container: true,\n                  direction: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      helperText: !validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : '',\n                      error: !validNewFunc,\n                      label: \"Insert new functionality name\",\n                      required: true,\n                      onChange: event => {\n                        setNewFunc(event.target.value);\n                        if (!validNewFunc) setValidNewFunc(isFunctionalityValid(event.target.value.trim()));\n                      },\n                      fullWidth: true,\n                      value: newFunc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 698,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: `digital-twin-label-${newFunc}`,\n                      children: \"Digital Twin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 713,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: `digital-twin-label-${newFunc}`,\n                      value: digitalTwinChoice,\n                      onChange: handleDigitalTwinChoice,\n                      children: (digitalTwins || []).map(digitalTwin => {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: digitalTwin.dtName,\n                          children: digitalTwin.dtName\n                        }, digitalTwin.dtId, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 715,\n                          columnNumber: 89\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 712,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    justify: \"flex-end\",\n                    spacing: 1,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        variant: \"contained\",\n                        onClick: validateAndCreate,\n                        children: \"Add Functionality\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 720,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 718,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 637,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(DigitalTwinMonitoring, \"APjwpUVNdQwFER5Byig6pa0Rog4=\", false, function () {\n  return [useFunctionBlockStyles, useStore, useStore, useStore, useStore, useMountEffect, useMountEffect, useMountEffect, useMountEffect];\n});\n\n_c3 = DigitalTwinMonitoring;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditFunctionalityDialog\");\n$RefreshReg$(_c2, \"AddFunctionalityDetails\");\n$RefreshReg$(_c3, \"DigitalTwinMonitoring\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinMonitoring.tsx"],"names":["React","useState","Navigator","ConfirmAction","ConfirmActionStateLabel","LazyComponent","JPTable","useMountEffect","getOrDownloadDigitalTwins","getOrDownloadFunctionalities","getOrDownloadMonitoredEvents","getOrDownloadMonitoredVariables","getOrDownloadAssociatedSmartComponents","useStore","FunctionalityActions","DigitalTwinActions","AssociatedSmartComponentActions","MonitoredVariableActions","MonitoredEventActions","TextField","Grid","Button","Box","Dialog","DialogTitle","CircularProgress","Select","InputLabel","MenuItem","DialogActions","createFunctionality","createMonitoredEvent","createMonitoredVariable","deleteMonitoredEvent","deleteMonitoredVariable","updateFunctionality","deleteFunctionality","useDialogStyles","useFunctionBlockStyles","Redirect","CheckCircle","NEW_FUNCTIONALITY_RE","FUNCTION_BLOCK_RE","VARIABLE_RE","EVENT_RE","functionalityId","idMonitoredVariable","idMonitoredEvent","funcUserId","EditFunctionalityDialog","props","newFuncName","setNewFuncName","func","funcName","sending","setSending","result","setResult","done","classes","action","funcId","then","response","good","message","msg","catch","error","finally","onGood","onError","onCancel","document","location","reload","box","event","target","value","AddFunctionalityDetails","fetching","setFetching","data","associatedSmartComponents","dispatchAction","dispatchAssociatedSmartComponentActions","updateAssociatedSmartComponents","assScs","setError","availableSmartComponents","setAvailableSmartComponents","setTimeout","e","i","length","scDtId","funcdtId","smartComponentChoice","setSmartComponentChoice","smartComponentIdChoice","setSmartComponentIdChoice","handleSmartComponentChoice","j","scName","scId","validFunctionBlock","setValidFunctionBlock","newFb","setNewFb","isFunctionBlockValid","fb","test","validVariable","setValidVariable","newVariable","setNewVariable","isVariableValid","variable","buildMonitoredVariable","monitoredVariableName","fbAssociated","funcIdAssociated","scAssociated","validEvent","setValidEvent","newEvent","setNewEvent","isEventValid","buildMonitoredEvent","monitoredEventName","monitoredVariable","monitoredEvent","map","sc","toString","trim","buttons","DigitalTwinMonitoring","newFunc","setNewFunc","confirmEditing","setConfirmEditing","confirmAddFunc","setConfirmAddFunc","validNewFunc","setValidNewFunc","errorFetchingFunctionalityState","label","state","positiveLabel","redirectTo","setRedirectTo","functionalities","dispatchFunctionalityActions","digitalTwins","dispatchDigitalTwinActions","monitoredVariables","dispatchMonitoredVariableActions","monitoredEvents","dispatchMonitoredEventActions","updateFunctionalities","funcs","updateDigitalTwins","dts","updateMonitoredVariables","monVars","updateMonitoredVariable","updateMonitoredEvents","monEvs","updateMonitoredEvent","addFunc","addFunctionality","funcSamplingTime","editingFunc","setEditingFunc","addDetailsFunc","setAddDetailsFunc","indexes","key","isFunctionalityValid","validateAndCreate","validFunc","buildFunctionality","digitalTwinIdChoice","funcdtName","digitalTwinChoice","addNewFunctionalityAction","functionality","Promise","res","rej","extra","lastInsertedId","confirmFunctionalityCreationActionStates","start","negativeLabel","executing","success","confirmActionProps","title","states","currentState","onSuccess","getDataFunctionality","deleteFunctionalityAction","monitoredVariablesToDelete","monitoredEventsToDelete","push","response1","err","cancelAddDetails","showAddDetails","cancelEditing","showEditing","onGoodEditing","editingFunctionality","newFunctionalities","setDigitalTwinChoice","setDigitalTwinIdChoice","handleDigitalTwinChoice","dtName","dtId","redirectToList","indexes_test","delete","labelKey","onSuccessDelete","edit","details","add","digitalTwin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Navigator } from '../templates/Navigator/Navigator'\r\nimport { ConfirmAction, ConfirmActionState, ConfirmActionStateLabel, ConfirmActionProps } from '../templates/ConfirmAction/ConfirmAction'\r\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent'\r\nimport { JPTable } from '../templates/Table/JPTable'\r\nimport { Functionality, DigitalTwin, AssociatedSmartComponent, MonitoredVariable, MonitoredEvent} from '../../model'\r\nimport { useMountEffect } from '../../utils/main'\r\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities, getOrDownloadMonitoredEvents, getOrDownloadMonitoredVariables} from '../../utils/digitalTwins'\r\nimport { getOrDownloadAssociatedSmartComponents } from '../../utils/associatedSmartComponents'\r\nimport { useStore } from '../templates/Store/Store'\r\nimport { FunctionalityActions , DigitalTwinActions, AssociatedSmartComponentActions, MonitoredVariableActions, MonitoredEventActions} from '../../redux/actions'\r\nimport { RequestResponseState } from '../../services/api/api'\r\nimport { TextField, Grid, Button, Box, Dialog, DialogTitle, CircularProgress , Select, InputLabel, MenuItem, DialogContent, DialogActions, DialogContentText } from '@material-ui/core'\r\nimport { createFunctionality, createMonitoredEvent, createMonitoredVariable, deleteMonitoredEvent, deleteMonitoredVariable, updateFunctionality } from '../../services/api/digital-twin'\r\nimport { deleteFunctionality} from '../../services/api/digital-twin'\r\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style'\r\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { CheckCircle } from '@material-ui/icons'\r\n\r\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/\r\nconst FUNCTION_BLOCK_RE = /[a-zA-Z0-9]{3,}/\r\nconst VARIABLE_RE = /[a-zA-Z0-9]{3,}/\r\nconst EVENT_RE = /[a-zA-Z0-9]{3,}/\r\n\r\nlet functionalityId = -1\r\nlet idMonitoredVariable = -1\r\nlet idMonitoredEvent = -1\r\nconst funcUserId = 1\r\n\r\nconst EditFunctionalityDialog = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n  const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n\r\n  const [sending, setSending] : [boolean, Function] = useState(false)\r\n\r\n  const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n\r\n  const classes = useDialogStyles()\r\n  \r\n  const action = () => {\r\n\r\n    if(props.func.funcId) {\r\n        \r\n        props.func.funcName = newFuncName\r\n\r\n        if(!result.done) {\r\n\r\n              setSending(true)\r\n  \r\n              updateFunctionality(props.func)\r\n\r\n                  .then((response: RequestResponseState) => {\r\n                      setResult({done:true, good: true, message: response.msg})\r\n                  })\r\n\r\n                  .catch((error: RequestResponseState) => {\r\n                      setResult({done: true, good: false, message: error.msg})\r\n                  })\r\n\r\n                  .finally(() => setSending(false))\r\n\r\n          }\r\n\r\n          else {\r\n\r\n              if(result.good)\r\n                  props.onGood({...props.func, funcName: newFuncName})\r\n              \r\n              else\r\n                  props.onError()\r\n\r\n         }\r\n\r\n        }\r\n\r\n        props.onCancel()\r\n        document.location.reload(true)\r\n  }\r\n\r\n  return (\r\n        <div>\r\n            <Dialog open={true}  aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Edit Functionality</DialogTitle>\r\n               <Box className={classes.box}>\r\n                        {\r\n                            !result.done \r\n                            ?\r\n                                <TextField \r\n                                    disabled={sending}\r\n                                    value={newFuncName}\r\n                                    onChange={(event) => setNewFuncName(event.target.value)}\r\n                                />    \r\n                            :   \r\n                                <Grid container justify=\"center\">\r\n                                    <Grid item>\r\n                                    {\r\n                                        result.good \r\n                                            ?   <CheckCircle color=\"primary\" />\r\n                                            :   <Error color=\"error\" />\r\n                                    }\r\n                                    </Grid>\r\n                                        <Grid item>\r\n                                            <Box className={result.good ? classes.good : classes.error} textAlign=\"center\">{result.message}</Box>\r\n                                        </Grid>\r\n                                </Grid> \r\n                        }\r\n                 </Box>\r\n                <DialogActions>\r\n                    <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>                  \r\n                    <Grid item>\r\n                        {sending \r\n                            ? <CircularProgress color=\"primary\" />\r\n                            : <Button onClick={action}>Ok</Button>\r\n                        }\r\n                    </Grid>\r\n                </DialogActions>\r\n            </Dialog>\r\n       \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst AddFunctionalityDetails = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n    const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n  \r\n    const classes = useDialogStyles()\r\n  \r\n    const [sending, setSending] : [boolean, Function] = useState(false)\r\n  \r\n    const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n\r\n    const [fetching,setFetching] = useState(true)\r\n    const {data: associatedSmartComponents, dispatchAction: dispatchAssociatedSmartComponentActions} = useStore('associatedSmartComponents')\r\n    const updateAssociatedSmartComponents = (assScs: AssociatedSmartComponent[]) => dispatchAssociatedSmartComponentActions(AssociatedSmartComponentActions.updateAssociatedSmartComponents(assScs))\r\n    const [error,setError] = useState('')\r\n    \r\n    const [availableSmartComponents, setAvailableSmartComponents] : [AssociatedSmartComponent[] , Function] = useState([])\r\n\r\n    // Recuperar da base de dados os Smart Components Associados ao Digital Twin associado\r\n    useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadAssociatedSmartComponents(associatedSmartComponents)\r\n        .then((result: AssociatedSmartComponent[]) =>  updateAssociatedSmartComponents(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n    })\r\n\r\n    let i = 0\r\n\r\n    while( i < associatedSmartComponents.length ) {\r\n        if(associatedSmartComponents[i].scDtId === props.func.funcdtId){\r\n            availableSmartComponents[i] = associatedSmartComponents[i]\r\n        }\r\n        i++\r\n    }\r\n\r\n    // Escolher um AssociatedSmartComponent de dentro dos disponíveis pelo DT respectivo \r\n    const [smartComponentChoice, setSmartComponentChoice] = useState('')\r\n    const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0)\r\n\r\n    const handleSmartComponentChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSmartComponentChoice(event.target.value as string);\r\n    let j = 0;\r\n    while(j < associatedSmartComponents.length)\r\n    {\r\n        if(associatedSmartComponents[j].scName === (event.target.value as string))\r\n        {\r\n            setSmartComponentIdChoice(associatedSmartComponents[j].scId)\r\n        }\r\n        j++;\r\n    }\r\n    };\r\n\r\n    //Variáveis e funções de apoio à escolha do Function Block\r\n    const [validFunctionBlock, setValidFunctionBlock] : [boolean,Function] = useState(true)\r\n    const [newFb,setNewFb] : [string,Function] = useState('')\r\n    const isFunctionBlockValid = (fb:string) => NEW_FUNCTIONALITY_RE.test(fb)\r\n\r\n    //Variáveis e funções de apoio à escolha da Variable\r\n    const [validVariable, setValidVariable] : [boolean,Function] = useState(true)\r\n    const [newVariable,setNewVariable] : [string,Function] = useState('')\r\n    const isVariableValid = (variable:string) => VARIABLE_RE.test(variable)\r\n\r\n    const buildMonitoredVariable = (funcId: number | undefined) : MonitoredVariable => ({  \r\n        monitoredVariableName: newVariable, fbAssociated: newFb, \r\n        funcIdAssociated: funcId , idMonitoredVariable: idMonitoredVariable,\r\n        scAssociated: smartComponentChoice\r\n    })\r\n\r\n    //Variáveis e funções de apoio à escolha do Event\r\n    const [validEvent, setValidEvent] : [boolean,Function] = useState(true)\r\n    const [newEvent,setNewEvent] : [string,Function] = useState('')\r\n    const isEventValid = (event:string) => EVENT_RE.test(event)\r\n  \r\n    const buildMonitoredEvent = (funcId: number | undefined) : MonitoredEvent => ({  \r\n        monitoredEventName: newEvent, fbAssociated: newFb, \r\n        funcIdAssociated: funcId , idMonitoredEvent: idMonitoredEvent,\r\n        scAssociated: smartComponentChoice\r\n    })\r\n\r\n    //Função de atualização da database com os dados escolhidos \r\n    const action = () => {    \r\n        \r\n        let funcId = props.func.funcId\r\n        const monitoredVariable: MonitoredVariable = buildMonitoredVariable(funcId)\r\n        const monitoredEvent: MonitoredEvent = buildMonitoredEvent(funcId)\r\n\r\n        if(props.func.funcId) {\r\n            \r\n            if(!result.done) {\r\n                \r\n                setSending(true)\r\n\r\n                updateFunctionality(props.func)\r\n  \r\n                    .then((response: RequestResponseState) => {\r\n                        setResult({done:true, good: true, message: response.msg})\r\n                    })\r\n                    .catch((error: RequestResponseState) => {\r\n                        setResult({done: true, good: false, message: error.msg})\r\n                    })\r\n  \r\n                if(newVariable!=''){\r\n\r\n                    createMonitoredVariable(monitoredVariable)\r\n                        .then((response: RequestResponseState) => {\r\n                            setResult({done:true, good: true, message: response.msg})\r\n                        })\r\n                        .catch((error: RequestResponseState) => {\r\n                            setResult({done: true, good: false, message: error.msg})\r\n                        })\r\n                }\r\n                \r\n\r\n                if(newEvent!=''){\r\n\r\n                    createMonitoredEvent(monitoredEvent)\r\n                        .then((response: RequestResponseState) => {\r\n                            setResult({done:true, good: true, message: response.msg})\r\n                        })\r\n                        .catch((error: RequestResponseState) => {\r\n                            setResult({done: true, good: false, message: error.msg})\r\n                        })\r\n                }\r\n\r\n\r\n            }\r\n  \r\n            else {\r\n  \r\n                if(result.good){\r\n                    props.onGood({...props.func, funcName: newFuncName})\r\n                    \r\n                }\r\n                else\r\n                    props.onError()\r\n            }\r\n        }\r\n\r\n        props.onCancel()\r\n        document.location.reload(true)\r\n    }\r\n\r\n    return (\r\n        <Dialog open={true}>\r\n            <DialogTitle>Add Functionality Details</DialogTitle>\r\n            <Box className={classes.box}>\r\n            <Grid item> \r\n\r\n                <Grid container item xs>\r\n                    <Grid className={classes.box} spacing={3} item container direction=\"column\" alignItems=\"flex-start\">\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel id={`smart-component-label-${availableSmartComponents}`}>DINASORE</InputLabel>\r\n                            <Select labelId={`smart-component-label-${availableSmartComponents}`} value={smartComponentChoice} onChange={handleSmartComponentChoice}>\r\n                            {(availableSmartComponents || []).map((sc: any) => {return <MenuItem key={sc.scId} value={sc.scName}>{sc.scName}</MenuItem>})}\r\n                            </Select> \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Function Block\"\r\n                                helperText={!validFunctionBlock ? FUNCTION_BLOCK_RE.toString() : ''}\r\n                                error={!validFunctionBlock}\r\n                                required\r\n                                onChange={(event) => {\r\n                                    setNewFb(event.target.value)\r\n                                    if(!validFunctionBlock)\r\n                                        setValidFunctionBlock(isFunctionBlockValid(event.target.value.trim()))\r\n                                    }}\r\n                                fullWidth\r\n                                value={newFb}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Variable\"\r\n                                helperText={!validVariable ? VARIABLE_RE.toString() : ''}\r\n                                error={!validVariable}\r\n                                required\r\n                                onChange={(event) => {\r\n                                    setNewVariable(event.target.value)\r\n                                    if(!validVariable)\r\n                                        setValidVariable(isVariableValid(event.target.value.trim()))\r\n                                    }}\r\n                                fullWidth\r\n                                value={newVariable}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Event\"\r\n                                helperText={!validEvent ? EVENT_RE.toString() : ''}\r\n                                error={!validEvent}\r\n                                required\r\n                                onChange={(event) => {\r\n                                    setNewEvent(event.target.value)\r\n                                    if(!validEvent)\r\n                                        setValidEvent(isEventValid(event.target.value.trim()))\r\n                                    }}\r\n                                fullWidth\r\n                                value={newEvent}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.buttons} container direction=\"row\" justify=\"space-between\">\r\n                <Grid item>\r\n                    {sending \r\n                        ? <CircularProgress color=\"primary\" />\r\n                        : <Button onClick={action}>Ok</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>\r\n                </Grid>\r\n            </Grid>\r\n         </Box>\r\n        </Dialog>\r\n    )\r\n  \r\n}\r\n\r\nexport const DigitalTwinMonitoring = () => {\r\n    \r\n  const classes = useFunctionBlockStyles()\r\n\r\n  const [fetching,setFetching] = useState(true)\r\n  const [error,setError] = useState('')\r\n  const [newFunc,setNewFunc] : [string,Function] = useState('')\r\n\r\n  const [confirmEditing,setConfirmEditing] : [boolean, Function] = useState(false)\r\n  const [confirmAddFunc,setConfirmAddFunc] : [boolean, Function] = useState(false)\r\n\r\n  const [validNewFunc, setValidNewFunc] : [boolean,Function] = useState(true)\r\n\r\n  const errorFetchingFunctionalityState : ConfirmActionState = {\r\n    label: error,\r\n    state: ConfirmActionStateLabel.error,\r\n    positiveLabel: 'Ok'\r\n  }\r\n\r\n  const [redirectTo, setRedirectTo] : [number, Function] = useState(-1)\r\n\r\n  const {data:functionalities, dispatchAction:dispatchFunctionalityActions} = useStore('functionalities')\r\n  const {data:digitalTwins, dispatchAction:dispatchDigitalTwinActions} = useStore('digitalTwins')\r\n  const {data:monitoredVariables, dispatchAction:dispatchMonitoredVariableActions} = useStore('monitoredVariables')\r\n  const {data:monitoredEvents, dispatchAction:dispatchMonitoredEventActions} = useStore('monitoredEvents')\r\n\r\n  const onCancel = () => setError('')\r\n\r\n  const updateFunctionalities = (funcs: Functionality[]) => dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs))\r\n  const updateDigitalTwins = (dts: DigitalTwin[]) => dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(dts))\r\n  const updateMonitoredVariables = (monVars: MonitoredVariable[]) => dispatchMonitoredVariableActions(MonitoredVariableActions.updateMonitoredVariable(monVars))\r\n  const updateMonitoredEvents = (monEvs: MonitoredEvent[]) => dispatchMonitoredEventActions(MonitoredEventActions.updateMonitoredEvent(monEvs))  \r\n  \r\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({funcId: functionalityId, funcUserId: 1 , funcName: newFunc, funcdtId: 1, funcSamplingTime:10}))\r\n \r\n  const [editingFunc, setEditingFunc] : [Functionality | null,Function] = useState(null)\r\n  const [addDetailsFunc, setAddDetailsFunc] : [Functionality | null,Function] = useState(null)\r\n\r\n  const indexes = [\r\n    {label: 'Functionality', key: 'funcName'},\r\n    {label: 'Digital Twin', key: 'dtName'},\r\n    //{label: 'Sampling Time', key: 'funcSamplingTime'}\r\n  ]\r\n\r\n  // Recuperar da base de dados as funcionalidades (Functionality)\r\n  useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadFunctionalities(functionalities)\r\n        .then((result: Functionality[]) => updateFunctionalities(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  // Recuperar da base de dados os digital twins (DigitalTwin)\r\n  useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadDigitalTwins(digitalTwins)\r\n        .then((result: DigitalTwin[]) => updateDigitalTwins(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  const isFunctionalityValid = (func:string) => NEW_FUNCTIONALITY_RE.test(func)\r\n\r\n  const validateAndCreate = () => {\r\n\r\n  const validFunc = isFunctionalityValid(newFunc)\r\n\r\n    if(!validFunc)\r\n        setValidNewFunc(false)\r\n    else{\r\n        setConfirmAddFunc(true)\r\n    }\r\n     \r\n    \r\n  }\r\n\r\n  const buildFunctionality = () : Functionality => ({\r\n    funcName: newFunc, funcId: functionalityId,\r\n    funcdtId: digitalTwinIdChoice , funcUserId, funcdtName: digitalTwinChoice,\r\n    funcSamplingTime: 10\r\n  })\r\n\r\n  const addNewFunctionalityAction = () : Promise<string> => {\r\n\r\n    const functionality : Functionality = buildFunctionality()\r\n\r\n    return new Promise<string>((res:Function, rej:Function)  => {\r\n\r\n        createFunctionality(functionality)\r\n\r\n            .then((result: RequestResponseState) => {\r\n            functionalityId = result.extra.lastInsertedId\r\n                res('Functionality created')\r\n            })\r\n\r\n            .catch((e:RequestResponseState) => rej(e.msg))\r\n\r\n    })\r\n  }\r\n\r\n  const confirmFunctionalityCreationActionStates = {\r\n    start: {\r\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\r\n      positiveLabel: 'Ok',\r\n      negativeLabel: 'Cancel',\r\n      state: ConfirmActionStateLabel.start\r\n    },\r\n    executing: {\r\n      label: '',\r\n      state: ConfirmActionStateLabel.executing,\r\n    },\r\n    success: {\r\n      label: 'Functionality Created',\r\n      state: ConfirmActionStateLabel.success,\r\n      positiveLabel: 'Ok'\r\n    },\r\n    error: {\r\n      label: 'Error Creating Functionality',\r\n      state: ConfirmActionStateLabel.error,\r\n      positiveLabel: 'Ok'\r\n    },\r\n  }\r\n\r\n  const confirmActionProps : ConfirmActionProps = {\r\n\r\n    title: 'Add Functionality',\r\n    states: confirmFunctionalityCreationActionStates,\r\n    currentState: confirmFunctionalityCreationActionStates.start,\r\n    onCancel: () => setConfirmAddFunc(false),\r\n    onError: () => setConfirmAddFunc(false),\r\n    onSuccess: () => {\r\n        addFunc()\r\n        setNewFunc('')\r\n        document.location.reload(true)\r\n    },\r\n    action: addNewFunctionalityAction,\r\n  }\r\n\r\n  const getDataFunctionality = () => functionalities.map((functionality: Functionality) => {\r\n\r\n    return {\r\n          ...functionality,\r\n    }\r\n  })\r\n\r\n   // Recuperar da base de dados os monitoredEvents (MonitoredEvent)\r\n   useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n    \r\n    setFetching(true)\r\n    getOrDownloadMonitoredEvents(monitoredEvents)\r\n        .then((result: MonitoredEvent[]) => updateMonitoredEvents(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n\r\n    })\r\n\r\n    // Recuperar da base de dados as monitoredVariables (MonitoredVariable)\r\n      useMountEffect(() => {\r\n\r\n        setTimeout(() => {\r\n\r\n        setFetching(true)\r\n        getOrDownloadMonitoredVariables(monitoredVariables)\r\n            .then((result: MonitoredVariable[]) => updateMonitoredVariables(result))\r\n            .catch((e:RequestResponseState) => setError(e.msg))\r\n            .finally(() => setFetching(false))\r\n        }, 0)\r\n    })\r\n\r\n  const deleteFunctionalityAction = (func: Functionality) : Promise<any> => {\r\n\r\n    return new Promise(async(res:Function,rej:Function) => {\r\n\r\n        let monitoredVariablesToDelete = []\r\n        let monitoredEventsToDelete = []\r\n        let i = 0\r\n        \r\n        while(i < monitoredVariables.length) {\r\n            if(monitoredVariables[i].funcIdAssociated === func.funcId){\r\n                monitoredVariablesToDelete.push(monitoredVariables[i])\r\n            } \r\n            i++\r\n        }   \r\n\r\n        i=0\r\n\r\n        while(i < monitoredEvents.length) {\r\n            if(monitoredEvents[i].funcIdAssociated === func.funcId){\r\n                monitoredEventsToDelete.push(monitoredEvents[i])\r\n            } \r\n            i++\r\n        }  \r\n\r\n        if(!func.funcId) {\r\n            rej('Error')\r\n            return\r\n        }\r\n\r\n        try {\r\n\r\n            const response : RequestResponseState = await deleteFunctionality(func.funcId)\r\n            \r\n            i=0\r\n            while(i < monitoredVariablesToDelete.length){\r\n                const response1 : RequestResponseState = await deleteMonitoredVariable(monitoredVariablesToDelete[i].idMonitoredVariable)\r\n                res(response1)\r\n                i++\r\n            }\r\n\r\n            i=0 \r\n            while(i < monitoredEventsToDelete.length){\r\n                const response1 : RequestResponseState = await deleteMonitoredEvent(monitoredEventsToDelete[i].idMonitoredEvent)\r\n                i++\r\n            }\r\n\r\n            res(response)\r\n          }\r\n\r\n        catch(err) {\r\n            rej(err)\r\n        }\r\n    })\r\n  }\r\n\r\n  //Adicionar Detalhes à Funcionalidade\r\n  const cancelAddDetails = () => setAddDetailsFunc(null);\r\n  const showAddDetails = (func: Functionality) => setAddDetailsFunc(func)\r\n  \r\n  //Editar a Funcionalidade\r\n  const cancelEditing = () => setEditingFunc(null)\r\n  const showEditing = (func: Functionality) => setEditingFunc(func)\r\n\r\n  const onGoodEditing = (editingFunctionality: Functionality) => {\r\n      \r\n    const newFunctionalities = functionalities.map((func: Functionality) => {\r\n\r\n    if(func.funcId === editingFunctionality.funcId)\r\n        return {...func, funcName: editingFunctionality.funcName, funcdtId: editingFunctionality.funcdtId}\r\n    return func\r\n\r\n    })\r\n  \r\n    cancelEditing()\r\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities))\r\n  }\r\n\r\n  // Associar um digital twin à nova funcionalidade criada\r\n  const [digitalTwinChoice, setDigitalTwinChoice] = useState('')\r\n  const [digitalTwinIdChoice, setDigitalTwinIdChoice] = useState(0)\r\n\r\n  const handleDigitalTwinChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setDigitalTwinChoice(event.target.value as string);\r\n    let i = 0;\r\n    while(i < digitalTwins.length)\r\n    {\r\n        if(digitalTwins[i].dtName === (event.target.value as string))\r\n        {\r\n            setDigitalTwinIdChoice(digitalTwins[i].dtId)\r\n        }\r\n        i++;\r\n    }\r\n   \r\n  };\r\n  \r\n  const redirectToList = (func : Functionality) => {\r\n      setRedirectTo(func.funcId)\r\n  }\r\n  const indexes_test = [\r\n    {label: 'delete', key: 'delete'},\r\n  ]\r\n  \r\n  if(redirectTo !== -1) \r\n  return  <Redirect to={`/functionality-details/${redirectTo}`} push={true}/>\r\n  \r\n  return (\r\n    <Navigator title=\"Digital Twin Monitoring\">\r\n    <> \r\n        {error !== ''\r\n                ? <ConfirmAction title='Fetching Functionalities' currentState={errorFetchingFunctionalityState} states={{error: errorFetchingFunctionalityState}} onCancel={onCancel}/>\r\n                : null \r\n        }\r\n        <LazyComponent loaded={!fetching}>\r\n        <>\r\n            {confirmEditing\r\n                ? <ConfirmAction {...confirmActionProps} /> \r\n                : editingFunc\r\n                ? <EditFunctionalityDialog\r\n                    onGood={onGoodEditing}\r\n                    func={editingFunc}\r\n                    onError={cancelEditing}\r\n                    onCancel={cancelEditing} />\r\n                    : null\r\n            }\r\n            {confirmAddFunc \r\n                ? <ConfirmAction {...confirmActionProps} /> \r\n                : addDetailsFunc\r\n                ?  <AddFunctionalityDetails\r\n                    onGood={onGoodEditing}\r\n                    func={addDetailsFunc}\r\n                    onError={cancelAddDetails}\r\n                    onCancel={cancelAddDetails} />\r\n                    : null\r\n            }\r\n            <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                    <JPTable\r\n                            sortedkey=\"funcName\"\r\n                            data={getDataFunctionality()} \r\n                            updateData={updateFunctionalities} \r\n                            indexes={indexes} \r\n                            tName='Functionality'\r\n                            extra={{\r\n                                delete: {\r\n                                    action: deleteFunctionalityAction,\r\n                                    labelKey: 'funcName',\r\n                                    onSuccessDelete: () => {}\r\n                                },\r\n                                edit: {\r\n                                    action: showEditing\r\n                                },\r\n                                details: {\r\n                                    action: redirectToList\r\n                                },\r\n                                add: {\r\n                                    action: showAddDetails\r\n                                }\r\n                            }} \r\n                    />\r\n                </Grid>\r\n                <Grid item xs>\r\n                    New Functionality\r\n                </Grid>\r\n                <Grid item> \r\n                    <Grid container item xs>\r\n                        <Grid className={classes.box} spacing={1} item container direction=\"row\">\r\n                            <Grid item xs={4}>\r\n                                <TextField\r\n                                    helperText={!validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : ''}\r\n                                    error={!validNewFunc}\r\n                                    label=\"Insert new functionality name\" \r\n                                    required\r\n                                    onChange={(event) => {\r\n                                        setNewFunc(event.target.value)\r\n                                        if(!validNewFunc)\r\n                                            setValidNewFunc(isFunctionalityValid(event.target.value.trim()))\r\n                                    }}\r\n                                    fullWidth\r\n                                    value={newFunc}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputLabel id={`digital-twin-label-${newFunc}`}>Digital Twin</InputLabel>\r\n                                <Select labelId={`digital-twin-label-${newFunc}`} value={digitalTwinChoice} onChange={handleDigitalTwinChoice}>\r\n                                {(digitalTwins || []).map((digitalTwin: any) => {return <MenuItem key={digitalTwin.dtId} value={digitalTwin.dtName}>{digitalTwin.dtName}</MenuItem>})}\r\n                                </Select>\r\n                            </Grid>\r\n                            <Grid container justify=\"flex-end\" spacing={1}>\r\n                                <Grid item>\r\n                                    <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={validateAndCreate}\r\n                                    >\r\n                                    Add Functionality\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n        </LazyComponent>\r\n    </>\r\n    </Navigator>\r\n )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}