{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { TextField, Grid, Button } from '@material-ui/core';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { Done, Clear } from '@material-ui/icons';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction';\nimport { useStore } from '../templates/Store/Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DigitalTwinForm = props => {\n  _s();\n\n  var _props$confirmDialog$, _props$confirmDialog$2, _props$confirmDialog$3;\n\n  /**styles */\n  const classes = useFunctionBlockStyles();\n  /**list of categories */\n\n  const {\n    data: functionBlockCategories,\n    dispatchAction: dispatchFunctionBlockCategoriesActions\n  } = useStore('functionBlockCategories');\n  const [validCategory, setValidCategory] = useState(true);\n  /**Digital Twin Name*/\n\n  const {\n    fbType,\n    setFbType\n  } = props.fbType;\n  const [validType, setValidType] = useState(true);\n  const onChangeFBType = useCallback(event => {\n    setFbType(event.target.value.trim());\n    setValidType(true);\n  }, [setFbType]);\n  /* Buttons */\n\n  const onCancel = props.cancel.action;\n  const cancelLabel = props.cancel.label;\n  const confirmLabel = props.confirmDialog.buttonTitle;\n  /* Confirmation */\n\n  const [confirm, setConfirm] = useState(false);\n\n  const validateFields = () => {\n    var _props$byPassFields;\n\n    const cValidType = fbType.trim() !== '';\n    const cValidDescription = fbDescription.trim() !== '';\n    const cValidGeneralCategory = !!fbGeneralCategory;\n    const cValidCategory = fbCategory.fbcId !== -1;\n    const cValidFile = !!((_props$byPassFields = props.byPassFields) === null || _props$byPassFields === void 0 ? void 0 : _props$byPassFields.fbImplFile) || fbImplFile.name !== '';\n    if (!cValidType) setValidType(cValidType);\n    if (!cValidDescription) setValidDescription(cValidDescription);\n    if (!cValidGeneralCategory) setValidGeneralCategory(cValidGeneralCategory);\n    if (!cValidCategory) setValidCategory(cValidCategory);\n    if (!cValidFile) setValidFile(cValidFile);\n    return cValidType && cValidGeneralCategory && cValidCategory && cValidDescription && cValidFile;\n  };\n\n  const confirmButtonAction = () => {\n    if (validateFields()) setConfirm(true);\n  };\n\n  const confirmActionStates = {\n    start: {\n      label: (_props$confirmDialog$ = props.confirmDialog.start) === null || _props$confirmDialog$ === void 0 ? void 0 : _props$confirmDialog$.label,\n      positiveLabel: (_props$confirmDialog$2 = props.confirmDialog.start) === null || _props$confirmDialog$2 === void 0 ? void 0 : _props$confirmDialog$2.positiveLabel,\n      negativeLabel: (_props$confirmDialog$3 = props.confirmDialog.start) === null || _props$confirmDialog$3 === void 0 ? void 0 : _props$confirmDialog$3.negativeLabel,\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: props.confirmDialog.success.label,\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    },\n    error: {\n      label: props.confirmDialog.error.label,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    }\n  };\n  const confirmActionProps = {\n    title: props.confirmDialog.title,\n    states: confirmActionStates,\n    currentState: confirmActionStates.executing,\n    onCancel: () => setConfirm(false),\n    onError: () => setConfirm(false),\n    onSuccess: props.confirmDialog.onSuccess,\n    action: props.confirmDialog.action\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", confirm ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      spacing: 1,\n      justify: \"space-between\",\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: onChangeFBType,\n          value: fbType,\n          helperText: \"\",\n          error: !validType,\n          fullWidth: true,\n          required: true,\n          label: \"Type\",\n          id: \"fb-type\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        container: true,\n        direction: \"row\",\n        spacing: 2,\n        alignItems: \"center\",\n        justify: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onCancel,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 86\n            }, this), cancelLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: confirmButtonAction,\n            color: \"primary\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(Done, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 93\n            }, this), confirmLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DigitalTwinForm, \"D2MCCpGXtTtTg8u3/AdHZ0gN6ak=\", false, function () {\n  return [useFunctionBlockStyles, useStore];\n});\n\n_c = DigitalTwinForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalTwinForm\");","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx"],"names":["React","useState","useCallback","TextField","Grid","Button","useFunctionBlockStyles","Done","Clear","ConfirmActionStateLabel","ConfirmAction","useStore","DigitalTwinForm","props","classes","data","functionBlockCategories","dispatchAction","dispatchFunctionBlockCategoriesActions","validCategory","setValidCategory","fbType","setFbType","validType","setValidType","onChangeFBType","event","target","value","trim","onCancel","cancel","action","cancelLabel","label","confirmLabel","confirmDialog","buttonTitle","confirm","setConfirm","validateFields","cValidType","cValidDescription","fbDescription","cValidGeneralCategory","fbGeneralCategory","cValidCategory","fbCategory","fbcId","cValidFile","byPassFields","fbImplFile","name","setValidDescription","setValidGeneralCategory","setValidFile","confirmButtonAction","confirmActionStates","start","positiveLabel","negativeLabel","state","executing","success","error","confirmActionProps","title","states","currentState","onError","onSuccess"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { FormControl, InputLabel, TextField, Grid, Select, MenuItem, Box, Button,Typography, Chip } from '@material-ui/core'\nimport { DigitalTwin } from '../../model'\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\nimport { setSimpleField, useMountEffect } from '../../utils/main'\nimport { Done, Clear } from '@material-ui/icons'\nimport { ReactComponent as UploadIcon } from '../../../icons/Upload.svg'\nimport { getOrDownloadFunctionBlockCategories } from '../../utils/functionBlock'\nimport { ConfirmActionProps, ConfirmActionStateLabel, ConfirmActionAction, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction'\nimport { useStore } from '../templates/Store/Store'\n\ninterface DigitalTwinProps {\n\n    dtName: {\n        dtName: string\n        setDtName: Function\n    },\n    cancel: {\n        label: string\n        action: () => void\n    },\n    confirmDialog: {\n        buttonTitle: string\n        title: string\n        initialState: ConfirmActionStateLabel\n        action: ConfirmActionAction\n        onSuccess : () => void\n        start? : {\n            label: string\n            positiveLabel: string\n            negativeLabel: string\n        }\n        success: {\n            label:string\n            positiveLabel: string\n        }\n        error: {\n            label: string\n            positiveLabel: string\n        }\n    },\n}\n\nexport const DigitalTwinForm = (props: DigitalTwinProps) => {\n\n    /**styles */\n    const classes = useFunctionBlockStyles()\n\n    /**list of categories */\n    const {data: functionBlockCategories, dispatchAction:dispatchFunctionBlockCategoriesActions} = useStore('functionBlockCategories')\n\n    const [validCategory,setValidCategory] : [boolean, Function] = useState(true)\n\n    /**Digital Twin Name*/\n    const {fbType, setFbType} = props.fbType\n    const [validType, setValidType] = useState(true)\n    const onChangeFBType = useCallback((event:any) => {\n\n        setFbType(event.target.value.trim())\n        setValidType(true)\n    \n      },[setFbType])\n\n    /* Buttons */\n\n    const onCancel = props.cancel.action\n    const cancelLabel = props.cancel.label\n\n    const confirmLabel = props.confirmDialog.buttonTitle\n\n    /* Confirmation */\n\n    const [confirm, setConfirm] : [boolean, Function] = useState(false)\n\n    const validateFields = () : boolean => {\n\n        const cValidType = fbType.trim() !== ''\n        const cValidDescription = fbDescription.trim() !== ''\n        const cValidGeneralCategory = !!fbGeneralCategory\n        const cValidCategory = fbCategory.fbcId !== -1\n        const cValidFile = !!props.byPassFields?.fbImplFile || fbImplFile.name !== ''  \n            \n        if(!cValidType) setValidType(cValidType)\n        if(!cValidDescription) setValidDescription(cValidDescription)\n        if(!cValidGeneralCategory) setValidGeneralCategory(cValidGeneralCategory)\n        if(!cValidCategory) setValidCategory(cValidCategory)\n        if(!cValidFile) setValidFile(cValidFile)\n    \n        return cValidType && cValidGeneralCategory && cValidCategory && cValidDescription && cValidFile\n    \n    }\n\n    const confirmButtonAction = () => {\n\n        if(validateFields())\n          setConfirm(true)\n    }\n\n    const confirmActionStates = {\n        start: {\n            label: props.confirmDialog.start?.label,\n            positiveLabel: props.confirmDialog.start?.positiveLabel,\n            negativeLabel: props.confirmDialog.start?.negativeLabel,\n            state: ConfirmActionStateLabel.start\n        },\n        executing: {\n          label: '',\n          state: ConfirmActionStateLabel.executing,\n        },\n        success: {\n          label: props.confirmDialog.success.label,\n          state: ConfirmActionStateLabel.success,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n        error: {\n          label: props.confirmDialog.error.label,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n      }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: props.confirmDialog.title,\n        states: confirmActionStates,\n        currentState: confirmActionStates.executing,\n        onCancel: () => setConfirm(false),\n        onError: () => setConfirm(false),\n        onSuccess: props.confirmDialog.onSuccess,\n        action:props.confirmDialog.action,\n      \n    }\n\n    return (\n        <> {confirm ? <ConfirmAction {...confirmActionProps} /> : null}\n            <Grid spacing={1} justify=\"space-between\" item xs container direction=\"row\">\n              <Grid item xs={6}>\n                <TextField\n                  onChange={onChangeFBType} \n                  value={fbType}\n                  helperText=\"\"\n                  error={!validType} \n                  fullWidth required \n                  label=\"Type\" \n                  id=\"fb-type\" \n                  type=\"text\" />\n            </Grid>\n            </Grid>\n            <Grid item xs container direction=\"row\" justify=\"space-between\" alignItems=\"center\"> \n              <Grid item xs={6} container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"flex-end\">\n                <Grid item>\n                    <Button onClick={onCancel} color=\"secondary\" variant=\"contained\"><Clear/>{cancelLabel}</Button>\n                </Grid>\n                <Grid>\n                  <Button onClick={confirmButtonAction} color=\"primary\" variant=\"contained\"><Done/>{confirmLabel}</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}