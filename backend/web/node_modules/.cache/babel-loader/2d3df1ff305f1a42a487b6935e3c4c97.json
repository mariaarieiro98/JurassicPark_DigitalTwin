{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { TextField, Grid, Button } from '@material-ui/core';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { Done, Clear } from '@material-ui/icons';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction';\nimport { SmartComponentActions } from '../../redux/actions';\nimport { useStore } from '../templates/Store/Store';\nimport { getOrDownloadSmartComponents } from '../../utils/smartComponents';\nimport { useMountEffect } from '../../utils/main';\nimport { SmartComponentList } from './SmartComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst updateOnRemoveSmartComponent = (smartComponents, smartComponentToRemove) => {\n  const newSmartComponents = [...smartComponents];\n  newSmartComponents.forEach(sc => {//sc.scName = sc.scName.filter((smartComponent: SmartComponent) => smartComponent.scName !== smartComponentToRemove.scName)\n  });\n  return newSmartComponents;\n};\n\nexport const DigitalTwinForm = props => {\n  _s();\n\n  var _props$confirmDialog$, _props$confirmDialog$2, _props$confirmDialog$3;\n\n  /**styles */\n  const classes = useFunctionBlockStyles();\n  /**Digital Twin*/\n\n  const {\n    dtName,\n    setDtName\n  } = props.dtName;\n  const [validDtName, setValidDtName] = useState(true);\n  const onChangeDtName = useCallback(event => {\n    setDtName(event.target.value.trim());\n    setValidDtName(true);\n  }, [setDtName]);\n  /* Buttons */\n\n  const onCancel = props.cancel.action;\n  const cancelLabel = props.cancel.label;\n  const confirmLabel = props.confirmDialog.buttonTitle;\n  /* Confirmation */\n\n  const [confirm, setConfirm] = useState(false);\n\n  const validateFields = () => {\n    const cValidDtName = dtName.trim() !== '';\n    if (!cValidDtName) setValidDtName(cValidDtName);\n    return cValidDtName;\n  };\n\n  const confirmButtonAction = () => {\n    if (validateFields()) setConfirm(true);\n  };\n\n  const confirmActionStates = {\n    start: {\n      label: (_props$confirmDialog$ = props.confirmDialog.start) === null || _props$confirmDialog$ === void 0 ? void 0 : _props$confirmDialog$.label,\n      positiveLabel: (_props$confirmDialog$2 = props.confirmDialog.start) === null || _props$confirmDialog$2 === void 0 ? void 0 : _props$confirmDialog$2.positiveLabel,\n      negativeLabel: (_props$confirmDialog$3 = props.confirmDialog.start) === null || _props$confirmDialog$3 === void 0 ? void 0 : _props$confirmDialog$3.negativeLabel,\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: props.confirmDialog.success.label,\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    },\n    error: {\n      label: props.confirmDialog.error.label,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    }\n  };\n  const confirmActionProps = {\n    title: props.confirmDialog.title,\n    states: confirmActionStates,\n    currentState: confirmActionStates.executing,\n    onCancel: () => setConfirm(false),\n    onError: () => setConfirm(false),\n    onSuccess: props.confirmDialog.onSuccess,\n    action: props.confirmDialog.action\n  }; //Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadSmartComponents(smartComponents).then(result => updateSmartComponents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); //Associar um SmartComponent pelo frontend\n\n  const [fetching, setFetching] = useState(true);\n  const {\n    data: smartComponents,\n    dispatchAction: dispatchSmartComponentActions\n  } = useStore('smartComponents');\n\n  const updateSmartComponents = scs => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(scs));\n\n  const [error, setError] = useState('');\n  const [smartComponentChoice, setSmartComponentChoice] = useState('');\n  const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0);\n\n  const handleSmartComponentChoice = event => {\n    setSmartComponentChoice(event.target.value);\n    props.associatedSc.setAssociatedSc(event.target.value);\n    let i = 0;\n\n    while (i < smartComponents.length) {\n      if (smartComponents[i].scName === event.target.value) {\n        setSmartComponentIdChoice(smartComponents[i].scId);\n      }\n\n      i++;\n    }\n  };\n\n  const {\n    associatedSc,\n    setAssociatedSc\n  } = props.associatedSc;\n  const onSmartComponentRemoval = useCallback(smartComponentToRemove => {\n    setAssociatedSc(prevSmartComponents => updateOnRemoveSmartComponent(prevSmartComponents, smartComponentToRemove));\n  }, [setAssociatedSc]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.box,\n    spacing: 2,\n    container: true,\n    direction: \"column\",\n    component: \"form\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", confirm ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        spacing: 1,\n        justify: \"space-between\",\n        item: true,\n        xs: true,\n        container: true,\n        direction: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: onChangeDtName,\n            value: dtName,\n            helperText: \"\",\n            error: !validDtName,\n            fullWidth: true,\n            required: true,\n            label: \"Insert New Digital Twin Name\",\n            id: \"dt-name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [props.order ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: props.order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.box,\n          spacing: 1,\n          item: true,\n          container: true,\n          direction: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(SmartComponentList, {\n              onSmartComponentRemoval: onSmartComponentRemoval,\n              setSmartComponents: setAssociatedSc,\n              title: \"Smart Component\",\n              smartComponents: associatedSc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.varEvButton,\n            size: \"small\",\n            variant: \"contained\" // onClick={action}\n            ,\n            children: props.newSc ? '+' : 'x'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          container: true,\n          direction: \"row\",\n          spacing: 2,\n          alignItems: \"center\",\n          justify: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onCancel,\n              color: \"secondary\",\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 84\n              }, this), cancelLabel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: confirmButtonAction,\n              color: \"primary\",\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Done, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 91\n              }, this), confirmLabel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 7\n  }, this);\n};\n\n_s(DigitalTwinForm, \"VECvxK1hyfU6Bo91gxnWZTkRH5E=\", false, function () {\n  return [useFunctionBlockStyles, useMountEffect, useStore];\n});\n\n_c = DigitalTwinForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalTwinForm\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx"],"names":["React","useState","useCallback","TextField","Grid","Button","useFunctionBlockStyles","Done","Clear","ConfirmActionStateLabel","ConfirmAction","SmartComponentActions","useStore","getOrDownloadSmartComponents","useMountEffect","SmartComponentList","updateOnRemoveSmartComponent","smartComponents","smartComponentToRemove","newSmartComponents","forEach","sc","DigitalTwinForm","props","classes","dtName","setDtName","validDtName","setValidDtName","onChangeDtName","event","target","value","trim","onCancel","cancel","action","cancelLabel","label","confirmLabel","confirmDialog","buttonTitle","confirm","setConfirm","validateFields","cValidDtName","confirmButtonAction","confirmActionStates","start","positiveLabel","negativeLabel","state","executing","success","error","confirmActionProps","title","states","currentState","onError","onSuccess","setTimeout","setFetching","then","result","updateSmartComponents","catch","e","setError","msg","finally","fetching","data","dispatchAction","dispatchSmartComponentActions","scs","updateSmartComponent","smartComponentChoice","setSmartComponentChoice","smartComponentIdChoice","setSmartComponentIdChoice","handleSmartComponentChoice","associatedSc","setAssociatedSc","i","length","scName","scId","onSmartComponentRemoval","prevSmartComponents","box","order","varEvButton","newSc"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { TextField, Grid, Button, InputLabel, Select, MenuItem, FormControl } from '@material-ui/core'\nimport { AssociatedSmartComponent, SmartComponent } from '../../model'\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\nimport { Done, Clear } from '@material-ui/icons'\nimport { ConfirmActionProps, ConfirmActionStateLabel, ConfirmActionAction, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction'\nimport { AssociatedSmartComponentActions, SmartComponentActions } from '../../redux/actions'\nimport { useStore } from '../templates/Store/Store'\nimport { getOrDownloadSmartComponents } from '../../utils/smartComponents'\nimport { useMountEffect } from '../../utils/main'\nimport { RequestResponseState } from '../../services/api/api'\nimport { SmartComponentList } from './SmartComponent'\n\nconst updateOnRemoveSmartComponent = (smartComponents: SmartComponent[], smartComponentToRemove: SmartComponent ) : SmartComponent[] => {\n\n  const newSmartComponents : SmartComponent[] = [...smartComponents]\n  newSmartComponents.forEach((sc: SmartComponent) => {\n\n      //sc.scName = sc.scName.filter((smartComponent: SmartComponent) => smartComponent.scName !== smartComponentToRemove.scName)\n\n  })\n\n  return newSmartComponents\n\n}\n\n\ninterface DigitalTwinFormProps {\n\n    dtName: {\n        dtName: string\n        setDtName: Function\n    },\n    associatedSc: {\n        associatedSc: SmartComponent[]\n        setAssociatedSc: Function\n    }\n    cancel: {\n        label: string\n        action: () => void\n    },\n    confirmDialog: {\n        buttonTitle: string\n        title: string\n        initialState: ConfirmActionStateLabel\n        action: ConfirmActionAction\n        onSuccess : () => void\n        start? : {\n            label: string\n            positiveLabel: string\n            negativeLabel: string\n        }\n        success: {\n            label:string\n            positiveLabel: string\n        }\n        error: {\n            label: string\n            positiveLabel: string\n        }\n    },\n    order?: number,\n    newSc?: boolean,\n}\n\nexport const DigitalTwinForm = (props: DigitalTwinFormProps) => {\n\n    /**styles */\n    const classes = useFunctionBlockStyles()\n\n    /**Digital Twin*/\n    const {dtName, setDtName} = props.dtName\n    const [validDtName, setValidDtName] = useState(true)\n    const onChangeDtName = useCallback((event:any) => {\n\n        setDtName(event.target.value.trim())\n        setValidDtName(true)\n    \n      },[setDtName])\n\n    /* Buttons */\n\n    const onCancel = props.cancel.action\n    const cancelLabel = props.cancel.label\n\n    const confirmLabel = props.confirmDialog.buttonTitle\n\n    /* Confirmation */\n\n    const [confirm, setConfirm] : [boolean, Function] = useState(false)\n\n    const validateFields = () : boolean => {\n\n        const cValidDtName = dtName.trim() !== ''\n            \n        if(!cValidDtName) setValidDtName(cValidDtName)\n    \n        return cValidDtName \n    \n    }\n\n    const confirmButtonAction = () => {\n\n        if(validateFields())\n          setConfirm(true)\n    }\n\n    const confirmActionStates = {\n        start: {\n            label: props.confirmDialog.start?.label,\n            positiveLabel: props.confirmDialog.start?.positiveLabel,\n            negativeLabel: props.confirmDialog.start?.negativeLabel,\n            state: ConfirmActionStateLabel.start\n        },\n        executing: {\n          label: '',\n          state: ConfirmActionStateLabel.executing,\n        },\n        success: {\n          label: props.confirmDialog.success.label,\n          state: ConfirmActionStateLabel.success,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n        error: {\n          label: props.confirmDialog.error.label,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n      }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: props.confirmDialog.title,\n        states: confirmActionStates,\n        currentState: confirmActionStates.executing,\n        onCancel: () => setConfirm(false),\n        onError: () => setConfirm(false),\n        onSuccess: props.confirmDialog.onSuccess,\n        action:props.confirmDialog.action,\n      \n    }\n\n    //Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n    useMountEffect(() => {\n\n      setTimeout(() => {\n  \n      setFetching(true)\n      getOrDownloadSmartComponents(smartComponents)\n          .then((result: SmartComponent[]) => updateSmartComponents(result))\n          .catch((e:RequestResponseState) => setError(e.msg))\n          .finally(() => setFetching(false))\n      }, 0)\n      })\n  \n    //Associar um SmartComponent pelo frontend\n      \n    const [fetching,setFetching] = useState(true)\n    const {data:smartComponents, dispatchAction:dispatchSmartComponentActions} = useStore('smartComponents')\n    const updateSmartComponents = (scs: SmartComponent[]) => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(scs))\n    const [error,setError] = useState('')\n\n    const [smartComponentChoice, setSmartComponentChoice] = useState('')\n    const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0)\n  \n    const handleSmartComponentChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\n      setSmartComponentChoice(event.target.value as string);\n      props.associatedSc.setAssociatedSc(event.target.value as string)\n      let i = 0;\n      while(i < smartComponents.length)\n      {\n          if( smartComponents[i].scName === (event.target.value as string))\n          {\n              setSmartComponentIdChoice(smartComponents[i].scId)\n          }\n          i++;\n      }\n    };\n\n    const {associatedSc, setAssociatedSc} = props.associatedSc\n\n    const onSmartComponentRemoval = useCallback((smartComponentToRemove: SmartComponent) => {\n\n      setAssociatedSc((prevSmartComponents: SmartComponent[]) =>  updateOnRemoveSmartComponent(prevSmartComponents,smartComponentToRemove))\n\n  }, [setAssociatedSc])\n\n    return (\n      <Grid className={classes.box} spacing={2} container direction=\"column\" component=\"form\">\n        <> {confirm ? <ConfirmAction {...confirmActionProps} /> : null}\n          <Grid spacing={1} justify=\"space-between\" item xs container direction=\"row\">\n            <Grid item xs={6}>\n              <TextField\n                onChange={onChangeDtName} \n                value={dtName}\n                helperText=\"\"\n                error={!validDtName} \n                fullWidth required \n                label=\"Insert New Digital Twin Name\" \n                id=\"dt-name\" \n                type=\"text\" />\n            </Grid>\n          </Grid>\n          <Grid item container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n            {props.order ?\n            <Grid item xs={1}>\n                {props.order}\n            </Grid>\n            : null\n            }\n            {/* <Grid item xs={3}>\n              <FormControl fullWidth required>\n                <InputLabel id={`digital-twin-label-${smartComponents}`}>SmartComponent</InputLabel>\n                <Select\n                  labelId={`digital-twin-label-${smartComponents}`}\n                  value={smartComponentChoice}\n                  onChange={handleSmartComponentChoice}\n                >\n                   {(smartComponents || []).map((smartComponent: any) => {return <MenuItem key={smartComponent.scId} value={smartComponent.scName}>{smartComponent.scName}</MenuItem>})}\n                </Select>\n              </FormControl>\n            </Grid> */}\n            <Grid className={classes.box} spacing={1} item container direction=\"row\">\n                <Grid item xs={6}>\n                  <SmartComponentList onSmartComponentRemoval={onSmartComponentRemoval} setSmartComponents={setAssociatedSc}  title=\"Smart Component\" smartComponents={associatedSc} />\n                </Grid>\n            </Grid>\n            <Grid item xs={1}>\n              <Button \n                className={classes.varEvButton} \n                size=\"small\" \n                variant=\"contained\"\n                // onClick={action}\n              >\n              {props.newSc ? '+' : 'x' }</Button>\n            </Grid>\n          </Grid>\n          <Grid item xs container direction=\"row\" justify=\"space-between\" alignItems=\"center\"> \n            <Grid item xs={6} container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"flex-end\">\n              <Grid item>\n                  <Button onClick={onCancel} color=\"secondary\" variant=\"contained\"><Clear/>{cancelLabel}</Button>\n              </Grid>\n              <Grid>\n                <Button onClick={confirmButtonAction} color=\"primary\" variant=\"contained\"><Done/>{confirmLabel}</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n    </Grid>\n  ) \n}"]},"metadata":{},"sourceType":"module"}