{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/NewDigitalTwinFunctionality.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navigator } from '../templates/Navigator/Navigator';\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent';\nimport { ConfirmAction, ConfirmActionStateLabel } from '../templates/ConfirmAction/ConfirmAction';\nimport { setTimeout } from 'timers';\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { useStore } from '../templates/Store/Store';\nimport { FunctionalityActions } from '../../redux/actions';\nimport { useMountEffect } from '../../utils/main';\nimport { getOrDownloadFunctionalities } from '../../utils/digitalTwins';\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style';\nimport { Box, Dialog, DialogTitle, CircularProgress } from '@material-ui/core';\nimport { CheckCircle, Error } from '@material-ui/icons';\nimport { updateFunctionality, createFunctionalities, deleteFunctionality } from '../../services/api/digital-twin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet digitalTwinId = -1;\nlet functionalityId = -1;\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/;\n\nconst EditFunctionalityDialog = props => {\n  _s();\n\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const classes = useDialogStyles();\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n\n  const action = () => {\n    if (props.func.funcId) {\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func.funcId, newFuncName).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        }).finally(() => setSending(false));\n      } else {\n        if (result.good) props.onGood({ ...props.func,\n          funcName: newFuncName\n        });else props.onError();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Functionality\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: !result.done ? /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: sending,\n        value: newFuncName,\n        onChange: event => setNewFuncName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: result.good ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(Error, {\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: result.good ? classes.good : classes.error,\n            textAlign: \"center\",\n            children: result.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.buttons,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: sending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: action,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: sending,\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditFunctionalityDialog, \"pa6Sqs49YPMvA2bR1UMOpZZcg98=\", false, function () {\n  return [useDialogStyles];\n});\n\n_c = EditFunctionalityDialog;\nexport const NewDigitalTwinFunctionality = () => {\n  _s2();\n\n  const [fetching, setFetching] = useState(true);\n  const [error, setError] = useState('');\n  const [newFunc, setNewFunc] = useState('');\n  const [confirmAddFunc, setConfirmAddFunc] = useState(false);\n  const [validNewFunc, setValidNewFunc] = useState(true);\n  const [redirectTo, setRedirectTo] = useState(\"\");\n  const errorFetchingFunctionalityState = {\n    label: error,\n    state: ConfirmActionStateLabel.error,\n    positiveLabel: 'Ok'\n  };\n  const {\n    data: functionalities,\n    dispatchAction: dispatchFunctionalityActions\n  } = useStore('functionalities');\n\n  const updateFunctionalities = funcs => dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs));\n\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({\n    funcId: functionalityId,\n    funcUserId: 1,\n    funcName: newFunc\n  }));\n\n  const [editingFunc, setEditingFunc] = useState(null);\n  const indexes = [{\n    label: 'Functionality',\n    key: 'dtFunctionality'\n  } //{label: 'Digital Twin', key: 'dt'},\n  //{label: 'State', key: 'dtDescription'},\n  //{label: 'AssociatedSmartComponents', key: 'dtSmartComponents'},\n  //{label: 'Monitored Variables/Events', key: 'dtMonitoredVariableEvent'},\n  //{label: 'Add Variables/Events', key: 'dtAddVariableEvent'},\n  //{label: 'Details', key: 'dtDetails'},\n  ];\n\n  const onCancel = () => setError('');\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadFunctionalities(functionalities).then(result => updateFunctionalities(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n\n  const isFunctionalityValid = func => NEW_FUNCTIONALITY_RE.test(func);\n\n  const validateAndCreate = () => {\n    const validFunc = isFunctionalityValid(newFunc);\n    if (!validFunc) setValidNewFunc(false);else setConfirmAddFunc(true);\n  };\n\n  const addNewFunctionalityAction = () => {\n    return new Promise((res, rej) => {\n      createFunctionalities(newFunc.trim()).then(result => {\n        functionalityId = result.extra.lastInsertedId;\n        res('Functionality created');\n      }).catch(e => rej(e.msg));\n    });\n  };\n\n  const confirmFunctionalityCreationActionStates = {\n    start: {\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\n      positiveLabel: 'Ok',\n      negativeLabel: 'Cancel',\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: 'Functionality Created',\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: 'Ok'\n    },\n    error: {\n      label: 'Error Creating Functionality',\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: 'Ok'\n    }\n  };\n  const confirmActionProps = {\n    title: 'Add Functionality',\n    states: confirmFunctionalityCreationActionStates,\n    currentState: confirmFunctionalityCreationActionStates.start,\n    onCancel: () => setConfirmAddFunc(false),\n    onError: () => setConfirmAddFunc(false),\n    onSuccess: () => {\n      addFunc();\n      setNewFunc('');\n    },\n    action: addNewFunctionalityAction\n  };\n\n  const deleteFunctionalityAction = func => {\n    return new Promise(async (res, rej) => {\n      if (!func.funcId) {\n        rej('Error');\n        return;\n      }\n\n      try {\n        const response = await deleteFunctionality(func.funcId);\n        res(response);\n      } catch (err) {\n        rej(err);\n      }\n    });\n  };\n\n  const cancelEditing = () => setEditingFunc(null);\n\n  const showEditing = func => setEditingFunc(func);\n\n  const onGoodEditing = editingFunctionality => {\n    const newFunctionalities = functionalities.map(func => {\n      if (func.funcId === editingFunctionality.funcId) return { ...func,\n        funcName: editingFunctionality.funcName\n      };\n      return func;\n    });\n    cancelEditing();\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Navigator, {\n    title: \"New Digital Twin Functionality\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [error !== '' ? /*#__PURE__*/_jsxDEV(ConfirmAction, {\n        title: \"Fetching Functionalities\",\n        currentState: errorFetchingFunctionalityState,\n        states: {\n          error: errorFetchingFunctionalityState\n        },\n        onCancel: onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(LazyComponent, {\n        loaded: !fetching,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [confirmAddFunc ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 27\n          }, this) : editingFunc ? /*#__PURE__*/_jsxDEV(EditFunctionalityDialog, {\n            onGood: onGoodEditing,\n            func: editingFunc,\n            onError: cancelEditing,\n            onCancel: cancelEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 32\n          }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"flex-end\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    helperText: !validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : '',\n                    error: !validNewCategory,\n                    required: true,\n                    onChange: event => {\n                      setNewCategory(event.target.value);\n                      if (!validNewCategory) setValidNewCategory(isCategoryValid(event.target.value.trim()));\n                    },\n                    fullWidth: true,\n                    value: newCategory\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    variant: \"contained\",\n                    onClick: validateAndCreate,\n                    children: \"Add Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 8\n  }, this);\n};\n\n_s2(NewDigitalTwinFunctionality, \"2MCUcooBiMPLa9f5Phu/reW6JsQ=\", false, function () {\n  return [useStore, useMountEffect];\n});\n\n_c2 = NewDigitalTwinFunctionality;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditFunctionalityDialog\");\n$RefreshReg$(_c2, \"NewDigitalTwinFunctionality\");","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/NewDigitalTwinFunctionality.tsx"],"names":["React","useState","Navigator","LazyComponent","ConfirmAction","ConfirmActionStateLabel","setTimeout","Grid","TextField","Button","useStore","FunctionalityActions","useMountEffect","getOrDownloadFunctionalities","useDialogStyles","Box","Dialog","DialogTitle","CircularProgress","CheckCircle","Error","updateFunctionality","createFunctionalities","deleteFunctionality","digitalTwinId","functionalityId","NEW_FUNCTIONALITY_RE","EditFunctionalityDialog","props","newFuncName","setNewFuncName","func","funcName","classes","sending","setSending","result","setResult","done","action","funcId","then","response","good","message","msg","catch","error","finally","onGood","onError","box","event","target","value","buttons","onCancel","NewDigitalTwinFunctionality","fetching","setFetching","setError","newFunc","setNewFunc","confirmAddFunc","setConfirmAddFunc","validNewFunc","setValidNewFunc","redirectTo","setRedirectTo","errorFetchingFunctionalityState","label","state","positiveLabel","data","functionalities","dispatchAction","dispatchFunctionalityActions","updateFunctionalities","funcs","addFunc","addFunctionality","funcUserId","editingFunc","setEditingFunc","indexes","key","e","isFunctionalityValid","test","validateAndCreate","validFunc","addNewFunctionalityAction","Promise","res","rej","trim","extra","lastInsertedId","confirmFunctionalityCreationActionStates","start","negativeLabel","executing","success","confirmActionProps","title","states","currentState","onSuccess","deleteFunctionalityAction","err","cancelEditing","showEditing","onGoodEditing","editingFunctionality","newFunctionalities","map","toString","validNewCategory","setNewCategory","setValidNewCategory","isCategoryValid","newCategory"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { routes } from '../../App'\r\nimport { Navigator } from '../templates/Navigator/Navigator'\r\nimport { JPTable } from '../templates/Table/JPTable'\r\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent'\r\nimport { ConfirmAction, ConfirmActionState, ConfirmActionStateLabel, ConfirmActionProps } from '../templates/ConfirmAction/ConfirmAction'\r\nimport { setTimeout } from 'timers'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Grid, TextField, FormControl, InputLabel, Select, Button, MenuItem } from \"@material-ui/core\"\r\nimport { useStore } from '../templates/Store/Store'\r\nimport { DigitalTwinActions, FunctionalityActions } from '../../redux/actions'\r\nimport { DigitalTwin, Functionality} from '../../model/index'\r\nimport { RequestResponseState } from '../../services/api/api'\r\nimport { FunctionalityForm } from './FunctionalityForm'\r\nimport { toBase64, useMountEffect } from '../../utils/main'\r\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities } from '../../utils/digitalTwins'\r\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style'\r\nimport { Box, Dialog, DialogTitle, CircularProgress } from '@material-ui/core'\r\nimport { CheckCircle, Error } from '@material-ui/icons'\r\nimport { updateFunctionality, createFunctionalities, deleteFunctionality} from '../../services/api/digital-twin'\r\n\r\nlet digitalTwinId = -1\r\nlet functionalityId = -1\r\n\r\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/\r\n\r\nconst EditFunctionalityDialog = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n  const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n\r\n  const classes = useDialogStyles()\r\n\r\n  const [sending, setSending] : [boolean, Function] = useState(false)\r\n\r\n  const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n\r\n  const action = () => {\r\n\r\n      if(props.func.funcId) {\r\n\r\n          if(!result.done) {\r\n\r\n              setSending(true)\r\n  \r\n              updateFunctionality(props.func.funcId, newFuncName)\r\n\r\n                  .then((response: RequestResponseState) => {\r\n                      setResult({done:true, good: true, message: response.msg})\r\n                  })\r\n\r\n                  .catch((error: RequestResponseState) => {\r\n                      setResult({done: true, good: false, message: error.msg})\r\n                  })\r\n\r\n                  .finally(() => setSending(false))\r\n\r\n          }\r\n\r\n          else {\r\n\r\n              if(result.good)\r\n                  props.onGood({...props.func, funcName: newFuncName})\r\n              \r\n              else\r\n                  props.onError()\r\n\r\n          }\r\n\r\n      }\r\n\r\n  }\r\n\r\n  return (\r\n      <Dialog open={true}>\r\n          <DialogTitle>Edit Functionality</DialogTitle>\r\n          <Box className={classes.box}>\r\n              {\r\n                  !result.done \r\n                      ?\r\n                          <TextField \r\n                              disabled={sending}\r\n                              value={newFuncName}\r\n                              onChange={(event) => setNewFuncName(event.target.value)}\r\n                          />\r\n                      :    <Grid container justify=\"center\">\r\n                              <Grid item>\r\n                                  {\r\n                                      result.good \r\n                                          ?   <CheckCircle color=\"primary\" />\r\n                                          :   <Error color=\"error\" />\r\n                                  }\r\n                              </Grid>\r\n                              <Grid item>\r\n                                  <Box className={result.good ? classes.good : classes.error} textAlign=\"center\">{result.message}</Box>\r\n                              </Grid>\r\n                          </Grid> \r\n              }\r\n          </Box>\r\n          <Grid className={classes.buttons} container direction=\"row\" justify=\"space-between\">\r\n              <Grid item>\r\n                  {sending \r\n                      ? <CircularProgress color=\"primary\" />\r\n                      : <Button onClick={action}>Ok</Button>\r\n                  }\r\n              </Grid>\r\n              <Grid item>\r\n                  <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>\r\n              </Grid>\r\n          </Grid>\r\n      </Dialog>\r\n  )\r\n\r\n}\r\n\r\nexport const NewDigitalTwinFunctionality = () => {\r\n    \r\n    const [fetching,setFetching] = useState(true)\r\n    const [error,setError] = useState('')\r\n    const [newFunc,setNewFunc] = useState('')\r\n\r\n    const [confirmAddFunc,setConfirmAddFunc] : [boolean, Function] = useState(false)\r\n\r\n    const [validNewFunc, setValidNewFunc] : [boolean,Function] = useState(true)\r\n\r\n    const [redirectTo, setRedirectTo] : [string, Function] = useState(\"\")\r\n\r\n    const errorFetchingFunctionalityState : ConfirmActionState = {\r\n        label: error,\r\n        state: ConfirmActionStateLabel.error,\r\n        positiveLabel: 'Ok'\r\n    }\r\n\r\n    const {data:functionalities, dispatchAction:dispatchFunctionalityActions} = useStore('functionalities')\r\n  \r\n    const updateFunctionalities = (funcs: Functionality[]) => dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs))\r\n    const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({funcId: functionalityId, funcUserId: 1 , funcName: newFunc}))\r\n\r\n    const [editingFunc, setEditingFunc] : [Functionality | null,Function] = useState(null)\r\n\r\n    const indexes = [\r\n        {label: 'Functionality', key: 'dtFunctionality'},\r\n        //{label: 'Digital Twin', key: 'dt'},\r\n        //{label: 'State', key: 'dtDescription'},\r\n        //{label: 'AssociatedSmartComponents', key: 'dtSmartComponents'},\r\n        //{label: 'Monitored Variables/Events', key: 'dtMonitoredVariableEvent'},\r\n        //{label: 'Add Variables/Events', key: 'dtAddVariableEvent'},\r\n        //{label: 'Details', key: 'dtDetails'},\r\n    ]\r\n  \r\n    const onCancel = () => setError('')\r\n\r\n    useMountEffect(() => {\r\n\r\n        setTimeout(() => {\r\n\r\n        setFetching(true)\r\n        getOrDownloadFunctionalities(functionalities)\r\n            .then((result: Functionality[]) => updateFunctionalities(result))\r\n            .catch((e:RequestResponseState) => setError(e.msg))\r\n            .finally(() => setFetching(false))\r\n        }, 0)\r\n    })\r\n\r\n    const isFunctionalityValid = (func:string) => NEW_FUNCTIONALITY_RE.test(func)\r\n\r\n    const validateAndCreate = () => {\r\n\r\n      const validFunc= isFunctionalityValid(newFunc)\r\n\r\n      if(!validFunc)\r\n        setValidNewFunc(false)\r\n      else\r\n        setConfirmAddFunc(true)\r\n  \r\n    }\r\n\r\n    const addNewFunctionalityAction = () : Promise<string> => {\r\n\r\n        return new Promise<string>((res:Function, rej:Function)  => {\r\n\r\n            createFunctionalities(newFunc.trim())\r\n\r\n                .then((result: RequestResponseState) => {\r\n                functionalityId= result.extra.lastInsertedId\r\n                    res('Functionality created')\r\n                })\r\n\r\n                .catch((e:RequestResponseState) => rej(e.msg))\r\n\r\n        })\r\n\r\n    }\r\n\r\n    const confirmFunctionalityCreationActionStates = {\r\n        start: {\r\n            label: `Confirm creation of new functionality: ${newFunc} ?`,\r\n            positiveLabel: 'Ok',\r\n            negativeLabel: 'Cancel',\r\n            state: ConfirmActionStateLabel.start\r\n        },\r\n        executing: {\r\n        label: '',\r\n        state: ConfirmActionStateLabel.executing,\r\n        },\r\n        success: {\r\n        label: 'Functionality Created',\r\n        state: ConfirmActionStateLabel.success,\r\n        positiveLabel: 'Ok'\r\n        },\r\n        error: {\r\n        label: 'Error Creating Functionality',\r\n        state: ConfirmActionStateLabel.error,\r\n        positiveLabel: 'Ok'\r\n        },\r\n    }\r\n\r\n    const confirmActionProps : ConfirmActionProps = {\r\n\r\n        title: 'Add Functionality',\r\n        states: confirmFunctionalityCreationActionStates,\r\n        currentState: confirmFunctionalityCreationActionStates.start,\r\n        onCancel: () => setConfirmAddFunc(false),\r\n        onError: () => setConfirmAddFunc(false),\r\n        onSuccess: () => {\r\n            addFunc()\r\n            setNewFunc('')\r\n        },\r\n        action: addNewFunctionalityAction,\r\n    }\r\n    \r\n    const deleteFunctionalityAction = (func: Functionality) : Promise<any> => {\r\n\r\n        return new Promise(async(res:Function,rej:Function) => {\r\n\r\n            if(!func.funcId) {\r\n                rej('Error')\r\n                return\r\n            }\r\n\r\n            try {\r\n                const response : RequestResponseState = await deleteFunctionality(func.funcId)\r\n                res(response)\r\n            }\r\n\r\n            catch(err) {\r\n                rej(err)\r\n            }\r\n        })\r\n    }\r\n\r\n    const cancelEditing = () => setEditingFunc(null)\r\n    const showEditing = (func: Functionality) => setEditingFunc(func)\r\n\r\n    const onGoodEditing = (editingFunctionality: Functionality) => {\r\n            \r\n    const newFunctionalities = functionalities.map((func: Functionality) => {\r\n\r\n        if(func.funcId === editingFunctionality.funcId)\r\n            return {...func, funcName: editingFunctionality.funcName}\r\n        return func\r\n\r\n    })\r\n      \r\n       cancelEditing()\r\n       dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities))\r\n    }\r\n\r\n    return (\r\n       <Navigator title=\"New Digital Twin Functionality\">\r\n        <> \r\n            {error !== ''\r\n                ? <ConfirmAction title='Fetching Functionalities' currentState={errorFetchingFunctionalityState} states={{error: errorFetchingFunctionalityState}} onCancel={onCancel}/>\r\n                : null \r\n            }\r\n            <LazyComponent loaded={!fetching}>\r\n                <>\r\n                    {confirmAddFunc \r\n                        ? <ConfirmAction {...confirmActionProps} /> \r\n                        : editingFunc\r\n                            ?  <EditFunctionalityDialog\r\n                                onGood={onGoodEditing}\r\n                                func={editingFunc}\r\n                                onError={cancelEditing}\r\n                                onCancel={cancelEditing} />\r\n                            : null\r\n                    }\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                        <Grid item>\r\n                            <Grid container justify=\"flex-end\" spacing={1}>\r\n                                <Grid item xs={4}>\r\n                                    <TextField\r\n                                        helperText={!validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : ''}\r\n                                        error={!validNewCategory}\r\n                                        required\r\n                                        onChange={(event) => {\r\n                                            setNewCategory(event.target.value)\r\n                                            if(!validNewCategory)\r\n                                                setValidNewCategory(isCategoryValid(event.target.value.trim()))\r\n                                        }}\r\n                                        fullWidth\r\n                                        value={newCategory}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        variant=\"contained\"\r\n                                        onClick={validateAndCreate}\r\n                                    >\r\n                                        Add Category\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </>\r\n            </LazyComponent>\r\n        </>\r\n    </Navigator>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}