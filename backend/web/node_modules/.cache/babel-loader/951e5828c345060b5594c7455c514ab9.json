{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/SmartComponent.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useFunctionBlockStyles } from \"../FunctionBlocks/FunctionBlock/style\";\nimport { DataType } from \"../../model/index\";\nimport { Grid, FormControl, InputLabel, Select, Button, MenuItem } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SmartComponentList = /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n\n  const {\n    variables,\n    setVariables,\n    onVariableRemoval,\n    onVariableEdition\n  } = props;\n  const classes = useFunctionBlockStyles();\n  const newVar = {\n    variableId: -1,\n    variableDataType: DataType.dtString,\n    variableOpcua: \"\",\n    variableInoutType: props.inOutType,\n    variableName: \"\"\n  };\n  const [newVariable, setNewVariable] = useState(newVar);\n  const setVariable = useCallback((variable, index) => {\n    setVariables(prevVars => {\n      const oldVariable = prevVars[index];\n      const newVariables = [...prevVars];\n      newVariables[index] = variable;\n      onVariableEdition(oldVariable, variable);\n      return newVariables;\n    });\n  }, [onVariableEdition, setVariables]);\n  const addVariable = useCallback(varToAdd => {\n    setVariables(prevVariables => [...prevVariables, varToAdd]);\n    setNewVariable(newVar);\n  }, [setVariables, newVar]);\n  const removeVariable = useCallback(variableToRemove => {\n    setVariables(prevVars => prevVars.filter((variable, index) => variable !== variableToRemove));\n    onVariableRemoval(variableToRemove);\n  }, [onVariableRemoval, setVariables]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: classes.box,\n      children: [variables.map((variable, index) => /*#__PURE__*/_jsxDEV(VariableRow, {\n        index: index,\n        addRemoveVariable: removeVariable,\n        setVariable: setVariable,\n        variable: variable,\n        newVar: false\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 61\n      }, this)), /*#__PURE__*/_jsxDEV(VariableRow, {\n        index: -1,\n        addRemoveVariable: addVariable,\n        setVariable: setNewVariable,\n        variable: newVariable,\n        newVar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}, \"uE1rcgLxuYamnI+KsljA+D1yKAA=\", false, function () {\n  return [useFunctionBlockStyles];\n}));\n_c2 = SmartComponentList;\nconst VariableRow = /*#__PURE__*/React.memo(_c3 = _s2(props => {\n  _s2();\n\n  const classes = useFunctionBlockStyles();\n  const [validName, setValidName] = useState(\"\");\n\n  const action = () => {\n    if (!isValid() && props.newVar) setValidName(\"Mandatory\");else props.addRemoveVariable(props.variable);\n  };\n\n  const isValid = useCallback(() => props.variable.variableName !== '', [props.variable]);\n  const validate = useCallback(() => {\n    !isValid() ? setValidName(\"Mandatory\") : setValidName('');\n  }, [isValid]);\n  useEffect(() => {\n    if (!props.newVar) validate();\n  }, [props.variable.variableName, props.newVar, validate]);\n\n  const updateField = field => event => {\n    setValidName('');\n    props.setVariable({ ...props.variable,\n      [field]: event.target.value\n    }, props.index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    children: [props.order ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1,\n      children: props.order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: `data-type-label-${props.variable.variableName}`,\n          children: \"SmartComponents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: `data-type-label-${props.variable.variableName}`,\n          value: props.variable.variableDataType,\n          onChange: updateField('variableDataType'),\n          children: Object.values(DataType).map((dt, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: dt,\n            children: dt\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 68\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.varEvButton,\n        size: \"small\",\n        variant: \"contained\",\n        onClick: action,\n        children: props.newVar ? '+' : 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}, \"Ki16XzEneQsNhUTQv+ig9YkjeRk=\", false, function () {\n  return [useFunctionBlockStyles];\n}), (prevProps, nextProps) => prevProps.variable === nextProps.variable);\n_c4 = VariableRow;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SmartComponentList$React.memo\");\n$RefreshReg$(_c2, \"SmartComponentList\");\n$RefreshReg$(_c3, \"VariableRow$React.memo\");\n$RefreshReg$(_c4, \"VariableRow\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/SmartComponent.tsx"],"names":["React","useEffect","useState","useCallback","useFunctionBlockStyles","DataType","Grid","FormControl","InputLabel","Select","Button","MenuItem","SmartComponentList","memo","props","variables","setVariables","onVariableRemoval","onVariableEdition","classes","newVar","variableId","variableDataType","dtString","variableOpcua","variableInoutType","inOutType","variableName","newVariable","setNewVariable","setVariable","variable","index","prevVars","oldVariable","newVariables","addVariable","varToAdd","prevVariables","removeVariable","variableToRemove","filter","title","box","map","VariableRow","validName","setValidName","action","isValid","addRemoveVariable","validate","updateField","field","event","target","value","order","Object","values","dt","varEvButton","prevProps","nextProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react'\nimport { useFunctionBlockStyles } from \"../FunctionBlocks/FunctionBlock/style\"\nimport { Variable, DataType, InOutType } from \"../../model/index\"\nimport { Grid, TextField, FormControl, InputLabel, Select, Button, MenuItem } from \"@material-ui/core\"\n\ninterface VariableProps {\n  setVariables: Function\n  variables: Variable[]\n  title: string\n  inOutType: InOutType\n  onVariableRemoval: (variable: Variable) => void\n  onVariableEdition: (oldVariable: Variable, newVariable: Variable) => void\n}\n\nexport const SmartComponentList = React.memo((props: VariableProps) => {\n  \n  const {variables,setVariables,onVariableRemoval,onVariableEdition} = props\n\n  const classes = useFunctionBlockStyles()\n\n  const newVar : Variable = {\n    variableId: -1,\n    variableDataType: DataType.dtString,\n    variableOpcua: \"\",\n    variableInoutType: props.inOutType,\n    variableName: \"\",\n  }\n\n  const [newVariable,setNewVariable] : [Variable,Function] = useState(newVar)\n\n  const setVariable = useCallback((variable:Variable,index:number) => {\n\n    setVariables((prevVars: Variable[]) => {\n\n      const oldVariable : Variable = prevVars[index]\n      const newVariables : Variable[] = [...prevVars]\n      newVariables[index] = variable\n      onVariableEdition(oldVariable,variable)\n      return newVariables\n\n    }) \n\n  },[onVariableEdition, setVariables])\n\n  const addVariable = useCallback((varToAdd: Variable) => {\n    \n    setVariables((prevVariables: Variable[]) =>[...prevVariables, varToAdd])\n    setNewVariable(newVar)\n\n  }, [setVariables,newVar]) \n\n  const removeVariable = useCallback((variableToRemove:Variable) => {\n    setVariables((prevVars: Variable[]) => prevVars.filter((variable:Variable,index:number) => variable !== variableToRemove))\n    onVariableRemoval(variableToRemove)\n  },[onVariableRemoval,setVariables]) \n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>{props.title}</Grid>\n      <Grid item className={classes.box}>\n        {variables.map((variable:Variable, index:number) => <VariableRow key={index} index={index} addRemoveVariable={removeVariable} setVariable={setVariable} variable={variable} newVar={false} />)}\n        <VariableRow index={-1} addRemoveVariable={addVariable} setVariable={setNewVariable} variable={newVariable} newVar={true}  />\n      </Grid> \n    </Grid>\n  )\n})\n\ninterface VariableRowProps {\n  index: number \n  addRemoveVariable: (variable: Variable) => void\n  setVariable:Function\n  variable: Variable\n  newVar: boolean\n  order?: number\n}\n  \nconst VariableRow = React.memo((props: VariableRowProps) => {\n\n  const classes = useFunctionBlockStyles()\n\n  const [validName,setValidName] = useState(\"\")\n\n  const action = () => {\n\n    if(!isValid() && props.newVar) \n      setValidName(\"Mandatory\")\n    \n    else\n      props.addRemoveVariable(props.variable)\n    \n  }\n\n  const isValid = useCallback(() => props.variable.variableName !== '', [props.variable])\n\n  const validate = useCallback(() => {\n    \n    !isValid() ? setValidName(\"Mandatory\") : setValidName('')\n\n  },[isValid]) \n\n  useEffect(() => {if(!props.newVar) validate()}, [props.variable.variableName, props.newVar, validate])\n\n  const updateField = (field:string) => (event:any) => {\n\n    setValidName('')\n    props.setVariable({...props.variable, [field]: event.target.value},props.index)\n  \n  }\n\n  return (\n    <Grid item container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n      { props.order ?\n      <Grid item xs={1}>\n          {props.order}\n      </Grid>\n      : null\n      }\n      <Grid item xs={3}>\n        <FormControl fullWidth required>\n          <InputLabel id={`data-type-label-${props.variable.variableName}`}>SmartComponents</InputLabel>\n          <Select\n            labelId={`data-type-label-${props.variable.variableName}`}\n            value={props.variable.variableDataType}\n            onChange={updateField('variableDataType')}\n          >\n            {Object.values(DataType).map((dt:any, index:number) => <MenuItem key={index} value={dt}>{dt}</MenuItem>)}\n\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={1}>\n        <Button \n          className={classes.varEvButton} \n          size=\"small\" \n          variant=\"contained\"\n          onClick={action}\n        >\n        {props.newVar ? '+' : 'x' }</Button>\n      </Grid>\n    </Grid>\n  )\n}\n ,(prevProps:VariableRowProps, nextProps: VariableRowProps) => prevProps.variable === nextProps.variable\n)"]},"metadata":{},"sourceType":"module"}