{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { TextField, Grid, Button, InputLabel, Select } from '@material-ui/core';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { Done, Clear } from '@material-ui/icons';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction';\nimport { useMountEffect } from '../../utils/main';\nimport { useStore } from '../templates/Store/Store';\nimport { SmartComponentActions } from '../../redux/actions';\nimport { getOrDownloadSmartComponents } from '../../utils/smartComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DigitalTwinForm = (propsDt, propsSc) => {\n  _s();\n\n  var _propsDt$confirmDialo, _propsDt$confirmDialo2, _propsDt$confirmDialo3;\n\n  /**styles */\n  const classes = useFunctionBlockStyles();\n  /**Digital Twin Name*/\n\n  const {\n    dtName,\n    setDtName\n  } = propsDt.dtName;\n  const [validDtName, setValidDtName] = useState(true);\n  const onChangeDtName = useCallback(event => {\n    setDtName(event.target.value.trim());\n    setValidDtName(true);\n  }, [setDtName]);\n  /* Buttons */\n\n  const onCancel = propsDt.cancel.action;\n  const cancelLabel = propsDt.cancel.label;\n  const confirmLabel = propsDt.confirmDialog.buttonTitle;\n  /* Confirmation */\n\n  const [confirm, setConfirm] = useState(false);\n\n  const validateFields = () => {\n    const cValidDtName = dtName.trim() !== '';\n    if (!cValidDtName) setValidDtName(cValidDtName);\n    return cValidDtName;\n  };\n\n  const confirmButtonAction = () => {\n    if (validateFields()) setConfirm(true);\n  };\n\n  const confirmActionStates = {\n    start: {\n      label: (_propsDt$confirmDialo = propsDt.confirmDialog.start) === null || _propsDt$confirmDialo === void 0 ? void 0 : _propsDt$confirmDialo.label,\n      positiveLabel: (_propsDt$confirmDialo2 = propsDt.confirmDialog.start) === null || _propsDt$confirmDialo2 === void 0 ? void 0 : _propsDt$confirmDialo2.positiveLabel,\n      negativeLabel: (_propsDt$confirmDialo3 = propsDt.confirmDialog.start) === null || _propsDt$confirmDialo3 === void 0 ? void 0 : _propsDt$confirmDialo3.negativeLabel,\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: propsDt.confirmDialog.success.label,\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: propsDt.confirmDialog.success.positiveLabel\n    },\n    error: {\n      label: propsDt.confirmDialog.error.label,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: propsDt.confirmDialog.success.positiveLabel\n    }\n  };\n  const confirmActionProps = {\n    title: propsDt.confirmDialog.title,\n    states: confirmActionStates,\n    currentState: confirmActionStates.executing,\n    onCancel: () => setConfirm(false),\n    onError: () => setConfirm(false),\n    onSuccess: propsDt.confirmDialog.onSuccess,\n    action: propsDt.confirmDialog.action\n  }; //MANIPULAR OS SMART COMPONENTS DISPONÍVEIS\n\n  const [fetching, setFetching] = useState(true);\n  const {\n    data: smartComponents,\n    dispatchAction: dispatchSmartComponentActions\n  } = useStore('smartComponents');\n\n  const updateSmartComponents = sc => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(sc));\n\n  const [error, setError] = useState(''); // Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadSmartComponents(smartComponents).then(result => updateSmartComponents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); // Associar um smartComponent ao Digital Twin\n\n  const [smartComponentChoice, setSmartComponentChoice] = useState('');\n  const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0);\n\n  const handleSmartComponentChoice = event => {\n    setSmartComponentChoice(event.target.value);\n    let i = 0;\n\n    while (i < smartComponents.length) {\n      if (smartComponents[i].scName === event.target.value) {\n        setSmartComponentIdChoice(smartComponents[i].scId);\n      }\n\n      i++;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", confirm ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 23\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        spacing: 1,\n        justify: \"space-between\",\n        item: true,\n        xs: true,\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: onChangeDtName,\n            value: dtName,\n            helperText: \"\",\n            error: !validDtName,\n            fullWidth: true,\n            required: true,\n            label: \"Insert New Digital Twin Name\",\n            id: \"dt-name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: `digital-twin-label-${smartComponents}`,\n            children: \"DINASORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: `digital-twin-label-${smartComponents}`,\n            value: smartComponentChoice,\n            onChange: handleSmartComponentChoice,\n            children: (smartComponents || []).map(smartComponent => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: smartComponent.scName,\n                children: smartComponent.scName\n              }, smartComponent.scId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 83\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          container: true,\n          direction: \"row\",\n          spacing: 2,\n          alignItems: \"center\",\n          justify: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onCancel,\n              color: \"secondary\",\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 86\n              }, this), cancelLabel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: confirmButtonAction,\n              color: \"primary\",\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Done, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 93\n              }, this), confirmLabel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n};\n\n_s(DigitalTwinForm, \"YI7F5//Xg3rxGc73VgmF1ll6O3Y=\", false, function () {\n  return [useFunctionBlockStyles, useStore, useMountEffect];\n});\n\n_c = DigitalTwinForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalTwinForm\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx"],"names":["React","useState","useCallback","TextField","Grid","Button","InputLabel","Select","useFunctionBlockStyles","Done","Clear","ConfirmActionStateLabel","ConfirmAction","useMountEffect","useStore","SmartComponentActions","getOrDownloadSmartComponents","DigitalTwinForm","propsDt","propsSc","classes","dtName","setDtName","validDtName","setValidDtName","onChangeDtName","event","target","value","trim","onCancel","cancel","action","cancelLabel","label","confirmLabel","confirmDialog","buttonTitle","confirm","setConfirm","validateFields","cValidDtName","confirmButtonAction","confirmActionStates","start","positiveLabel","negativeLabel","state","executing","success","error","confirmActionProps","title","states","currentState","onError","onSuccess","fetching","setFetching","data","smartComponents","dispatchAction","dispatchSmartComponentActions","updateSmartComponents","sc","updateSmartComponent","setError","setTimeout","then","result","catch","e","msg","finally","smartComponentChoice","setSmartComponentChoice","smartComponentIdChoice","setSmartComponentIdChoice","handleSmartComponentChoice","i","length","scName","scId","map","smartComponent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { TextField, Grid, Button, InputLabel, Select } from '@material-ui/core'\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\nimport { Done, Clear } from '@material-ui/icons'\nimport { ConfirmActionProps, ConfirmActionStateLabel, ConfirmActionAction, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction'\nimport { useMountEffect } from '../../utils/main'\nimport { AssociatedSmartComponent, SmartComponent } from '../../model'\nimport { RequestResponseState } from '../../services/api/api'\nimport { useStore } from '../templates/Store/Store'\nimport { AssociatedSmartComponentActions, SmartComponentActions } from '../../redux/actions'\nimport { getOrDownloadSmartComponents } from '../../utils/smartComponents'\n\ninterface DigitalTwinProps {\n\n    dtName: {\n        dtName: string\n        setDtName: Function\n    },\n    cancel: {\n        label: string\n        action: () => void\n    },\n    confirmDialog: {\n        buttonTitle: string\n        title: string\n        initialState: ConfirmActionStateLabel\n        action: ConfirmActionAction\n        onSuccess : () => void\n        start? : {\n            label: string\n            positiveLabel: string\n            negativeLabel: string\n        }\n        success: {\n            label:string\n            positiveLabel: string\n        }\n        error: {\n            label: string\n            positiveLabel: string\n        }\n    },\n}\n\ninterface AssociatedSmartComponentsProps {\n\n  scName: {\n      dtName: string\n      setDtName: Function\n  },\n}\n\nexport const DigitalTwinForm = (propsDt: DigitalTwinProps, propsSc: AssociatedSmartComponentsProps) => {\n\n    /**styles */\n    const classes = useFunctionBlockStyles()\n\n    /**Digital Twin Name*/\n    const {dtName, setDtName} = propsDt.dtName\n    const [validDtName, setValidDtName] = useState(true)\n    const onChangeDtName = useCallback((event:any) => {\n\n        setDtName(event.target.value.trim())\n        setValidDtName(true)\n    \n      },[setDtName])\n\n    /* Buttons */\n\n    const onCancel = propsDt.cancel.action\n    const cancelLabel = propsDt.cancel.label\n\n    const confirmLabel = propsDt.confirmDialog.buttonTitle\n\n    /* Confirmation */\n\n    const [confirm, setConfirm] : [boolean, Function] = useState(false)\n\n    const validateFields = () : boolean => {\n\n        const cValidDtName = dtName.trim() !== ''\n            \n        if(!cValidDtName) setValidDtName(cValidDtName)\n    \n        return cValidDtName\n    \n    }\n\n    const confirmButtonAction = () => {\n\n        if(validateFields())\n          setConfirm(true)\n    }\n\n    const confirmActionStates = {\n        start: {\n            label: propsDt.confirmDialog.start?.label,\n            positiveLabel: propsDt.confirmDialog.start?.positiveLabel,\n            negativeLabel: propsDt.confirmDialog.start?.negativeLabel,\n            state: ConfirmActionStateLabel.start\n        },\n        executing: {\n          label: '',\n          state: ConfirmActionStateLabel.executing,\n        },\n        success: {\n          label: propsDt.confirmDialog.success.label,\n          state: ConfirmActionStateLabel.success,\n          positiveLabel: propsDt.confirmDialog.success.positiveLabel\n        },\n        error: {\n          label: propsDt.confirmDialog.error.label,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: propsDt.confirmDialog.success.positiveLabel\n        },\n      }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: propsDt.confirmDialog.title,\n        states: confirmActionStates,\n        currentState: confirmActionStates.executing,\n        onCancel: () => setConfirm(false),\n        onError: () => setConfirm(false),\n        onSuccess: propsDt.confirmDialog.onSuccess,\n        action:propsDt.confirmDialog.action,\n      \n    }\n\n    //MANIPULAR OS SMART COMPONENTS DISPONÍVEIS\n\n    const [fetching,setFetching] = useState(true)\n    const {data:smartComponents, dispatchAction:dispatchSmartComponentActions} = useStore('smartComponents')\n    const updateSmartComponents = (sc: SmartComponent[]) => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(sc))\n    const [error,setError] = useState('')\n\n     // Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n     useMountEffect(() => {\n\n      setTimeout(() => {\n  \n      setFetching(true)\n      getOrDownloadSmartComponents(smartComponents)\n          .then((result: SmartComponent[]) => updateSmartComponents(result))\n          .catch((e:RequestResponseState) => setError(e.msg))\n          .finally(() => setFetching(false))\n      }, 0)\n      })\n    \n    // Associar um smartComponent ao Digital Twin\n    const [smartComponentChoice, setSmartComponentChoice] = useState('')\n    const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0)\n\n    const handleSmartComponentChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSmartComponentChoice(event.target.value as string);\n    let i = 0;\n    while(i < smartComponents.length)\n    {\n        if( smartComponents[i].scName === (event.target.value as string))\n        {\n            setSmartComponentIdChoice(smartComponents[i].scId)\n        }\n        i++;\n    }\n  \n\n    return (\n        <> {confirm ? <ConfirmAction {...confirmActionProps} /> : null}\n            <Grid spacing={1} justify=\"space-between\" item xs container direction=\"row\">\n              <Grid item xs={6}>\n                <TextField\n                  onChange={onChangeDtName} \n                  value={dtName}\n                  helperText=\"\"\n                  error={!validDtName} \n                  fullWidth required \n                  label=\"Insert New Digital Twin Name\" \n                  id=\"dt-name\" \n                  type=\"text\" />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id={`digital-twin-label-${smartComponents}`}>DINASORE</InputLabel>\n                <Select labelId={`digital-twin-label-${smartComponents}`} value={smartComponentChoice} onChange={handleSmartComponentChoice}>\n                    {(smartComponents || []).map((smartComponent: any) => {return <MenuItem key={smartComponent.scId} value={smartComponent.scName}>{smartComponent.scName}</MenuItem>})}\n                </Select> \n            </Grid>\n            </Grid>\n            <Grid item xs container direction=\"row\" justify=\"space-between\" alignItems=\"center\"> \n              <Grid item xs={6} container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"flex-end\">\n                <Grid item>\n                    <Button onClick={onCancel} color=\"secondary\" variant=\"contained\"><Clear/>{cancelLabel}</Button>\n                </Grid>\n                <Grid>\n                  <Button onClick={confirmButtonAction} color=\"primary\" variant=\"contained\"><Done/>{confirmLabel}</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n        </>\n    )\n}\n}"]},"metadata":{},"sourceType":"module"}