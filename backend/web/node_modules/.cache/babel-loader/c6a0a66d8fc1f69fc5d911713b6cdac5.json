{"ast":null,"code":"export function makeTriggerCommandAndExecute(data) {\n  const fs = require('fs'),\n        path = require('path'); // const fileName = './events_sub_serv.json'\n  // const file = require(fileName)\n\n\n  let key_eventName = data.monitoredEventName;\n  let key_eventFb = data.fbAssociated; //let ipArray = [key_eventFb + \".\" + key_eventName]\n\n  let ipArray = [\"ENERGY_COSTS.INIT\"];\n  let jsonData = {\n    \"localhost:61492\": ipArray\n  };\n  let jsonString = JSON.stringify(jsonData, null, 2); //Função que lê o que estava no ficheiro ./events_sub_serv.json\n\n  fs.readFile('./events_sub_serv.json', 'utf8', function (err, data) {\n    var obj = JSON.parse(data);\n    console.log(obj);\n  }); //Função que escreve no ficheiro ./events_sub_serv.json a jsonString atualizada\n  //fs.writeFile('./events_sub_serv.json', jsonString, function(err: any){\n  //     if(err) return console.log(err);\n  //     console.log('Note added');\n  // });\n  //command python3 trigger_fb.py events_sub_serv.json\n  // const exec  = require('child_process').exec;\n  // exec(\"ls\", (error: { message: any; }, stdout: any, stderr: any) => {\n  //     if (error) {\n  //         console.log(`error: ${error.message}`);\n  //         return;\n  //     }\n  //     if (stderr) {\n  //         console.log(`erro ao efetuar o comando`);\n  //         return;\n  //     }\n  //     console.log(`trigger efetuado ${stdout}`);\n  // });\n}","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/trigger.ts"],"names":["makeTriggerCommandAndExecute","data","fs","require","path","key_eventName","monitoredEventName","key_eventFb","fbAssociated","ipArray","jsonData","jsonString","JSON","stringify","readFile","err","obj","parse","console","log"],"mappings":"AAKA,OAAO,SAASA,4BAAT,CAAsCC,IAAtC,EAA4D;AAE/D,QAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;AAAA,QAA0BC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAxC,CAF+D,CAI/D;AAEA;;;AAEA,MAAIE,aAAa,GAAIJ,IAAI,CAACK,kBAA1B;AACA,MAAIC,WAAW,GAAGN,IAAI,CAACO,YAAvB,CAT+D,CAW/D;;AACA,MAAIC,OAAO,GAAG,CAAC,mBAAD,CAAd;AAEA,MAAIC,QAAQ,GAAG;AAAC,uBAAkBD;AAAnB,GAAf;AAEA,MAAIE,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAf,EAAwB,IAAxB,EAA6B,CAA7B,CAAjB,CAhB+D,CAkB/D;;AACAR,EAAAA,EAAE,CAACY,QAAH,CAAY,wBAAZ,EAAqC,MAArC,EAA6C,UAASC,GAAT,EAAad,IAAb,EAAkB;AAC3D,QAAIe,GAAG,GAAGJ,IAAI,CAACK,KAAL,CAAWhB,IAAX,CAAV;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,GAHD,EAnB+D,CAwB/D;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH","sourcesContent":["import { json } from \"express\";\nimport { triggerAsyncId } from \"node:async_hooks\";\nimport { fstat } from \"node:fs\";\nimport { MonitoredEvent } from \"./model\";\n\nexport function makeTriggerCommandAndExecute(data: MonitoredEvent) {\n    \n    const fs = require('fs'), path = require('path');\n\n    // const fileName = './events_sub_serv.json'\n    \n    // const file = require(fileName)\n    \n    let key_eventName =  data.monitoredEventName\n    let key_eventFb = data.fbAssociated\n    \n    //let ipArray = [key_eventFb + \".\" + key_eventName]\n    let ipArray = [\"ENERGY_COSTS.INIT\"]\n\n    let jsonData = {\"localhost:61492\":ipArray} \n    \n    let jsonString = JSON.stringify(jsonData,null,2)\n\n    //Função que lê o que estava no ficheiro ./events_sub_serv.json\n    fs.readFile('./events_sub_serv.json','utf8', function(err,data){\n        var obj = JSON.parse(data);\n        console.log(obj)\n    })\n\n    //Função que escreve no ficheiro ./events_sub_serv.json a jsonString atualizada\n    //fs.writeFile('./events_sub_serv.json', jsonString, function(err: any){\n    //     if(err) return console.log(err);\n    //     console.log('Note added');\n    // });\n\n    //command python3 trigger_fb.py events_sub_serv.json\n    \n    // const exec  = require('child_process').exec;\n\n    // exec(\"ls\", (error: { message: any; }, stdout: any, stderr: any) => {\n    //     if (error) {\n    //         console.log(`error: ${error.message}`);\n    //         return;\n    //     }\n    //     if (stderr) {\n    //         console.log(`erro ao efetuar o comando`);\n    //         return;\n    //     }\n    //     console.log(`trigger efetuado ${stdout}`);\n    // });\n  \n}"]},"metadata":{},"sourceType":"module"}