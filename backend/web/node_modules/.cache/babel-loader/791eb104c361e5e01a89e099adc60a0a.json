{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinMonitoring.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navigator } from '../templates/Navigator/Navigator';\nimport { ConfirmAction, ConfirmActionStateLabel } from '../templates/ConfirmAction/ConfirmAction';\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent';\nimport { JPTable } from '../templates/Table/JPTable';\nimport { useMountEffect } from '../../utils/main';\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities, getOrDownloadMonitoredEvents, getOrDownloadMonitoredVariables } from '../../utils/digitalTwins';\nimport { getOrDownloadAssociatedSmartComponents } from '../../utils/associatedSmartComponents';\nimport { useStore } from '../templates/Store/Store';\nimport { FunctionalityActions, DigitalTwinActions, AssociatedSmartComponentActions, MonitoredVariableActions, MonitoredEventActions } from '../../redux/actions';\nimport { TextField, Grid, Button, Box, Dialog, DialogTitle, CircularProgress, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { createFunctionality, createMonitoredEvent, createMonitoredVariable, updateFunctionality } from '../../services/api/digital-twin';\nimport { deleteFunctionality } from '../../services/api/digital-twin';\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style';\nimport { CheckCircle, Error } from '@material-ui/icons';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { Redirect } from 'react-router-dom'; // import { FunctionalityForm } from './FunctionalityForm'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/;\nconst FUNCTION_BLOCK_RE = /[a-zA-Z0-9]{3,}/;\nconst VARIABLE_RE = /[a-zA-Z0-9]{3,}/;\nconst EVENT_RE = /[a-zA-Z0-9]{3,}/;\nlet functionalityId = -1;\nlet idMonitoredVariable = -1;\nlet idMonitoredEvent = -1;\nconst funcUserId = 1;\n\nconst EditFunctionalityDialog = props => {\n  _s();\n\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const classes = useDialogStyles();\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n\n  const action = () => {\n    if (props.func.funcId) {\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        }).finally(() => setSending(false));\n      } else {\n        if (result.good) props.onGood({ ...props.func,\n          funcName: newFuncName\n        });else props.onError();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Functionality\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: !result.done ? /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: sending,\n        value: newFuncName,\n        onChange: event => setNewFuncName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: result.good ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(Error, {\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: result.good ? classes.good : classes.error,\n            textAlign: \"center\",\n            children: result.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.buttons,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: sending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: action,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: sending,\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditFunctionalityDialog, \"pa6Sqs49YPMvA2bR1UMOpZZcg98=\", false, function () {\n  return [useDialogStyles];\n});\n\n_c = EditFunctionalityDialog;\n\nconst AddFunctionalityDetails = props => {\n  _s2();\n\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const classes = useDialogStyles();\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n  const [fetching, setFetching] = useState(true);\n  const {\n    data: associatedSmartComponents,\n    dispatchAction: dispatchAssociatedSmartComponentActions\n  } = useStore('associatedSmartComponents');\n\n  const updateAssociatedSmartComponents = assScs => dispatchAssociatedSmartComponentActions(AssociatedSmartComponentActions.updateAssociatedSmartComponents(assScs));\n\n  const [error, setError] = useState('');\n  const [availableSmartComponents, setAvailableSmartComponents] = useState([]); // Recuperar da base de dados os Smart Components Associados ao Digital Twin associado\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadAssociatedSmartComponents(associatedSmartComponents).then(result => updateAssociatedSmartComponents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n  let i = 0;\n\n  while (i < associatedSmartComponents.length) {\n    if (associatedSmartComponents[i].scDtId === props.func.funcdtId) {\n      availableSmartComponents[i] = associatedSmartComponents[i];\n    }\n\n    i++;\n  } // Escolher um AssociatedSmartComponent de dentro dos disponíveis pelo DT respectivo \n\n\n  const [smartComponentChoice, setSmartComponentChoice] = useState('');\n  const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0);\n\n  const handleSmartComponentChoice = event => {\n    setSmartComponentChoice(event.target.value);\n    let j = 0;\n\n    while (j < associatedSmartComponents.length) {\n      if (associatedSmartComponents[j].scName === event.target.value) {\n        setSmartComponentIdChoice(associatedSmartComponents[j].scId);\n      }\n\n      j++;\n    }\n  }; //Variáveis e funções de apoio à escolha do Function Block\n\n\n  const [validFunctionBlock, setValidFunctionBlock] = useState(true);\n  const [newFb, setNewFb] = useState('');\n\n  const isFunctionBlockValid = fb => NEW_FUNCTIONALITY_RE.test(fb); //Variáveis e funções de apoio à escolha da Variable\n\n\n  const [validVariable, setValidVariable] = useState(true);\n  const [newVariable, setNewVariable] = useState('');\n\n  const isVariableValid = variable => VARIABLE_RE.test(variable);\n\n  const buildMonitoredVariable = funcId => ({\n    monitoredVariableName: newVariable,\n    fbAssociated: newFb,\n    funcIdAssociated: funcId,\n    idMonitoredVariable: idMonitoredVariable,\n    scAssociated: smartComponentChoice\n  }); //Variáveis e funções de apoio à escolha do Event\n\n\n  const [validEvent, setValidEvent] = useState(true);\n  const [newEvent, setNewEvent] = useState('');\n\n  const isEventValid = event => EVENT_RE.test(event);\n\n  const buildMonitoredEvent = funcId => ({\n    monitoredEventName: newEvent,\n    fbAssociated: newFb,\n    funcIdAssociated: funcId,\n    idMonitoredEvent: idMonitoredEvent,\n    scAssociated: smartComponentChoice\n  }); //Função de atualização da database com os dados escolhidos \n\n\n  const action = () => {\n    let funcId = props.func.funcId;\n    const monitoredVariable = buildMonitoredVariable(funcId);\n    const monitoredEvent = buildMonitoredEvent(funcId);\n\n    if (props.func.funcId) {\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        }).finally(() => setSending(false));\n\n        if (newVariable != '') {\n          createMonitoredVariable(monitoredVariable).then(response => {\n            setResult({\n              done: true,\n              good: true,\n              message: response.msg\n            });\n          }).catch(error => {\n            setResult({\n              done: true,\n              good: false,\n              message: error.msg\n            });\n          }).finally(() => setSending(false));\n        }\n\n        if (newEvent != '') {\n          createMonitoredEvent(monitoredEvent).then(response => {\n            setResult({\n              done: true,\n              good: true,\n              message: response.msg\n            });\n          }).catch(error => {\n            setResult({\n              done: true,\n              good: false,\n              message: error.msg\n            });\n          }).finally(() => setSending(false));\n        }\n      } else {\n        if (result.good) props.onGood({ ...props.func,\n          funcName: newFuncName\n        });else props.onError();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Add Functionality Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.box,\n            spacing: 3,\n            item: true,\n            container: true,\n            direction: \"column\",\n            alignItems: \"flex-start\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: `smart-component-label-${availableSmartComponents}`,\n                children: \"DINASORE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: `smart-component-label-${availableSmartComponents}`,\n                value: smartComponentChoice,\n                onChange: handleSmartComponentChoice,\n                children: (availableSmartComponents || []).map(sc => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: sc.scName,\n                    children: sc.scName\n                  }, sc.scId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 88\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Function Block\",\n                helperText: !validFunctionBlock ? FUNCTION_BLOCK_RE.toString() : '',\n                error: !validFunctionBlock,\n                required: true,\n                onChange: event => {\n                  setNewFb(event.target.value);\n                  if (!validFunctionBlock) setValidFunctionBlock(isFunctionBlockValid(event.target.value.trim()));\n                },\n                fullWidth: true,\n                value: newFb\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Variable\",\n                helperText: !validVariable ? VARIABLE_RE.toString() : '',\n                error: !validVariable,\n                required: true,\n                onChange: event => {\n                  setNewVariable(event.target.value);\n                  if (!validVariable) setValidVariable(isVariableValid(event.target.value.trim()));\n                },\n                fullWidth: true,\n                value: newVariable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Event\",\n                helperText: !validEvent ? EVENT_RE.toString() : '',\n                error: !validEvent,\n                required: true,\n                onChange: event => {\n                  setNewEvent(event.target.value);\n                  if (!validEvent) setValidEvent(isEventValid(event.target.value.trim()));\n                },\n                fullWidth: true,\n                value: newEvent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.buttons,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: sending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: action,\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: sending,\n            onClick: props.onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AddFunctionalityDetails, \"lNhY3ul82GyaswiwXfjATeWRg3I=\", false, function () {\n  return [useDialogStyles, useStore, useMountEffect];\n});\n\n_c2 = AddFunctionalityDetails;\nexport const DigitalTwinMonitoring = () => {\n  _s3();\n\n  const classes = useFunctionBlockStyles();\n  const [fetching, setFetching] = useState(true);\n  const [error, setError] = useState('');\n  const [newFunc, setNewFunc] = useState('');\n  const [confirmEditing, setConfirmEditing] = useState(false);\n  const [confirmAddFunc, setConfirmAddFunc] = useState(false);\n  const [validNewFunc, setValidNewFunc] = useState(true);\n  const errorFetchingFunctionalityState = {\n    label: error,\n    state: ConfirmActionStateLabel.error,\n    positiveLabel: 'Ok'\n  };\n  const [redirectTo, setRedirectTo] = useState(-1);\n  const {\n    data: functionalities,\n    dispatchAction: dispatchFunctionalityActions\n  } = useStore('functionalities');\n  const {\n    data: digitalTwins,\n    dispatchAction: dispatchDigitalTwinActions\n  } = useStore('digitalTwins');\n  const {\n    data: monitoredVariables,\n    dispatchAction: dispatchMonitoredVariableActions\n  } = useStore('monitoredVariables');\n  const {\n    data: monitoredEvents,\n    dispatchAction: dispatchMonitoredEventActions\n  } = useStore('monitoredEvents');\n\n  const onCancel = () => setError('');\n\n  const updateFunctionalities = funcs => {\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs));\n    monitoredEventData(funcs);\n  };\n\n  const updateDigitalTwins = dts => dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(dts));\n\n  const updateMonitoredVariables = monVars => dispatchMonitoredVariableActions(MonitoredVariableActions.updateMonitoredVariable(monVars));\n\n  const updateMonitoredEvents = monEvs => dispatchMonitoredEventActions(MonitoredEventActions.updateMonitoredEvent(monEvs));\n\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({\n    funcId: functionalityId,\n    funcUserId: 1,\n    funcName: newFunc,\n    funcdtId: 1\n  }));\n\n  const [editingFunc, setEditingFunc] = useState(null);\n  const [addDetailsFunc, setAddDetailsFunc] = useState(null);\n  const indexes = [{\n    label: 'Functionality',\n    key: 'funcName'\n  }, {\n    label: 'Digital Twin',\n    key: 'dtName'\n  }, {\n    label: 'State',\n    key: 'dtDescription'\n  }, {\n    label: '#Monitored Variables',\n    key: 'dtMonitoredVariableEvent'\n  }, {\n    label: '#Monitored Events',\n    key: 'dtMonitoredVariableEvent'\n  }]; // Recuperar da base de dados as funcionalidades (Functionality)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadFunctionalities(functionalities).then(result => updateFunctionalities(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); // Recuperar da base de dados os digital twins (DigitalTwin)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadDigitalTwins(digitalTwins).then(result => updateDigitalTwins(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n\n  const isFunctionalityValid = func => NEW_FUNCTIONALITY_RE.test(func);\n\n  const validateAndCreate = () => {\n    const validFunc = isFunctionalityValid(newFunc);\n    if (!validFunc) setValidNewFunc(false);else setConfirmAddFunc(true);\n  };\n\n  const buildFunctionality = () => ({\n    funcName: newFunc,\n    funcId: functionalityId,\n    funcdtId: digitalTwinIdChoice,\n    funcUserId,\n    funcdtName: digitalTwinChoice\n  });\n\n  const addNewFunctionalityAction = () => {\n    const functionality = buildFunctionality();\n    return new Promise((res, rej) => {\n      createFunctionality(functionality).then(result => {\n        functionalityId = result.extra.lastInsertedId;\n        res('Functionality created');\n      }).catch(e => rej(e.msg));\n    });\n  };\n\n  const confirmFunctionalityCreationActionStates = {\n    start: {\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\n      positiveLabel: 'Ok',\n      negativeLabel: 'Cancel',\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: 'Functionality Created',\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: 'Ok'\n    },\n    error: {\n      label: 'Error Creating Functionality',\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: 'Ok'\n    }\n  };\n  const confirmActionProps = {\n    title: 'Add Functionality',\n    states: confirmFunctionalityCreationActionStates,\n    currentState: confirmFunctionalityCreationActionStates.start,\n    onCancel: () => setConfirmAddFunc(false),\n    onError: () => setConfirmAddFunc(false),\n    onSuccess: () => {\n      addFunc();\n      setNewFunc('');\n    },\n    action: addNewFunctionalityAction\n  };\n\n  const getDataFunctionality = () => functionalities.map(functionality => {\n    return { ...functionality\n    };\n  });\n\n  const deleteFunctionalityAction = func => {\n    return new Promise(async (res, rej) => {\n      if (!func.funcId) {\n        rej('Error');\n        return;\n      }\n\n      try {\n        const response = await deleteFunctionality(func.funcId);\n        res(response);\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }; //Adicionar Detalhes à Funcionalidade\n\n\n  const cancelAddDetails = () => setAddDetailsFunc(null);\n\n  const showAddDetails = func => setAddDetailsFunc(func); //Editar a Funcionalidade\n\n\n  const cancelEditing = () => setEditingFunc(null);\n\n  const showEditing = func => setEditingFunc(func);\n\n  const onGoodEditing = editingFunctionality => {\n    const newFunctionalities = functionalities.map(func => {\n      if (func.funcId === editingFunctionality.funcId) return { ...func,\n        funcName: editingFunctionality.funcName,\n        funcdtId: editingFunctionality.funcdtId\n      };\n      return func;\n    });\n    cancelEditing();\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities));\n  }; // Associar um digital twin à nova funcionalidade criada\n\n\n  const [digitalTwinChoice, setDigitalTwinChoice] = useState('');\n  const [digitalTwinIdChoice, setDigitalTwinIdChoice] = useState(0);\n\n  const handleDigitalTwinChoice = event => {\n    setDigitalTwinChoice(event.target.value);\n    let i = 0;\n\n    while (i < digitalTwins.length) {\n      if (digitalTwins[i].dtName === event.target.value) {\n        setDigitalTwinIdChoice(digitalTwins[i].dtId);\n      }\n\n      i++;\n    }\n  }; // Recuperar da base de dados as monitoredVariables (MonitoredVariable)\n\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadMonitoredVariables(monitoredVariables).then(result => updateMonitoredVariables(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); // Recuperar da base de dados as monitoredVariables (MonitoredVariable)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadMonitoredEvents(monitoredEvents).then(result => updateMonitoredEvents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n\n  const monitoredEventData = monEv => {\n    return { ...monEv,\n      state: {\n        key: monEv.monitoredEventName,\n        data: /*#__PURE__*/_jsxDEV(Box, {\n          className: monEv.monitoredEventName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 23\n        }, this)\n      }\n    };\n  };\n\n  const redirectToList = func => setRedirectTo(func.funcId);\n\n  if (redirectTo !== -1) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: `/functionality-details/${redirectTo}`,\n    push: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 617,\n    columnNumber: 11\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Navigator, {\n    title: \"New Digital Twin Functionality\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [error !== '' ? /*#__PURE__*/_jsxDEV(ConfirmAction, {\n        title: \"Fetching Functionalities\",\n        currentState: errorFetchingFunctionalityState,\n        states: {\n          error: errorFetchingFunctionalityState\n        },\n        onCancel: onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(LazyComponent, {\n        loaded: !fetching,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [confirmEditing ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 19\n          }, this) : editingFunc ? /*#__PURE__*/_jsxDEV(EditFunctionalityDialog, {\n            onGood: onGoodEditing,\n            func: editingFunc,\n            onError: cancelEditing,\n            onCancel: cancelEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 19\n          }, this) : null, confirmAddFunc ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 19\n          }, this) : addDetailsFunc ? /*#__PURE__*/_jsxDEV(AddFunctionalityDetails, {\n            onGood: onGoodEditing,\n            func: addDetailsFunc,\n            onError: cancelAddDetails,\n            onCancel: cancelAddDetails\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 20\n          }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(JPTable, {\n                sortedkey: \"funcName\",\n                data: getDataFunctionality(),\n                updateData: updateFunctionalities,\n                indexes: indexes,\n                tName: \"Functionality\",\n                extra: {\n                  delete: {\n                    action: deleteFunctionalityAction,\n                    labelKey: 'funcName',\n                    onSuccessDelete: () => {}\n                  },\n                  edit: {\n                    action: showEditing\n                  },\n                  details: {\n                    action: redirectToList\n                  },\n                  add: {\n                    action: showAddDetails\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: \"New Functionality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.box,\n                  spacing: 1,\n                  item: true,\n                  container: true,\n                  direction: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      helperText: !validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : '',\n                      error: !validNewFunc,\n                      label: \"Insert new functionality name\",\n                      required: true,\n                      onChange: event => {\n                        setNewFunc(event.target.value);\n                        if (!validNewFunc) setValidNewFunc(isFunctionalityValid(event.target.value.trim()));\n                      },\n                      fullWidth: true,\n                      value: newFunc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 682,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: `digital-twin-label-${newFunc}`,\n                      children: \"Digital Twin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 697,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: `digital-twin-label-${newFunc}`,\n                      value: digitalTwinChoice,\n                      onChange: handleDigitalTwinChoice,\n                      children: (digitalTwins || []).map(digitalTwin => {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: digitalTwin.dtName,\n                          children: digitalTwin.dtName\n                        }, digitalTwin.dtId, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 699,\n                          columnNumber: 85\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 698,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    justify: \"flex-end\",\n                    spacing: 1,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        variant: \"contained\",\n                        onClick: validateAndCreate,\n                        children: \"Add Functionality\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 704,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 703,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 621,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(DigitalTwinMonitoring, \"DznQLf8yGquU7QlJZbJRTHjOUT4=\", false, function () {\n  return [useFunctionBlockStyles, useStore, useStore, useStore, useStore, useMountEffect, useMountEffect, useMountEffect, useMountEffect];\n});\n\n_c3 = DigitalTwinMonitoring;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditFunctionalityDialog\");\n$RefreshReg$(_c2, \"AddFunctionalityDetails\");\n$RefreshReg$(_c3, \"DigitalTwinMonitoring\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinMonitoring.tsx"],"names":["React","useState","Navigator","ConfirmAction","ConfirmActionStateLabel","LazyComponent","JPTable","useMountEffect","getOrDownloadDigitalTwins","getOrDownloadFunctionalities","getOrDownloadMonitoredEvents","getOrDownloadMonitoredVariables","getOrDownloadAssociatedSmartComponents","useStore","FunctionalityActions","DigitalTwinActions","AssociatedSmartComponentActions","MonitoredVariableActions","MonitoredEventActions","TextField","Grid","Button","Box","Dialog","DialogTitle","CircularProgress","Select","InputLabel","MenuItem","createFunctionality","createMonitoredEvent","createMonitoredVariable","updateFunctionality","deleteFunctionality","useDialogStyles","CheckCircle","Error","useFunctionBlockStyles","Redirect","NEW_FUNCTIONALITY_RE","FUNCTION_BLOCK_RE","VARIABLE_RE","EVENT_RE","functionalityId","idMonitoredVariable","idMonitoredEvent","funcUserId","EditFunctionalityDialog","props","newFuncName","setNewFuncName","func","funcName","classes","sending","setSending","result","setResult","done","action","funcId","then","response","good","message","msg","catch","error","finally","onGood","onError","box","event","target","value","buttons","onCancel","AddFunctionalityDetails","fetching","setFetching","data","associatedSmartComponents","dispatchAction","dispatchAssociatedSmartComponentActions","updateAssociatedSmartComponents","assScs","setError","availableSmartComponents","setAvailableSmartComponents","setTimeout","e","i","length","scDtId","funcdtId","smartComponentChoice","setSmartComponentChoice","smartComponentIdChoice","setSmartComponentIdChoice","handleSmartComponentChoice","j","scName","scId","validFunctionBlock","setValidFunctionBlock","newFb","setNewFb","isFunctionBlockValid","fb","test","validVariable","setValidVariable","newVariable","setNewVariable","isVariableValid","variable","buildMonitoredVariable","monitoredVariableName","fbAssociated","funcIdAssociated","scAssociated","validEvent","setValidEvent","newEvent","setNewEvent","isEventValid","buildMonitoredEvent","monitoredEventName","monitoredVariable","monitoredEvent","map","sc","toString","trim","DigitalTwinMonitoring","newFunc","setNewFunc","confirmEditing","setConfirmEditing","confirmAddFunc","setConfirmAddFunc","validNewFunc","setValidNewFunc","errorFetchingFunctionalityState","label","state","positiveLabel","redirectTo","setRedirectTo","functionalities","dispatchFunctionalityActions","digitalTwins","dispatchDigitalTwinActions","monitoredVariables","dispatchMonitoredVariableActions","monitoredEvents","dispatchMonitoredEventActions","updateFunctionalities","funcs","monitoredEventData","updateDigitalTwins","dts","updateMonitoredVariables","monVars","updateMonitoredVariable","updateMonitoredEvents","monEvs","updateMonitoredEvent","addFunc","addFunctionality","editingFunc","setEditingFunc","addDetailsFunc","setAddDetailsFunc","indexes","key","isFunctionalityValid","validateAndCreate","validFunc","buildFunctionality","digitalTwinIdChoice","funcdtName","digitalTwinChoice","addNewFunctionalityAction","functionality","Promise","res","rej","extra","lastInsertedId","confirmFunctionalityCreationActionStates","start","negativeLabel","executing","success","confirmActionProps","title","states","currentState","onSuccess","getDataFunctionality","deleteFunctionalityAction","err","cancelAddDetails","showAddDetails","cancelEditing","showEditing","onGoodEditing","editingFunctionality","newFunctionalities","setDigitalTwinChoice","setDigitalTwinIdChoice","handleDigitalTwinChoice","dtName","dtId","monEv","redirectToList","delete","labelKey","onSuccessDelete","edit","details","add","digitalTwin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Navigator } from '../templates/Navigator/Navigator'\r\nimport { ConfirmAction, ConfirmActionState, ConfirmActionStateLabel, ConfirmActionProps } from '../templates/ConfirmAction/ConfirmAction'\r\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent'\r\nimport { JPTable } from '../templates/Table/JPTable'\r\nimport { Functionality, DigitalTwin, AssociatedSmartComponent, MonitoredVariable, MonitoredEvent} from '../../model'\r\nimport { useMountEffect } from '../../utils/main'\r\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities, getOrDownloadMonitoredEvents, getOrDownloadMonitoredVariables} from '../../utils/digitalTwins'\r\nimport { getOrDownloadAssociatedSmartComponents } from '../../utils/associatedSmartComponents'\r\nimport { useStore } from '../templates/Store/Store'\r\nimport { FunctionalityActions , DigitalTwinActions, AssociatedSmartComponentActions, MonitoredVariableActions, MonitoredEventActions} from '../../redux/actions'\r\nimport { RequestResponseState } from '../../services/api/api'\r\nimport { TextField, Grid, Button, Box, Dialog, DialogTitle, CircularProgress , Select, InputLabel, MenuItem } from '@material-ui/core'\r\nimport { createFunctionality, createMonitoredEvent, createMonitoredVariable, updateFunctionality, updateMonitoredVariable } from '../../services/api/digital-twin'\r\nimport { deleteFunctionality} from '../../services/api/digital-twin'\r\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style'\r\nimport { CheckCircle, Error } from '@material-ui/icons'\r\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\r\nimport { routes } from '../../App'\r\nimport { Redirect } from 'react-router-dom'\r\n// import { FunctionalityForm } from './FunctionalityForm'\r\n\r\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/\r\nconst FUNCTION_BLOCK_RE = /[a-zA-Z0-9]{3,}/\r\nconst VARIABLE_RE = /[a-zA-Z0-9]{3,}/\r\nconst EVENT_RE = /[a-zA-Z0-9]{3,}/\r\n\r\nlet functionalityId = -1\r\nlet idMonitoredVariable = -1\r\nlet idMonitoredEvent = -1\r\nconst funcUserId = 1\r\n\r\ninterface MonitoredEventWithDataState extends MonitoredEvent {\r\n    state: {\r\n        key:string | undefined\r\n        data: React.ReactElement\r\n    }\r\n}\r\n\r\nconst EditFunctionalityDialog = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n  const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n\r\n  const classes = useDialogStyles()\r\n\r\n  const [sending, setSending] : [boolean, Function] = useState(false)\r\n\r\n  const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n\r\n  const action = () => {\r\n\r\n      if(props.func.funcId) {\r\n\r\n          if(!result.done) {\r\n\r\n              setSending(true)\r\n  \r\n              updateFunctionality(props.func)\r\n\r\n                  .then((response: RequestResponseState) => {\r\n                      setResult({done:true, good: true, message: response.msg})\r\n                  })\r\n\r\n                  .catch((error: RequestResponseState) => {\r\n                      setResult({done: true, good: false, message: error.msg})\r\n                  })\r\n\r\n                  .finally(() => setSending(false))\r\n\r\n          }\r\n\r\n          else {\r\n\r\n              if(result.good)\r\n                  props.onGood({...props.func, funcName: newFuncName})\r\n              \r\n              else\r\n                  props.onError()\r\n\r\n          }\r\n\r\n      }\r\n\r\n  }\r\n\r\n  return (\r\n      <Dialog open={true}>\r\n          <DialogTitle>Edit Functionality</DialogTitle>\r\n          <Box className={classes.box}>\r\n              {\r\n                  !result.done \r\n                      ?\r\n                          <TextField \r\n                              disabled={sending}\r\n                              value={newFuncName}\r\n                              onChange={(event) => setNewFuncName(event.target.value)}\r\n                          />\r\n                      :    <Grid container justify=\"center\">\r\n                              <Grid item>\r\n                                  {\r\n                                      result.good \r\n                                          ?   <CheckCircle color=\"primary\" />\r\n                                          :   <Error color=\"error\" />\r\n                                  }\r\n                              </Grid>\r\n                              <Grid item>\r\n                                  <Box className={result.good ? classes.good : classes.error} textAlign=\"center\">{result.message}</Box>\r\n                              </Grid>\r\n                          </Grid> \r\n              }\r\n          </Box>\r\n          <Grid className={classes.buttons} container direction=\"row\" justify=\"space-between\">\r\n              <Grid item>\r\n                  {sending \r\n                      ? <CircularProgress color=\"primary\" />\r\n                      : <Button onClick={action}>Ok</Button>\r\n                  }\r\n              </Grid>\r\n              <Grid item>\r\n                  <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>\r\n              </Grid>\r\n          </Grid>\r\n      </Dialog>\r\n  )\r\n\r\n}\r\n\r\nconst AddFunctionalityDetails = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n    const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n  \r\n    const classes = useDialogStyles()\r\n  \r\n    const [sending, setSending] : [boolean, Function] = useState(false)\r\n  \r\n    const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n\r\n    const [fetching,setFetching] = useState(true)\r\n    const {data: associatedSmartComponents, dispatchAction: dispatchAssociatedSmartComponentActions} = useStore('associatedSmartComponents')\r\n    const updateAssociatedSmartComponents = (assScs: AssociatedSmartComponent[]) => dispatchAssociatedSmartComponentActions(AssociatedSmartComponentActions.updateAssociatedSmartComponents(assScs))\r\n    const [error,setError] = useState('')\r\n    \r\n    const [availableSmartComponents, setAvailableSmartComponents] : [AssociatedSmartComponent[] , Function] = useState([])\r\n\r\n    // Recuperar da base de dados os Smart Components Associados ao Digital Twin associado\r\n    useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadAssociatedSmartComponents(associatedSmartComponents)\r\n        .then((result: AssociatedSmartComponent[]) =>  updateAssociatedSmartComponents(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n    })\r\n\r\n    let i = 0\r\n\r\n    while( i < associatedSmartComponents.length ) {\r\n        if(associatedSmartComponents[i].scDtId === props.func.funcdtId){\r\n            availableSmartComponents[i] = associatedSmartComponents[i]\r\n        }\r\n        i++\r\n    }\r\n\r\n    // Escolher um AssociatedSmartComponent de dentro dos disponíveis pelo DT respectivo \r\n    const [smartComponentChoice, setSmartComponentChoice] = useState('')\r\n    const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0)\r\n\r\n    const handleSmartComponentChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSmartComponentChoice(event.target.value as string);\r\n    let j = 0;\r\n    while(j < associatedSmartComponents.length)\r\n    {\r\n        if(associatedSmartComponents[j].scName === (event.target.value as string))\r\n        {\r\n            setSmartComponentIdChoice(associatedSmartComponents[j].scId)\r\n        }\r\n        j++;\r\n    }\r\n    };\r\n\r\n    //Variáveis e funções de apoio à escolha do Function Block\r\n    const [validFunctionBlock, setValidFunctionBlock] : [boolean,Function] = useState(true)\r\n    const [newFb,setNewFb] : [string,Function] = useState('')\r\n    const isFunctionBlockValid = (fb:string) => NEW_FUNCTIONALITY_RE.test(fb)\r\n\r\n    //Variáveis e funções de apoio à escolha da Variable\r\n    const [validVariable, setValidVariable] : [boolean,Function] = useState(true)\r\n    const [newVariable,setNewVariable] : [string,Function] = useState('')\r\n    const isVariableValid = (variable:string) => VARIABLE_RE.test(variable)\r\n\r\n    const buildMonitoredVariable = (funcId: number | undefined) : MonitoredVariable => ({  \r\n        monitoredVariableName: newVariable, fbAssociated: newFb, \r\n        funcIdAssociated: funcId , idMonitoredVariable: idMonitoredVariable,\r\n        scAssociated: smartComponentChoice\r\n    })\r\n\r\n    //Variáveis e funções de apoio à escolha do Event\r\n    const [validEvent, setValidEvent] : [boolean,Function] = useState(true)\r\n    const [newEvent,setNewEvent] : [string,Function] = useState('')\r\n    const isEventValid = (event:string) => EVENT_RE.test(event)\r\n  \r\n    const buildMonitoredEvent = (funcId: number | undefined) : MonitoredEvent => ({  \r\n        monitoredEventName: newEvent, fbAssociated: newFb, \r\n        funcIdAssociated: funcId , idMonitoredEvent: idMonitoredEvent,\r\n        scAssociated: smartComponentChoice\r\n    })\r\n\r\n    //Função de atualização da database com os dados escolhidos \r\n    const action = () => {    \r\n        \r\n        let funcId = props.func.funcId\r\n        const monitoredVariable: MonitoredVariable = buildMonitoredVariable(funcId)\r\n        const monitoredEvent: MonitoredEvent = buildMonitoredEvent(funcId)\r\n\r\n        if(props.func.funcId) {\r\n  \r\n            if(!result.done) {\r\n  \r\n                setSending(true)\r\n                updateFunctionality(props.func)\r\n  \r\n                    .then((response: RequestResponseState) => {\r\n                        setResult({done:true, good: true, message: response.msg})\r\n                    })\r\n  \r\n                    .catch((error: RequestResponseState) => {\r\n                        setResult({done: true, good: false, message: error.msg})\r\n                    })\r\n  \r\n                    .finally(() => setSending(false))\r\n                \r\n                if(newVariable!=''){\r\n\r\n                    createMonitoredVariable(monitoredVariable)\r\n\r\n  \r\n                    .then((response: RequestResponseState) => {\r\n                        setResult({done:true, good: true, message: response.msg})\r\n                    })\r\n  \r\n                    .catch((error: RequestResponseState) => {\r\n                        setResult({done: true, good: false, message: error.msg})\r\n                    })\r\n  \r\n                    .finally(() => setSending(false))\r\n                }\r\n                \r\n\r\n                if(newEvent!=''){\r\n                     \r\n                    createMonitoredEvent(monitoredEvent)\r\n\r\n    \r\n                    .then((response: RequestResponseState) => {\r\n                        setResult({done:true, good: true, message: response.msg})\r\n                    })\r\n\r\n                    .catch((error: RequestResponseState) => {\r\n                        setResult({done: true, good: false, message: error.msg})\r\n                    })\r\n\r\n                    .finally(() => setSending(false))\r\n                }\r\n               \r\n            }\r\n  \r\n            else {\r\n  \r\n                if(result.good)\r\n                    props.onGood({...props.func, funcName: newFuncName})\r\n                \r\n                else\r\n                    props.onError()\r\n            }\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <Dialog open={true}>\r\n            <DialogTitle>Add Functionality Details</DialogTitle>\r\n            <Box className={classes.box}>\r\n            <Grid item> \r\n                <Grid container item xs>\r\n                    <Grid className={classes.box} spacing={3} item container direction=\"column\" alignItems=\"flex-start\">\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel id={`smart-component-label-${availableSmartComponents}`}>DINASORE</InputLabel>\r\n                            <Select labelId={`smart-component-label-${availableSmartComponents}`} value={smartComponentChoice} onChange={handleSmartComponentChoice}>\r\n                            {(availableSmartComponents || []).map((sc: any) => {return <MenuItem key={sc.scId} value={sc.scName}>{sc.scName}</MenuItem>})}\r\n                            </Select> \r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Function Block\"\r\n                                helperText={!validFunctionBlock ? FUNCTION_BLOCK_RE.toString() : ''}\r\n                                error={!validFunctionBlock}\r\n                                required\r\n                                onChange={(event) => {\r\n                                    setNewFb(event.target.value)\r\n                                    if(!validFunctionBlock)\r\n                                        setValidFunctionBlock(isFunctionBlockValid(event.target.value.trim()))\r\n                                    }}\r\n                                fullWidth\r\n                                value={newFb}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Variable\"\r\n                                helperText={!validVariable ? VARIABLE_RE.toString() : ''}\r\n                                error={!validVariable}\r\n                                required\r\n                                onChange={(event) => {\r\n                                    setNewVariable(event.target.value)\r\n                                    if(!validVariable)\r\n                                        setValidVariable(isVariableValid(event.target.value.trim()))\r\n                                    }}\r\n                                fullWidth\r\n                                value={newVariable}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Event\"\r\n                                helperText={!validEvent ? EVENT_RE.toString() : ''}\r\n                                error={!validEvent}\r\n                                required\r\n                                onChange={(event) => {\r\n                                    setNewEvent(event.target.value)\r\n                                    if(!validEvent)\r\n                                        setValidEvent(isEventValid(event.target.value.trim()))\r\n                                    }}\r\n                                fullWidth\r\n                                value={newEvent}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.buttons} container direction=\"row\" justify=\"space-between\">\r\n                <Grid item>\r\n                    {sending \r\n                        ? <CircularProgress color=\"primary\" />\r\n                        : <Button onClick={action}>Ok</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>\r\n                </Grid>\r\n            </Grid>\r\n         </Box>\r\n        </Dialog>\r\n    )\r\n  \r\n}\r\n\r\nexport const DigitalTwinMonitoring = () => {\r\n    \r\n  const classes = useFunctionBlockStyles()\r\n\r\n  const [fetching,setFetching] = useState(true)\r\n  const [error,setError] = useState('')\r\n  const [newFunc,setNewFunc] : [string,Function] = useState('')\r\n\r\n  const [confirmEditing,setConfirmEditing] : [boolean, Function] = useState(false)\r\n  const [confirmAddFunc,setConfirmAddFunc] : [boolean, Function] = useState(false)\r\n\r\n  const [validNewFunc, setValidNewFunc] : [boolean,Function] = useState(true)\r\n\r\n  const errorFetchingFunctionalityState : ConfirmActionState = {\r\n    label: error,\r\n    state: ConfirmActionStateLabel.error,\r\n    positiveLabel: 'Ok'\r\n  }\r\n\r\n  const [redirectTo, setRedirectTo] : [number, Function] = useState(-1)\r\n\r\n  const {data:functionalities, dispatchAction:dispatchFunctionalityActions} = useStore('functionalities')\r\n  const {data:digitalTwins, dispatchAction:dispatchDigitalTwinActions} = useStore('digitalTwins')\r\n  const {data:monitoredVariables, dispatchAction:dispatchMonitoredVariableActions} = useStore('monitoredVariables')\r\n  const {data:monitoredEvents, dispatchAction:dispatchMonitoredEventActions} = useStore('monitoredEvents')\r\n\r\n  const onCancel = () => setError('')\r\n\r\n  const updateFunctionalities = (funcs: Functionality[]) => {\r\n      dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs))\r\n      monitoredEventData(funcs)}\r\n\r\n  const updateDigitalTwins = (dts: DigitalTwin[]) => dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(dts))\r\n  const updateMonitoredVariables = (monVars: MonitoredVariable[]) => dispatchMonitoredVariableActions(MonitoredVariableActions.updateMonitoredVariable(monVars))\r\n  const updateMonitoredEvents = (monEvs: MonitoredEvent[]) => dispatchMonitoredEventActions(MonitoredEventActions.updateMonitoredEvent(monEvs))\r\n  \r\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({funcId: functionalityId, funcUserId: 1 , funcName: newFunc, funcdtId: 1}))\r\n \r\n  const [editingFunc, setEditingFunc] : [Functionality | null,Function] = useState(null)\r\n  const [addDetailsFunc, setAddDetailsFunc] : [Functionality | null,Function] = useState(null)\r\n\r\n  const indexes = [\r\n    {label: 'Functionality', key: 'funcName'},\r\n    {label: 'Digital Twin', key: 'dtName'},\r\n    {label: 'State', key: 'dtDescription'},\r\n    {label: '#Monitored Variables', key: 'dtMonitoredVariableEvent'},\r\n    {label: '#Monitored Events', key: 'dtMonitoredVariableEvent'},\r\n  ]\r\n\r\n  // Recuperar da base de dados as funcionalidades (Functionality)\r\n  useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadFunctionalities(functionalities)\r\n        .then((result: Functionality[]) => updateFunctionalities(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  // Recuperar da base de dados os digital twins (DigitalTwin)\r\n  useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadDigitalTwins(digitalTwins)\r\n        .then((result: DigitalTwin[]) => updateDigitalTwins(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  const isFunctionalityValid = (func:string) => NEW_FUNCTIONALITY_RE.test(func)\r\n\r\n  const validateAndCreate = () => {\r\n\r\n  const validFunc= isFunctionalityValid(newFunc)\r\n\r\n    if(!validFunc)\r\n      setValidNewFunc(false)\r\n    else\r\n      setConfirmAddFunc(true)\r\n\r\n  }\r\n\r\n  const buildFunctionality = () : Functionality => ({\r\n    funcName: newFunc, funcId: functionalityId,\r\n    funcdtId: digitalTwinIdChoice , funcUserId, funcdtName: digitalTwinChoice,\r\n  })\r\n\r\n\r\n  const addNewFunctionalityAction = () : Promise<string> => {\r\n\r\n    const functionality : Functionality = buildFunctionality()\r\n\r\n    return new Promise<string>((res:Function, rej:Function)  => {\r\n\r\n        createFunctionality(functionality)\r\n\r\n            .then((result: RequestResponseState) => {\r\n            functionalityId = result.extra.lastInsertedId\r\n                res('Functionality created')\r\n            })\r\n\r\n            .catch((e:RequestResponseState) => rej(e.msg))\r\n\r\n    })\r\n  }\r\n\r\n  const confirmFunctionalityCreationActionStates = {\r\n    start: {\r\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\r\n      positiveLabel: 'Ok',\r\n      negativeLabel: 'Cancel',\r\n      state: ConfirmActionStateLabel.start\r\n    },\r\n    executing: {\r\n      label: '',\r\n      state: ConfirmActionStateLabel.executing,\r\n    },\r\n    success: {\r\n      label: 'Functionality Created',\r\n      state: ConfirmActionStateLabel.success,\r\n      positiveLabel: 'Ok'\r\n    },\r\n    error: {\r\n      label: 'Error Creating Functionality',\r\n      state: ConfirmActionStateLabel.error,\r\n      positiveLabel: 'Ok'\r\n    },\r\n  }\r\n\r\n  const confirmActionProps : ConfirmActionProps = {\r\n\r\n    title: 'Add Functionality',\r\n    states: confirmFunctionalityCreationActionStates,\r\n    currentState: confirmFunctionalityCreationActionStates.start,\r\n    onCancel: () => setConfirmAddFunc(false),\r\n    onError: () => setConfirmAddFunc(false),\r\n    onSuccess: () => {\r\n        addFunc()\r\n        setNewFunc('')\r\n    },\r\n    action: addNewFunctionalityAction,\r\n  }\r\n\r\n  const getDataFunctionality = () => functionalities.map((functionality: Functionality) => {\r\n\r\n    return {\r\n          ...functionality,\r\n    }\r\n  })\r\n\r\n  const deleteFunctionalityAction = (func: Functionality) : Promise<any> => {\r\n\r\n    return new Promise(async(res:Function,rej:Function) => {\r\n\r\n        if(!func.funcId) {\r\n            rej('Error')\r\n            return\r\n        }\r\n\r\n        try {\r\n            const response : RequestResponseState = await deleteFunctionality(func.funcId)\r\n            res(response)\r\n          }\r\n\r\n        catch(err) {\r\n            rej(err)\r\n        }\r\n    })\r\n  }\r\n\r\n  //Adicionar Detalhes à Funcionalidade\r\n  const cancelAddDetails = () => setAddDetailsFunc(null);\r\n  const showAddDetails = (func: Functionality) => setAddDetailsFunc(func)\r\n  \r\n  //Editar a Funcionalidade\r\n  const cancelEditing = () => setEditingFunc(null)\r\n  const showEditing = (func: Functionality) => setEditingFunc(func)\r\n\r\n  const onGoodEditing = (editingFunctionality: Functionality) => {\r\n      \r\n    const newFunctionalities = functionalities.map((func: Functionality) => {\r\n\r\n    if(func.funcId === editingFunctionality.funcId)\r\n        return {...func, funcName: editingFunctionality.funcName, funcdtId: editingFunctionality.funcdtId}\r\n    return func\r\n\r\n    })\r\n  \r\n    cancelEditing()\r\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities))\r\n  }\r\n\r\n  // Associar um digital twin à nova funcionalidade criada\r\n  const [digitalTwinChoice, setDigitalTwinChoice] = useState('')\r\n  const [digitalTwinIdChoice, setDigitalTwinIdChoice] = useState(0)\r\n\r\n  const handleDigitalTwinChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setDigitalTwinChoice(event.target.value as string);\r\n    let i = 0;\r\n    while(i < digitalTwins.length)\r\n    {\r\n        if(digitalTwins[i].dtName === (event.target.value as string))\r\n        {\r\n            setDigitalTwinIdChoice(digitalTwins[i].dtId)\r\n        }\r\n        i++;\r\n    }\r\n   \r\n  };\r\n\r\n  // Recuperar da base de dados as monitoredVariables (MonitoredVariable)\r\n   useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadMonitoredVariables(monitoredVariables)\r\n        .then((result: MonitoredVariable[]) => updateMonitoredVariables(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n   })\r\n\r\n  // Recuperar da base de dados as monitoredVariables (MonitoredVariable)\r\n   useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n    \r\n    setFetching(true)\r\n    getOrDownloadMonitoredEvents(monitoredEvents)\r\n        .then((result: MonitoredEvent[]) => updateMonitoredEvents(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  const monitoredEventData = (monEv: MonitoredEvent) : MonitoredEventWithDataState => {\r\n\r\n    return (\r\n        {\r\n            ...monEv, \r\n            state:  {\r\n                key: monEv.monitoredEventName,\r\n                data: <Box className= {monEv.monitoredEventName}/>\r\n            }\r\n        }\r\n    )\r\n}\r\n  \r\n  const redirectToList = (func : Functionality) => setRedirectTo(func.funcId)\r\n\r\n  if(redirectTo !== -1) \r\n  return  <Redirect to={`/functionality-details/${redirectTo}`} push={true}/>\r\n\r\n\r\n  return (\r\n    <Navigator title=\"New Digital Twin Functionality\">\r\n    <> \r\n        {error !== ''\r\n                ? <ConfirmAction title='Fetching Functionalities' currentState={errorFetchingFunctionalityState} states={{error: errorFetchingFunctionalityState}} onCancel={onCancel}/>\r\n                : null \r\n        }\r\n        <LazyComponent loaded={!fetching}>\r\n        <>\r\n            {confirmEditing\r\n                ? <ConfirmAction {...confirmActionProps} /> \r\n                : editingFunc\r\n                ? <EditFunctionalityDialog\r\n                    onGood={onGoodEditing}\r\n                    func={editingFunc}\r\n                    onError={cancelEditing}\r\n                    onCancel={cancelEditing} />\r\n                    : null\r\n            }\r\n            {confirmAddFunc \r\n                ? <ConfirmAction {...confirmActionProps} /> \r\n                : addDetailsFunc\r\n                ?  <AddFunctionalityDetails\r\n                    onGood={onGoodEditing}\r\n                    func={addDetailsFunc}\r\n                    onError={cancelAddDetails}\r\n                    onCancel={cancelAddDetails} />\r\n                    : null\r\n            }\r\n            <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                    <JPTable\r\n                            sortedkey=\"funcName\"\r\n                            data={getDataFunctionality()} \r\n                            updateData={updateFunctionalities} \r\n                            indexes={indexes} \r\n                            tName='Functionality'\r\n                            extra={{\r\n                                delete: {\r\n                                    action: deleteFunctionalityAction,\r\n                                    labelKey: 'funcName',\r\n                                    onSuccessDelete: () => {}\r\n                                },\r\n                                edit: {\r\n                                    action: showEditing\r\n                                },\r\n                                details: {\r\n                                    action: redirectToList,\r\n                                },\r\n                                add: {\r\n                                    action: showAddDetails\r\n                                }\r\n                            }} \r\n                    />\r\n                </Grid>\r\n                <Grid item xs>\r\n                    New Functionality\r\n                </Grid>\r\n                <Grid item> \r\n                    <Grid container item xs>\r\n                    <Grid className={classes.box} spacing={1} item container direction=\"row\">\r\n                        <Grid item xs={4}>\r\n                            <TextField\r\n                                helperText={!validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : ''}\r\n                                error={!validNewFunc}\r\n                                label=\"Insert new functionality name\" \r\n                                required\r\n                                onChange={(event) => {\r\n                                    setNewFunc(event.target.value)\r\n                                    if(!validNewFunc)\r\n                                        setValidNewFunc(isFunctionalityValid(event.target.value.trim()))\r\n                                }}\r\n                                fullWidth\r\n                                value={newFunc}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            <InputLabel id={`digital-twin-label-${newFunc}`}>Digital Twin</InputLabel>\r\n                            <Select labelId={`digital-twin-label-${newFunc}`} value={digitalTwinChoice} onChange={handleDigitalTwinChoice}>\r\n                            {(digitalTwins || []).map((digitalTwin: any) => {return <MenuItem key={digitalTwin.dtId} value={digitalTwin.dtName}>{digitalTwin.dtName}</MenuItem>})}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid container justify=\"flex-end\" spacing={1}>\r\n                            <Grid item>\r\n                                <Button\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                onClick={validateAndCreate}\r\n                                >\r\n                                Add Functionality\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </Grid>\r\n                 </Grid>\r\n            </Grid>\r\n        </>\r\n        </LazyComponent>\r\n    </>\r\n    </Navigator>\r\n )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}