{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/FunctionBlocks/FunctionBlock/EditFunctionBlock.tsx\";\nimport React, { useState } from 'react';\nimport { useMountEffect, toBase64 } from '../../../utils/main';\nimport { useRouteMatch, Redirect } from 'react-router-dom';\nimport { useStore } from '../../templates/Store/Store';\nimport { updateFunctionBlock } from '../../../services/api/function-block';\nimport { ConfirmAction, ConfirmActionStateLabel } from '../../templates/ConfirmAction/ConfirmAction';\nimport { Navigator } from '../../templates/Navigator/Navigator';\nimport { LazyComponent } from '../../templates/LazyComponent/LazyComponent';\nimport { FunctionBlockActions, FunctionBlockCategoriesActions } from '../../../redux/actions';\nimport { FunctionBlockForm } from './FunctionBlockForm';\nimport { routes } from '../../../App';\nimport { getOrDownloadFunctionBlocks, getOrDownloadFunctionBlockCategories } from '../../../utils/functionBlock';\nconst fbUserId = 1;\nconst emptyFile = new File([], '');\nexport const EditFunctionBlock = () => {\n  const matchParams = useRouteMatch();\n  const id = matchParams.params.id;\n  const {\n    data: functionBlocks,\n    dispatchAction: dispatchFunctionBlocksActions\n  } = useStore('functionBlocks');\n  const {\n    dispatchAction: dispatchFunctionBlockCategoriesActions\n  } = useStore('functionBlockCategories');\n\n  const updateLocalFunctionBlocks = fbs => dispatchFunctionBlocksActions(FunctionBlockActions.updateFunctionBlocks(fbs));\n\n  const updateLocalFunctionBlock = fb => dispatchFunctionBlocksActions(FunctionBlockActions.updateFunctionBlocks(functionBlocks.map(cFb => cFb.fbId === fb.fbId ? fb : cFb)));\n\n  const redirectToListAndUpdateLocal = () => {\n    updateLocalFunctionBlock(buildFunctionBlock());\n    getOrDownloadFunctionBlockCategories([]).then(result => dispatchFunctionBlockCategoriesActions(FunctionBlockCategoriesActions.updateFunctionBlockCategories(result))).catch(e => setError(e.msg));\n    redirectToList();\n  };\n\n  const buildFunctionBlock = () => ({\n    fbType,\n    fbDescription,\n    fbId,\n    fbFbcId: fbCategory.fbcId,\n    fbUserId,\n    fbCategoryName: fbCategory.fbcName,\n    fbGeneralCategory,\n    fbInputEvents,\n    fbOutputEvents,\n    fbInputVariables,\n    fbOutputVariables,\n    fbExternalDependencies\n  });\n\n  const [fetching, setFetching] = useState(false);\n  const [error, setError] = useState('');\n  const [redirectTo, setRedirectTo] = useState(\"\");\n  const [fbImplFile, setFbImplFile] = useState(emptyFile);\n\n  const initializeFunctionBlock = fbs => {\n    let functionBlock = fbs.filter(fb => fb.fbId === parseInt(id))[0];\n    setFbId(functionBlock.fbId);\n    setFbType(functionBlock.fbType);\n    setFbCategory({\n      fbcId: functionBlock.fbFbcId,\n      fbcName: functionBlock.fbCategoryName,\n      fbcUserId: 1\n    });\n    setfbGeneralCategory(functionBlock.fbGeneralCategory);\n    setFbDescription(functionBlock.fbDescription);\n    setFbInputVariables(functionBlock.fbInputVariables);\n    setFbOutputVariables(functionBlock.fbOutputVariables);\n    setFbInputEvents(functionBlock.fbInputEvents);\n    setFbOutputEvents(functionBlock.fbOutputEvents);\n    setFbExternalDependencies(functionBlock.fbExternalDependencies);\n  };\n\n  useMountEffect(() => {\n    setFetching(true);\n    getOrDownloadFunctionBlocks(functionBlocks).then(result => {\n      updateLocalFunctionBlocks(result);\n      initializeFunctionBlock(result);\n    }).catch(e => {\n      setError(e.msg);\n    }).finally(() => setFetching(false));\n  });\n  const errorState = {\n    label: error,\n    state: ConfirmActionStateLabel.error,\n    positiveLabel: 'Ok'\n  };\n\n  const onCancel = () => setError('');\n\n  const redirectToList = () => setRedirectTo(routes.functionBlockList);\n\n  const [fbId, setFbId] = useState(-1);\n  const [fbType, setFbType] = useState('');\n  const [fbCategory, setFbCategory] = useState({\n    fbcName: '',\n    fbcUserId: -1\n  });\n  const [fbGeneralCategory, setfbGeneralCategory] = useState('');\n  const [fbDescription, setFbDescription] = useState('');\n  const [fbInputVariables, setFbInputVariables] = useState([]);\n  const [fbOutputVariables, setFbOutputVariables] = useState([]);\n  const [fbInputEvents, setFbInputEvents] = useState([]);\n  const [fbOutputEvents, setFbOutputEvents] = useState([]);\n  const [fbExternalDependencies, setFbExternalDependencies] = useState([]);\n\n  const editFunctionBlockAction = () => {\n    const functionBlock = buildFunctionBlock();\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        if (fbImplFile !== emptyFile) {\n          toBase64(fbImplFile).then(file => {\n            editFunctionBlockApiCall(functionBlock, file).then(response => res(response)).catch(error => rej(error));\n          }).catch(e => rej('Error sending implementation file'));\n        } else editFunctionBlockApiCall(functionBlock).then(response => res(response)).catch(error => rej(error));\n      }, 0);\n    });\n  };\n\n  const editFunctionBlockApiCall = (functionBlock, file) => {\n    return new Promise((res, rej) => {\n      updateFunctionBlock(functionBlock, file).then(r => res(r.msg)).catch(e => {\n        console.error(e);\n        rej(e.msg);\n      });\n    });\n  };\n\n  if (redirectTo !== \"\") return /*#__PURE__*/React.createElement(Redirect, {\n    to: redirectTo,\n    push: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 16\n    }\n  });\n  return /*#__PURE__*/React.createElement(Navigator, {\n    title: \"Function Blocks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, error !== '' ? /*#__PURE__*/React.createElement(ConfirmAction, {\n    title: \"Fetching Function Blocks\",\n    currentState: errorState,\n    states: {\n      error: errorState\n    },\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }) : null, /*#__PURE__*/React.createElement(LazyComponent, {\n    loaded: !fetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FunctionBlockForm, {\n    fbType: {\n      fbType,\n      setFbType\n    },\n    fbGeneralCategory: {\n      fbGeneralCategory,\n      setfbGeneralCategory\n    },\n    fbCategory: {\n      fbCategory,\n      setFbCategory\n    },\n    fbDescription: {\n      fbDescription,\n      setFbDescription\n    },\n    fbInputVariables: {\n      fbInputVariables,\n      setFbInputVariables\n    },\n    fbOutputVariables: {\n      fbOutputVariables,\n      setFbOutputVariables\n    },\n    fbInputEvents: {\n      fbInputEvents,\n      setFbInputEvents\n    },\n    fbOutputEvents: {\n      fbOutputEvents,\n      setFbOutputEvents\n    },\n    fbExternalDependencies: {\n      fbExternalDependencies,\n      setFbExternalDependencies\n    },\n    fbImplFile: {\n      fbImplFile,\n      setFbImplFile\n    },\n    cancel: {\n      action: redirectToList,\n      label: 'Cancel'\n    },\n    confirmDialog: {\n      buttonTitle: 'Confirm',\n      title: 'Creating Function Block',\n      initialState: ConfirmActionStateLabel.executing,\n      action: editFunctionBlockAction,\n      onSuccess: redirectToListAndUpdateLocal,\n      success: {\n        label: '',\n        positiveLabel: 'Ok'\n      },\n      error: {\n        label: '',\n        positiveLabel: 'Ok'\n      }\n    },\n    byPassFields: {\n      fbImplFile: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/FunctionBlocks/FunctionBlock/EditFunctionBlock.tsx"],"names":["React","useState","useMountEffect","toBase64","useRouteMatch","Redirect","useStore","updateFunctionBlock","ConfirmAction","ConfirmActionStateLabel","Navigator","LazyComponent","FunctionBlockActions","FunctionBlockCategoriesActions","FunctionBlockForm","routes","getOrDownloadFunctionBlocks","getOrDownloadFunctionBlockCategories","fbUserId","emptyFile","File","EditFunctionBlock","matchParams","id","params","data","functionBlocks","dispatchAction","dispatchFunctionBlocksActions","dispatchFunctionBlockCategoriesActions","updateLocalFunctionBlocks","fbs","updateFunctionBlocks","updateLocalFunctionBlock","fb","map","cFb","fbId","redirectToListAndUpdateLocal","buildFunctionBlock","then","result","updateFunctionBlockCategories","catch","e","setError","msg","redirectToList","fbType","fbDescription","fbFbcId","fbCategory","fbcId","fbCategoryName","fbcName","fbGeneralCategory","fbInputEvents","fbOutputEvents","fbInputVariables","fbOutputVariables","fbExternalDependencies","fetching","setFetching","error","redirectTo","setRedirectTo","fbImplFile","setFbImplFile","initializeFunctionBlock","functionBlock","filter","parseInt","setFbId","setFbType","setFbCategory","fbcUserId","setfbGeneralCategory","setFbDescription","setFbInputVariables","setFbOutputVariables","setFbInputEvents","setFbOutputEvents","setFbExternalDependencies","finally","errorState","label","state","positiveLabel","onCancel","functionBlockList","editFunctionBlockAction","Promise","res","rej","setTimeout","file","editFunctionBlockApiCall","response","r","console","action","buttonTitle","title","initialState","executing","onSuccess","success"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useMountEffect, toBase64 } from '../../../utils/main'\nimport { useRouteMatch, match, Redirect } from 'react-router-dom'\nimport { FunctionBlock, Variable, Event, FBGeneralCategory, ExternalDependency, FBCategory } from '../../../model/index'\nimport { useStore } from '../../templates/Store/Store'\nimport { updateFunctionBlock } from '../../../services/api/function-block'\nimport { RequestResponseState } from '../../../services/api/api'\nimport { ConfirmAction, ConfirmActionStateLabel, ConfirmActionState } from '../../templates/ConfirmAction/ConfirmAction'\nimport { Navigator } from '../../templates/Navigator/Navigator'\nimport { LazyComponent } from '../../templates/LazyComponent/LazyComponent'\nimport { FunctionBlockActions, FunctionBlockCategoriesActions } from '../../../redux/actions'\nimport { FunctionBlockForm } from './FunctionBlockForm'\nimport { routes } from '../../../App'\nimport {getOrDownloadFunctionBlocks, getOrDownloadFunctionBlockCategories} from '../../../utils/functionBlock'\n\nconst fbUserId = 1\n\nconst emptyFile = new File([],'')\n\nexport const EditFunctionBlock = () => {\n    \n    const matchParams : match = useRouteMatch()\n    const id = (matchParams.params as any).id\n    \n    const {data:functionBlocks,dispatchAction:dispatchFunctionBlocksActions} = useStore('functionBlocks')\n    const {dispatchAction:dispatchFunctionBlockCategoriesActions} = useStore('functionBlockCategories')\n\n    const updateLocalFunctionBlocks = (fbs: FunctionBlock[]) => dispatchFunctionBlocksActions(FunctionBlockActions.updateFunctionBlocks(fbs))\n    const updateLocalFunctionBlock = (fb: FunctionBlock) => dispatchFunctionBlocksActions(FunctionBlockActions.updateFunctionBlocks(functionBlocks.map((cFb:FunctionBlock) => cFb.fbId === fb.fbId ? fb : cFb)))\n\n    const redirectToListAndUpdateLocal = () => {\n\n        updateLocalFunctionBlock(buildFunctionBlock())\n\n        getOrDownloadFunctionBlockCategories([])\n            .then((result: FBCategory[]) => dispatchFunctionBlockCategoriesActions(FunctionBlockCategoriesActions.updateFunctionBlockCategories(result)))\n            .catch((e:RequestResponseState) => setError(e.msg))        \n        \n        redirectToList()\n    } \n\n    const buildFunctionBlock = () : FunctionBlock => ({\n        fbType,fbDescription, fbId,\n        fbFbcId:fbCategory.fbcId as number, fbUserId, fbCategoryName: fbCategory.fbcName,\n        fbGeneralCategory, fbInputEvents, \n        fbOutputEvents, fbInputVariables, \n        fbOutputVariables, fbExternalDependencies \n    })\n\n    const [fetching,setFetching] = useState(false)\n    const [error,setError] = useState('')\n    const [redirectTo, setRedirectTo] : [string, Function] = useState(\"\")\n\n    const [fbImplFile, setFbImplFile] : [File,Function] = useState(emptyFile)\n\n    const initializeFunctionBlock = (fbs: FunctionBlock[]) => {\n\n        let functionBlock : FunctionBlock = fbs.filter((fb: FunctionBlock) => fb.fbId === parseInt(id))[0]\n        \n        setFbId(functionBlock.fbId)\n        setFbType(functionBlock.fbType)\n        setFbCategory({fbcId:functionBlock.fbFbcId, fbcName:functionBlock.fbCategoryName, fbcUserId: 1})\n        setfbGeneralCategory(functionBlock.fbGeneralCategory)\n        setFbDescription(functionBlock.fbDescription)\n        setFbInputVariables(functionBlock.fbInputVariables)\n        setFbOutputVariables(functionBlock.fbOutputVariables)\n        setFbInputEvents(functionBlock.fbInputEvents)\n        setFbOutputEvents(functionBlock.fbOutputEvents)\n        setFbExternalDependencies(functionBlock.fbExternalDependencies)\n        \n    }\n\n    useMountEffect(() => {\n\n        setFetching(true)\n        getOrDownloadFunctionBlocks(functionBlocks)\n            .then((result: FunctionBlock[]) => {\n                updateLocalFunctionBlocks(result)\n                initializeFunctionBlock(result)\n            })\n            .catch((e:RequestResponseState) => {\n                setError(e.msg)\n            })\n            .finally(() => setFetching(false))\n\n    })\n\n    const errorState : ConfirmActionState = {\n        label: error,\n        state: ConfirmActionStateLabel.error,\n        positiveLabel: 'Ok'\n    }\n\n    const onCancel = () => setError('')\n    const redirectToList = () => setRedirectTo(routes.functionBlockList)\n\n    const [fbId, setFbId] : [number,Function] = useState(-1)\n    const [fbType,setFbType] : [string,Function] = useState('')\n    const [fbCategory,setFbCategory] : [FBCategory,Function] = useState({fbcName:'', fbcUserId: -1})\n    const [fbGeneralCategory,setfbGeneralCategory] : ['' | FBGeneralCategory,Function] = useState('')\n    const [fbDescription,setFbDescription] : [string,Function] = useState('')\n    const [fbInputVariables,setFbInputVariables] : [Variable[],Function] = useState([])\n    const [fbOutputVariables,setFbOutputVariables] : [Variable[],Function] = useState([])\n    const [fbInputEvents,setFbInputEvents] : [Event[],Function] = useState([])\n    const [fbOutputEvents,setFbOutputEvents] : [Event[],Function] = useState([])\n    const [fbExternalDependencies, setFbExternalDependencies] : [ExternalDependency[], Function] = useState([])\n\n    const editFunctionBlockAction = () : Promise<string> => {\n\n        const functionBlock : FunctionBlock = buildFunctionBlock()\n    \n        return new Promise<string>((res:Function, rej:Function)  => {\n    \n          setTimeout(() => {\n\n            if(fbImplFile !== emptyFile) {\n\n                toBase64(fbImplFile)\n        \n                    .then((file:string) => {\n                        editFunctionBlockApiCall(functionBlock,file)\n                            .then((response:string) => res(response))\n                            .catch((error:string) => rej(error))\n                    })\n        \n                  .catch(e => rej('Error sending implementation file'))\n            }\n\n            else \n                editFunctionBlockApiCall(functionBlock)\n                    .then((response:string) => res(response))\n                    .catch((error:string) => rej(error))\n    \n          },0)\n    \n        }) \n    \n    }\n\n    const editFunctionBlockApiCall = (functionBlock: FunctionBlock, file?: string) => {\n\n        return new Promise<string>((res:Function, rej:Function)  => {\n            \n            updateFunctionBlock(functionBlock,file)\n                  \n                .then((r:RequestResponseState) => res(r.msg)) \n                .catch((e:RequestResponseState) => { \n                    console.error(e)\n                    rej(e.msg)\n                })\n\n        })\n\n    }\n\n    \n    if(redirectTo !== \"\") \n        return <Redirect to={redirectTo} push={true} />\n\n    return (\n        <Navigator title=\"Function Blocks\">\n            <> \n                {error !== ''\n                ? <ConfirmAction title='Fetching Function Blocks' currentState={errorState} states={{error: errorState}} onCancel={onCancel}/>\n                : null \n                }\n                <LazyComponent loaded={!fetching}>\n                <FunctionBlockForm \n                    fbType={{fbType, setFbType}}\n                    fbGeneralCategory={{fbGeneralCategory,setfbGeneralCategory}}\n                    fbCategory={{fbCategory,setFbCategory}}\n                    fbDescription={{fbDescription,setFbDescription}}\n                    fbInputVariables={{fbInputVariables,setFbInputVariables}}\n                    fbOutputVariables={{fbOutputVariables,setFbOutputVariables}}\n                    fbInputEvents={{fbInputEvents,setFbInputEvents}}\n                    fbOutputEvents={{fbOutputEvents,setFbOutputEvents}}\n                    fbExternalDependencies={{fbExternalDependencies,setFbExternalDependencies}}\n                    fbImplFile={{fbImplFile,setFbImplFile}}\n                    cancel={{action: redirectToList, label: 'Cancel'}}\n                    confirmDialog={{\n                        buttonTitle: 'Confirm',\n                        title: 'Creating Function Block',\n                        initialState: ConfirmActionStateLabel.executing,\n                        action: editFunctionBlockAction,\n                        onSuccess: redirectToListAndUpdateLocal,\n                        success: {\n                            label: '',\n                            positiveLabel: 'Ok'\n                        },\n                        error: {\n                            label: '',\n                            positiveLabel: 'Ok'\n                        }}}\n                    byPassFields={{fbImplFile: true}}\n                />\n                </LazyComponent>\n            </>\n        </Navigator>\n    )\n}"]},"metadata":{},"sourceType":"module"}