{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { TextField, Grid, Box, Button } from '@material-ui/core';\nimport { InOutType } from '../../model';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { SmartComponentList } from './SmartComponent';\nimport { EventList } from '../FunctionBlocks/FunctionBlock/Event';\nimport { Done, Clear } from '@material-ui/icons';\nimport { ReactComponent as UploadIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../icons/Upload.svg\";\nimport { ConfirmActionStateLabel, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_VALUES = {\n  eventType: 'Event'\n};\n\nconst updateEventVariablesOnRemoveVariable = (events, variableToRemove) => {\n  const newEvents = [...events];\n  newEvents.forEach(event => {\n    event.eventVariables = event.eventVariables.filter(ev => ev.evVariableName !== variableToRemove.variableName);\n  });\n  return newEvents;\n};\n\nconst updateEventVariablesOnUpdateVariable = (events, oldVariable, variableEdited) => {\n  const newEvents = [...events];\n  newEvents.forEach(event => {\n    event.eventVariables = event.eventVariables.map(ev => {\n      if (ev.evVariableName === oldVariable.variableName) return {\n        evVariableName: variableEdited.variableName,\n        evEventName: event.eventName\n      };else return ev;\n    });\n  });\n  return newEvents;\n};\n\nexport const DigitalTwinForm = props => {\n  _s();\n\n  var _props$confirmDialog$, _props$confirmDialog$2, _props$confirmDialog$3, _props$byPassFields;\n\n  /**styles */\n  const classes = useFunctionBlockStyles();\n  /**Fb type */\n\n  const {\n    fbType,\n    setFbType\n  } = props.fbType;\n  const [validType, setValidType] = useState(true);\n  const onChangeFBType = useCallback(event => {\n    setFbType(event.target.value.trim());\n    setValidType(true);\n  }, [setFbType]);\n  /* Variables and Events */\n\n  const {\n    fbInputVariables,\n    setFbInputVariables\n  } = props.fbInputVariables;\n  const {\n    fbOutputVariables,\n    setFbOutputVariables\n  } = props.fbOutputVariables;\n\n  const getEmptyEvent = type => ({\n    eventId: -1,\n    eventOpcua: \"\",\n    eventInoutType: type,\n    eventName: '',\n    eventType: DEFAULT_VALUES.eventType,\n    eventVariables: []\n  });\n\n  const [newInputEvent, setNewInputEvent] = useState(getEmptyEvent(InOutType.in));\n  const [newOutputEvent, setNewOutputEvent] = useState(getEmptyEvent(InOutType.out));\n  const {\n    fbInputEvents,\n    setFbInputEvents\n  } = props.fbInputEvents;\n  const {\n    fbOutputEvents,\n    setFbOutputEvents\n  } = props.fbOutputEvents;\n  /** Variable Update and Edition */\n\n  const onInputVariableRemoval = useCallback(variableToRemove => {\n    setFbInputEvents(prevEvents => updateEventVariablesOnRemoveVariable(prevEvents, variableToRemove));\n    setNewInputEvent(prevEvent => updateEventVariablesOnRemoveVariable([prevEvent], variableToRemove)[0]);\n  }, [setFbInputEvents]);\n  const onOutputVariableRemoval = useCallback(variableToRemove => {\n    setFbOutputEvents(prevEvents => updateEventVariablesOnRemoveVariable(prevEvents, variableToRemove));\n    setNewOutputEvent(prevEvent => updateEventVariablesOnRemoveVariable([prevEvent], variableToRemove)[0]);\n  }, [setFbOutputEvents]);\n  const onInputVariableEdition = useCallback((oldVariable, newVariable) => {\n    setFbInputEvents(prevEvents => updateEventVariablesOnUpdateVariable(prevEvents, oldVariable, newVariable));\n    setNewInputEvent(prevNewEvent => updateEventVariablesOnUpdateVariable([prevNewEvent], oldVariable, newVariable)[0]);\n  }, [setFbInputEvents]);\n  const onOutputVariableEdition = useCallback((oldVariable, newVariable) => {\n    setFbOutputEvents(prevEvents => updateEventVariablesOnUpdateVariable(prevEvents, oldVariable, newVariable));\n    setNewOutputEvent(pevEvent => updateEventVariablesOnUpdateVariable([pevEvent], oldVariable, newVariable)[0]);\n  }, [setFbOutputEvents]);\n  /* Event edition */\n\n  const addNewInputEvent = useCallback(() => {\n    setFbInputEvents(prevEvents => [...prevEvents, newInputEvent]);\n    setNewInputEvent(getEmptyEvent(InOutType.in));\n  }, [newInputEvent, setFbInputEvents]);\n  const addNewOutputEvent = useCallback(() => {\n    setFbOutputEvents(prevEvents => [...prevEvents, newOutputEvent]);\n    setNewOutputEvent(getEmptyEvent(InOutType.out));\n  }, [newOutputEvent, setFbOutputEvents]);\n  const removeInputEvent = useCallback(eventToRemove => setFbInputEvents(prevEvents => prevEvents.filter(event => event !== eventToRemove)), [setFbInputEvents]);\n  const removeOutputEvent = useCallback(eventToRemove => setFbOutputEvents(prevEvents => prevEvents.filter(event => event !== eventToRemove)), [setFbOutputEvents]);\n\n  const setEvent = type => (event, index) => {\n    const setFunction = type === InOutType.in ? setFbInputEvents : setFbOutputEvents;\n    setFunction(prevEvents => {\n      const newEvents = [...prevEvents];\n      newEvents[index] = event;\n      return newEvents;\n    });\n  };\n\n  const setInputEvent = useCallback(setEvent(InOutType.in), []);\n  const setOutputEvent = useCallback(setEvent(InOutType.out), []);\n  const onChangeFBTFile = useCallback(event => loadFiles(event.target.files), [loadFiles]);\n  /* Dropping Files */\n\n  const addPreventWindowToOpenFile = () => {\n    window.addEventListener('dragover', preventDefaultAction);\n    window.addEventListener('drop', preventDefaultAction);\n  };\n\n  const removePreventWindowToOpenFile = () => {\n    window.removeEventListener('dragover', preventDefaultAction);\n    window.removeEventListener('drop', preventDefaultAction);\n  };\n\n  const preventDefaultAction = event => event.preventDefault();\n\n  const onDropFiles = useCallback(event => loadFiles(event.dataTransfer.files), [loadFiles]);\n  /* Buttons */\n\n  const onCancel = props.cancel.action;\n  const cancelLabel = props.cancel.label;\n  const confirmLabel = props.confirmDialog.buttonTitle;\n  /* Confirmation */\n\n  const [confirm, setConfirm] = useState(false);\n\n  const validateFields = () => {\n    const cValidType = fbType.trim() !== '';\n    if (!cValidType) setValidType(cValidType);\n    return cValidType;\n  };\n\n  const confirmButtonAction = () => {\n    if (validateFields()) setConfirm(true);\n  };\n\n  const confirmActionStates = {\n    start: {\n      label: (_props$confirmDialog$ = props.confirmDialog.start) === null || _props$confirmDialog$ === void 0 ? void 0 : _props$confirmDialog$.label,\n      positiveLabel: (_props$confirmDialog$2 = props.confirmDialog.start) === null || _props$confirmDialog$2 === void 0 ? void 0 : _props$confirmDialog$2.positiveLabel,\n      negativeLabel: (_props$confirmDialog$3 = props.confirmDialog.start) === null || _props$confirmDialog$3 === void 0 ? void 0 : _props$confirmDialog$3.negativeLabel,\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: props.confirmDialog.success.label,\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    },\n    error: {\n      label: props.confirmDialog.error.label,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    }\n  };\n  const confirmActionProps = {\n    title: props.confirmDialog.title,\n    states: confirmActionStates,\n    currentState: confirmActionStates.executing,\n    onCancel: () => setConfirm(false),\n    onError: () => setConfirm(false),\n    onSuccess: props.confirmDialog.onSuccess,\n    action: props.confirmDialog.action\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", confirm ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      onDrop: onDropFiles,\n      spacing: 2,\n      container: true,\n      direction: \"column\",\n      component: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        spacing: 1,\n        justify: \"space-between\",\n        item: true,\n        xs: true,\n        container: true,\n        direction: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: onChangeFBType,\n            value: fbType,\n            helperText: \"\",\n            error: !validType,\n            fullWidth: true,\n            required: true,\n            label: \"Type\",\n            id: \"fb-type\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: \"Variables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.box,\n          spacing: 1,\n          item: true,\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(SmartComponentList, {\n              onVariableEdition: onInputVariableEdition,\n              onVariableRemoval: onInputVariableRemoval,\n              setVariables: setFbInputVariables,\n              inOutType: InOutType.in,\n              title: \"Input\",\n              variables: fbInputVariables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(SmartComponentList, {\n              onVariableEdition: onOutputVariableEdition,\n              onVariableRemoval: onOutputVariableRemoval,\n              setVariables: setFbOutputVariables,\n              inOutType: InOutType.out,\n              title: \"Output\",\n              variables: fbOutputVariables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.box,\n          spacing: 1,\n          item: true,\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(EventList, {\n              setEvent: setInputEvent,\n              removeEvent: removeInputEvent,\n              addNewEvent: addNewInputEvent,\n              setEvents: setFbInputEvents,\n              newEvent: newInputEvent,\n              setNewEvent: setNewInputEvent,\n              variables: fbInputVariables,\n              inOutType: InOutType.in,\n              title: \"Input\",\n              events: fbInputEvents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(EventList, {\n              setEvent: setOutputEvent,\n              removeEvent: removeOutputEvent,\n              addNewEvent: addNewOutputEvent,\n              setEvents: setFbOutputEvents,\n              newEvent: newOutputEvent,\n              setNewEvent: setNewOutputEvent,\n              variables: fbOutputVariables,\n              inOutType: InOutType.out,\n              title: \"Output\",\n              events: fbOutputEvents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: changeImplFile,\n            value: \"\",\n            required: true,\n            accept: \".py\",\n            type: \"file\",\n            id: \"button-file\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"button-file\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.tfFile,\n              label: \"Implementation File\",\n              required: !((_props$byPassFields = props.byPassFields) === null || _props$byPassFields === void 0 ? void 0 : _props$byPassFields.fbImplFile),\n              error: !validFile,\n              disabled: true,\n              value: fbImplFile.name,\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(Box, {\n                  pb: 1,\n                  mr: 1,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    component: \"span\",\n                    children: /*#__PURE__*/_jsxDEV(UploadIcon, {\n                      className: classes.icon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 27\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          container: true,\n          direction: \"row\",\n          spacing: 2,\n          alignItems: \"center\",\n          justify: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onCancel,\n              color: \"secondary\",\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 86\n              }, this), cancelLabel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: confirmButtonAction,\n              color: \"primary\",\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Done, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 93\n              }, this), confirmLabel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DigitalTwinForm, \"EH9tVMf4ljMh39NVO/NWacGVrbU=\", false, function () {\n  return [useFunctionBlockStyles];\n});\n\n_c = DigitalTwinForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalTwinForm\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx"],"names":["React","useState","useCallback","TextField","Grid","Box","Button","InOutType","useFunctionBlockStyles","SmartComponentList","EventList","Done","Clear","ConfirmActionStateLabel","ConfirmAction","DEFAULT_VALUES","eventType","updateEventVariablesOnRemoveVariable","events","variableToRemove","newEvents","forEach","event","eventVariables","filter","ev","evVariableName","variableName","updateEventVariablesOnUpdateVariable","oldVariable","variableEdited","map","evEventName","eventName","DigitalTwinForm","props","classes","fbType","setFbType","validType","setValidType","onChangeFBType","target","value","trim","fbInputVariables","setFbInputVariables","fbOutputVariables","setFbOutputVariables","getEmptyEvent","type","eventId","eventOpcua","eventInoutType","newInputEvent","setNewInputEvent","in","newOutputEvent","setNewOutputEvent","out","fbInputEvents","setFbInputEvents","fbOutputEvents","setFbOutputEvents","onInputVariableRemoval","prevEvents","prevEvent","onOutputVariableRemoval","onInputVariableEdition","newVariable","prevNewEvent","onOutputVariableEdition","pevEvent","addNewInputEvent","addNewOutputEvent","removeInputEvent","eventToRemove","removeOutputEvent","setEvent","index","setFunction","setInputEvent","setOutputEvent","onChangeFBTFile","loadFiles","files","addPreventWindowToOpenFile","window","addEventListener","preventDefaultAction","removePreventWindowToOpenFile","removeEventListener","preventDefault","onDropFiles","dataTransfer","onCancel","cancel","action","cancelLabel","label","confirmLabel","confirmDialog","buttonTitle","confirm","setConfirm","validateFields","cValidType","confirmButtonAction","confirmActionStates","start","positiveLabel","negativeLabel","state","executing","success","error","confirmActionProps","title","states","currentState","onError","onSuccess","box","changeImplFile","tfFile","byPassFields","fbImplFile","validFile","name","startAdornment","icon"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { FormControl, InputLabel, TextField, Grid, Select, MenuItem, Box, Button,Typography, Chip } from '@material-ui/core'\nimport { FBGeneralCategory, Variable, InOutType, Event, EventVariable, FunctionBlock, FBCategory, ExternalDependency } from '../../model'\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\nimport { SmartComponentList } from './SmartComponent'\nimport { setSimpleField, useMountEffect } from '../../utils/main'\nimport { EventList } from '../FunctionBlocks/FunctionBlock/Event'\nimport { Done, Clear } from '@material-ui/icons'\nimport { ReactComponent as UploadIcon } from '../../icons/Upload.svg'\nimport { getFBfromFbtFile, getOrDownloadFunctionBlockCategories } from '../../utils/functionBlock'\nimport { ConfirmActionProps, ConfirmActionStateLabel, ConfirmActionAction, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction'\n\nconst DEFAULT_VALUES = {\n    eventType: 'Event'\n}\n\nconst updateEventVariablesOnRemoveVariable = (events:Event[],variableToRemove:Variable, ) : Event[] => {\n\n    const newEvents : Event[] = [...events]\n    newEvents.forEach((event: Event) => {\n\n        event.eventVariables = event.eventVariables.filter((ev: EventVariable) => ev.evVariableName !== variableToRemove.variableName)\n\n    })\n\n    return newEvents\n\n}\n\nconst updateEventVariablesOnUpdateVariable = (events:Event[], oldVariable:Variable,variableEdited:Variable) : Event[] => {\n\n    const newEvents : Event[] = [...events]\n    newEvents.forEach((event: Event) => {\n\n      event.eventVariables = event.eventVariables.map((ev: EventVariable) => {\n        if(ev.evVariableName === oldVariable.variableName)\n          return {\n            evVariableName: variableEdited.variableName,\n            evEventName: event.eventName\n          }\n        else\n          return ev\n      }) \n\n    })\n\n    return newEvents\n\n}\n\ninterface FunctionBlockFormProps {\n\n    fbType: {\n        fbType: string\n        setFbType: Function\n    },\n    fbInputVariables: {\n        fbInputVariables: Variable[]\n        setFbInputVariables: Function\n    }\n    fbOutputVariables: {\n        fbOutputVariables: Variable[]\n        setFbOutputVariables: Function\n    },\n    fbInputEvents: {\n        fbInputEvents: Event[]\n        setFbInputEvents: Function\n    }\n    fbOutputEvents: {\n        fbOutputEvents: Event[]\n        setFbOutputEvents: Function\n    },\n    cancel: {\n        label: string\n        action: () => void\n    },\n    confirmDialog: {\n        buttonTitle: string\n        title: string\n        initialState: ConfirmActionStateLabel\n        action: ConfirmActionAction\n        onSuccess : () => void\n        start? : {\n            label: string\n            positiveLabel: string\n            negativeLabel: string\n        }\n        success: {\n            label:string\n            positiveLabel: string\n        }\n        error: {\n            label: string\n            positiveLabel: string\n        }\n    },\n    byPassFields?: {\n      fbImplFile: boolean\n    }\n}\n\nexport const DigitalTwinForm = (props: FunctionBlockFormProps) => {\n\n    /**styles */\n    const classes = useFunctionBlockStyles()\n\n    /**Fb type */\n    const {fbType, setFbType} = props.fbType\n    const [validType, setValidType] = useState(true)\n    const onChangeFBType = useCallback((event:any) => {\n\n        setFbType(event.target.value.trim())\n        setValidType(true)\n    \n      },[setFbType])\n\n    /* Variables and Events */\n    const {fbInputVariables, setFbInputVariables} = props.fbInputVariables\n    const {fbOutputVariables, setFbOutputVariables} = props.fbOutputVariables\n    \n    const getEmptyEvent = (type:InOutType) : Event => ({\n        eventId: -1,\n        eventOpcua: \"\",\n        eventInoutType: type,\n        eventName: '',\n        eventType:DEFAULT_VALUES.eventType,\n        eventVariables: []\n    })\n\n    const [newInputEvent,setNewInputEvent] : [Event,Function] = useState(getEmptyEvent(InOutType.in))\n    const [newOutputEvent,setNewOutputEvent] : [Event,Function] = useState(getEmptyEvent(InOutType.out))\n\n    const {fbInputEvents, setFbInputEvents} = props.fbInputEvents\n    const {fbOutputEvents, setFbOutputEvents} = props.fbOutputEvents\n\n    /** Variable Update and Edition */\n    \n    const onInputVariableRemoval = useCallback((variableToRemove: Variable) => {\n\n        setFbInputEvents((prevEvents: Event[]) => updateEventVariablesOnRemoveVariable(prevEvents,variableToRemove))\n        setNewInputEvent((prevEvent:Event) => updateEventVariablesOnRemoveVariable([prevEvent],variableToRemove)[0])\n\n    }, [setFbInputEvents])\n\n    const onOutputVariableRemoval = useCallback((variableToRemove: Variable) => {\n\n        setFbOutputEvents((prevEvents: Event[]) => updateEventVariablesOnRemoveVariable(prevEvents,variableToRemove))\n        setNewOutputEvent((prevEvent: Event) => updateEventVariablesOnRemoveVariable([prevEvent],variableToRemove)[0])\n    \n    }, [setFbOutputEvents])\n\n\n    const onInputVariableEdition = useCallback((oldVariable:Variable, newVariable: Variable) => {\n\n        setFbInputEvents((prevEvents: Event[]) => updateEventVariablesOnUpdateVariable(prevEvents,oldVariable,newVariable))\n        setNewInputEvent((prevNewEvent: Event) => updateEventVariablesOnUpdateVariable([prevNewEvent],oldVariable,newVariable)[0])\n    \n    },[setFbInputEvents])\n    \n      const onOutputVariableEdition = useCallback((oldVariable:Variable, newVariable: Variable) => {\n    \n        setFbOutputEvents((prevEvents: Event[]) => updateEventVariablesOnUpdateVariable(prevEvents,oldVariable,newVariable))\n        setNewOutputEvent((pevEvent: Event) => updateEventVariablesOnUpdateVariable([pevEvent],oldVariable,newVariable)[0])\n    \n    },[setFbOutputEvents])\n\n\n    /* Event edition */\n\n    const addNewInputEvent = useCallback(() => {\n\n        setFbInputEvents((prevEvents: Event[]) => [...prevEvents, newInputEvent])\n        setNewInputEvent(getEmptyEvent(InOutType.in))\n    \n    },[newInputEvent, setFbInputEvents])\n    \n    const addNewOutputEvent = useCallback(() => {\n\n        setFbOutputEvents((prevEvents: Event[]) => [...prevEvents, newOutputEvent])\n        setNewOutputEvent(getEmptyEvent(InOutType.out))\n\n    },[newOutputEvent, setFbOutputEvents])\n    \n    const removeInputEvent = useCallback((eventToRemove: Event) => setFbInputEvents((prevEvents:Event[]) => prevEvents.filter((event:Event) => event !== eventToRemove)), [setFbInputEvents]) \n    const removeOutputEvent = useCallback((eventToRemove: Event) => setFbOutputEvents((prevEvents:Event[]) => prevEvents.filter((event:Event) => event !== eventToRemove)), [setFbOutputEvents]) \n    \n    const setEvent = (type:InOutType) => (event:Event,index:number) => {\n    \n        const setFunction = type === InOutType.in ? setFbInputEvents : setFbOutputEvents\n    \n        setFunction((prevEvents:Event[]) => {\n    \n          const newEvents : Event[] = [...prevEvents]\n          newEvents[index] = event\n          return newEvents\n        \n        })\n    \n    }\n\n    const setInputEvent = useCallback(setEvent(InOutType.in),[])\n    const setOutputEvent = useCallback(setEvent(InOutType.out),[])\n\n    const onChangeFBTFile = useCallback((event:any) => loadFiles(event.target.files),[loadFiles])\n\n    /* Dropping Files */\n    const addPreventWindowToOpenFile = () => {\n        window.addEventListener('dragover', preventDefaultAction)\n        window.addEventListener('drop',preventDefaultAction)\n    }\n    \n    const removePreventWindowToOpenFile = () => {\n        window.removeEventListener('dragover', preventDefaultAction)\n        window.removeEventListener('drop',preventDefaultAction)\n    } \n     \n    const preventDefaultAction = (event:any) => event.preventDefault()\n      \n    const onDropFiles = useCallback((event:any) => loadFiles(event.dataTransfer.files),[loadFiles])\n\n    /* Buttons */\n\n    const onCancel = props.cancel.action\n    const cancelLabel = props.cancel.label\n\n    const confirmLabel = props.confirmDialog.buttonTitle\n\n    /* Confirmation */\n\n    const [confirm, setConfirm] : [boolean, Function] = useState(false)\n\n    const validateFields = () : boolean => {\n\n        const cValidType = fbType.trim() !== ''\n            \n        if(!cValidType) setValidType(cValidType)\n    \n        return cValidType \n    \n    }\n\n    const confirmButtonAction = () => {\n\n        if(validateFields())\n          setConfirm(true)\n    }\n\n    const confirmActionStates = {\n        start: {\n            label: props.confirmDialog.start?.label,\n            positiveLabel: props.confirmDialog.start?.positiveLabel,\n            negativeLabel: props.confirmDialog.start?.negativeLabel,\n            state: ConfirmActionStateLabel.start\n        },\n        executing: {\n          label: '',\n          state: ConfirmActionStateLabel.executing,\n        },\n        success: {\n          label: props.confirmDialog.success.label,\n          state: ConfirmActionStateLabel.success,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n        error: {\n          label: props.confirmDialog.error.label,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n      }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: props.confirmDialog.title,\n        states: confirmActionStates,\n        currentState: confirmActionStates.executing,\n        onCancel: () => setConfirm(false),\n        onError: () => setConfirm(false),\n        onSuccess: props.confirmDialog.onSuccess,\n        action:props.confirmDialog.action,\n      \n    }\n\n    return (\n        <> {confirm ? <ConfirmAction {...confirmActionProps} /> : null}\n          <Grid onDrop={onDropFiles} spacing={2} container direction=\"column\" component=\"form\">\n            <Grid spacing={1} justify=\"space-between\" item xs container direction=\"row\">\n              <Grid item xs={6}>\n                <TextField\n                  onChange={onChangeFBType} \n                  value={fbType}\n                  helperText=\"\"\n                  error={!validType} \n                  fullWidth required \n                  label=\"Type\" \n                  id=\"fb-type\" \n                  type=\"text\" />\n              </Grid>\n            </Grid>\n            <Grid item xs>\n              Variables\n            </Grid>\n            <Grid container item xs>\n              <Grid className={classes.box} spacing={1} item container direction=\"row\">\n                <Grid item xs={6}>\n                  <SmartComponentList onVariableEdition={onInputVariableEdition} onVariableRemoval={onInputVariableRemoval} setVariables={setFbInputVariables} inOutType={InOutType.in} title=\"Input\" variables={fbInputVariables} />\n                </Grid>\n                <Grid item xs={6}>\n                  <SmartComponentList onVariableEdition={onOutputVariableEdition} onVariableRemoval={onOutputVariableRemoval} setVariables={setFbOutputVariables} inOutType={InOutType.out} title=\"Output\" variables={fbOutputVariables} />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs>\n              Events\n            </Grid>\n            <Grid container item xs>\n              <Grid className={classes.box} spacing={1} item container direction=\"row\">\n                <Grid item xs={6}>\n                  <EventList setEvent={setInputEvent} removeEvent={removeInputEvent} addNewEvent={addNewInputEvent} setEvents={setFbInputEvents} newEvent={newInputEvent} setNewEvent={setNewInputEvent} variables={fbInputVariables} inOutType={InOutType.in} title=\"Input\" events={fbInputEvents} />\n                </Grid>\n                <Grid item xs={6}>\n                  <EventList setEvent={setOutputEvent} removeEvent={removeOutputEvent} addNewEvent={addNewOutputEvent} setEvents={setFbOutputEvents} newEvent={newOutputEvent} setNewEvent={setNewOutputEvent} variables={fbOutputVariables} inOutType={InOutType.out} title=\"Output\" events={fbOutputEvents} />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs container direction=\"row\" justify=\"space-between\" alignItems=\"center\"> \n              <Grid item xs={6}>\n                  <input onChange={changeImplFile} value=\"\" required accept=\".py\" type=\"file\" id=\"button-file\" hidden />\n                  <label htmlFor=\"button-file\">\n                    <TextField\n                      className={classes.tfFile}\n                      label=\"Implementation File\"\n                      required={!props.byPassFields?.fbImplFile}\n                      error={!validFile}\n                      disabled={true}\n                      value={fbImplFile.name} \n                      InputProps={{\n                        startAdornment: (\n                          <Box pb={1} mr={1}>\n                            <Button variant=\"outlined\" component=\"span\">\n                              <UploadIcon className={classes.icon} />\n                            </Button>\n                          </Box> \n                        )\n                      }} />\n                  </label>\n              </Grid>\n              <Grid item xs={6} container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"flex-end\">\n                <Grid item>\n                    <Button onClick={onCancel} color=\"secondary\" variant=\"contained\"><Clear/>{cancelLabel}</Button>\n                </Grid>\n                <Grid>\n                  <Button onClick={confirmButtonAction} color=\"primary\" variant=\"contained\"><Done/>{confirmLabel}</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n            \n          </Grid>\n        </>\n      )\n}"]},"metadata":{},"sourceType":"module"}