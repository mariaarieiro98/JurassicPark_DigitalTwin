{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/FunctionBlocks/FunctionBlock/Event.tsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useFunctionBlockStyles } from \"./style\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { SearchableList } from '../../templates/Search/SearchableList';\nexport const EventList = React.memo(props => {\n  const classes = useFunctionBlockStyles();\n  const getNonUsedVariables = useCallback(event => {\n    return props.variables.filter(variable => event.eventVariables.find(element => element.evVariableName === variable.variableName) === undefined).map(variable => ({\n      evEventName: event.eventName,\n      evVariableName: variable.variableName\n    }));\n  }, [props.variables]);\n  const updateVars = useCallback((event, eventVariables) => {\n    event.eventVariables = [...eventVariables];\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, props.events.map((event, index) => /*#__PURE__*/React.createElement(EventRow, {\n    updateVars: updateVars,\n    key: index,\n    index: index,\n    addRemoveEvent: props.removeEvent,\n    nonUsedVariables: getNonUsedVariables,\n    setEvent: props.setEvent,\n    event: event,\n    newEvent: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 58\n    }\n  })), /*#__PURE__*/React.createElement(EventRow, {\n    addRemoveEvent: props.addNewEvent,\n    setEvent: props.setNewEvent,\n    updateVars: updateVars,\n    nonUsedVariables: getNonUsedVariables,\n    event: props.newEvent,\n    newEvent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n} //,\n// (prevProps: EventProps, nextProps:EventProps) => prevProps.events === nextProps.events && prevProps.variables === nextProps.variables && prevProps.newEvent === nextProps.newEvent\n);\nconst eventMandatoryFields = ['eventName', 'eventType'];\nconst EventRow = React.memo(props => {\n  const classes = useFunctionBlockStyles();\n  const [valid, setValid] = useState({\n    eventName: {\n      error: false,\n      msg: ''\n    },\n    eventType: {\n      error: false,\n      msg: ''\n    }\n  });\n\n  const updateVars = evs => {\n    const updatedEvent = { ...props.event,\n      eventVariables: evs\n    };\n    props.setEvent(updatedEvent, props.index);\n  };\n\n  const validateField = useCallback(field => {\n    const inValid = props.event[field] === '';\n\n    if (eventMandatoryFields.includes(field)) {\n      if (inValid) setValid(prevValid => ({ ...prevValid,\n        [field]: {\n          msg: 'Mandatory',\n          error: true\n        }\n      }));\n    }\n\n    return !inValid;\n  }, [props.event]);\n  const validate = useCallback(() => {\n    const validName = validateField('eventName');\n    const validType = validateField('eventType');\n    return validName && validType;\n  }, [validateField]);\n  useEffect(() => {\n    if (!props.newEvent) validate();\n  }, [props.newEvent, props.event.eventName, props.event.eventType, validate]);\n\n  const action = () => {\n    if (validate()) props.addRemoveEvent(props.event);\n  };\n\n  const updateField = field => event => {\n    setValid(prevVal => ({ ...prevVal,\n      [field]: {\n        msg: '',\n        error: false\n      }\n    }));\n    props.setEvent({ ...props.event,\n      [field]: event.target.value\n    }, props.index);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: props.event.eventName,\n    onChange: updateField('eventName'),\n    error: valid.eventName.error,\n    helperText: valid.eventName.msg,\n    fullWidth: true,\n    required: true,\n    label: \"Name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: props.event.eventOpcua || '',\n    onChange: updateField('eventOpcua'),\n    helperText: \"\",\n    fullWidth: true,\n    label: \"OPCUA\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: props.event.eventType,\n    onChange: updateField('eventType'),\n    error: valid.eventType.error,\n    helperText: valid.eventType.msg,\n    fullWidth: true,\n    required: true,\n    label: \"Type\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: action,\n    className: classes.varEvButton,\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, props.newEvent ? '+' : 'x'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Variables\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchableList, {\n    inList: props.event.eventVariables,\n    setInList: updateVars,\n    outList: props.nonUsedVariables(props.event),\n    showKey: \"evVariableName\",\n    newLabel: \"New Variable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }))));\n});","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/FunctionBlocks/FunctionBlock/Event.tsx"],"names":["React","useState","useEffect","useCallback","useFunctionBlockStyles","Grid","TextField","Button","SearchableList","EventList","memo","props","classes","getNonUsedVariables","event","variables","filter","variable","eventVariables","find","element","evVariableName","variableName","undefined","map","evEventName","eventName","updateVars","title","box","events","index","removeEvent","setEvent","addNewEvent","setNewEvent","newEvent","eventMandatoryFields","EventRow","valid","setValid","error","msg","eventType","evs","updatedEvent","validateField","field","inValid","includes","prevValid","validate","validName","validType","action","addRemoveEvent","updateField","prevVal","target","value","eventOpcua","varEvButton","nonUsedVariables"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { useFunctionBlockStyles } from \"./style\"\nimport { Event, InOutType, Variable, EventVariable } from \"../../../model\"\nimport { Grid, TextField, Button } from \"@material-ui/core\"\nimport { SearchableList } from '../../templates/Search/SearchableList'\n\ninterface EventProps {\n  variables: Variable[]\n  events: Event[]\n  setEvents: Function\n  title: string\n  inOutType: InOutType\n  newEvent: Event\n  setNewEvent: Function\n  addNewEvent: (event:Event) => void\n  removeEvent: (event:Event) => void\n  setEvent: (event:Event, index:number) => void\n}\n\nexport const EventList = React.memo((props: EventProps) => {\n\n  const classes = useFunctionBlockStyles()\n\n  const getNonUsedVariables = useCallback((event: Event) : EventVariable[] => {\n\n    return props.variables.filter((variable: Variable) => \n      event.eventVariables\n        .find((element:EventVariable) => element.evVariableName === variable.variableName) === undefined)\n        .map((variable:Variable) => ({\n          evEventName:event.eventName,\n          evVariableName:variable.variableName\n        }))\n\n  },[props.variables])\n\n  const updateVars = useCallback((event:Event, eventVariables:EventVariable[]) => {\n\n    event.eventVariables = [...eventVariables]\n\n  },[])\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>{props.title}</Grid>\n      <Grid item className={classes.box}>\n        {props.events.map((event:Event, index:number) => <EventRow updateVars={updateVars} key={index} index={index} addRemoveEvent={props.removeEvent} nonUsedVariables={getNonUsedVariables} setEvent={props.setEvent} event={event} newEvent={false} />)}\n        <EventRow addRemoveEvent={props.addNewEvent} setEvent={props.setNewEvent} updateVars={updateVars} nonUsedVariables={getNonUsedVariables} event={props.newEvent} newEvent={true} />\n      </Grid> \n    </Grid>\n  )\n}\n//,\n// (prevProps: EventProps, nextProps:EventProps) => prevProps.events === nextProps.events && prevProps.variables === nextProps.variables && prevProps.newEvent === nextProps.newEvent\n)\n\nconst eventMandatoryFields = ['eventName','eventType']\n\ninterface EventRowProps {\n  index?: number\n  addRemoveEvent: (event:Event) => void\n  setEvent:Function\n  updateVars:Function \n  nonUsedVariables:(event:Event) => EventVariable[] \n  event: Event\n  newEvent: boolean\n}\n\nconst EventRow = React.memo((props: EventRowProps) => {\n  \n  const classes = useFunctionBlockStyles()\n\n  const [valid, setValid] = useState({eventName:{error: false, msg: ''},eventType:{error:false,msg: ''}})\n\n  const updateVars = (evs:EventVariable[]) => {\n\n    const updatedEvent = {...props.event, eventVariables: evs}\n    props.setEvent(updatedEvent,props.index)\n\n  }\n\n  const validateField = useCallback((field:keyof Event) => {\n\n    const inValid = props.event[field] === ''\n\n    if(eventMandatoryFields.includes(field)) {\n      if(inValid)\n        setValid((prevValid:any) => ({...prevValid, [field]: {msg: 'Mandatory', error: true}}))\n    }\n      \n    return !inValid\n\n  },[props.event])\n\n  const validate = useCallback(() =>  {\n    \n    const validName = validateField('eventName')\n    const validType = validateField('eventType')\n    \n    return validName && validType\n  \n  },[validateField])\n\n  useEffect(() => {\n\n    if(!props.newEvent) \n      validate()\n  \n  }, [props.newEvent, props.event.eventName,props.event.eventType,validate])\n\n  const action = () => {\n\n    if(validate())\n      props.addRemoveEvent(props.event)\n\n  }\n\n  const updateField = (field: keyof Event) => (event:any) => {\n\n    setValid((prevVal) => ({...prevVal, [field]:{msg:'',error:false}}))\n    props.setEvent({...props.event, [field]: event.target.value},props.index)\n    \n  }\n\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      <Grid item container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n        <Grid item xs={4}>\n          <TextField value={props.event.eventName} onChange={updateField('eventName')} error={valid.eventName.error} helperText={valid.eventName.msg} fullWidth required label=\"Name\" type=\"text\" />\n        </Grid>\n        <Grid item xs={2}>\n          <TextField value={props.event.eventOpcua || ''} onChange={updateField('eventOpcua')} helperText=\"\" fullWidth label=\"OPCUA\" type=\"text\" />\n        </Grid>\n        <Grid item xs={3}>\n          <TextField value={props.event.eventType} onChange={updateField('eventType')} error={valid.eventType.error} helperText={valid.eventType.msg} fullWidth required label=\"Type\" type=\"text\" />\n        </Grid>\n        <Grid item xs={1}>\n          <Button onClick={action} className={classes.varEvButton} size=\"small\" variant=\"contained\">{props.newEvent ? '+' : 'x' }</Button>\n        </Grid>\n      </Grid>\n      <Grid item container direction=\"row\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          Variables\n        </Grid>\n        <Grid item>\n          <SearchableList inList={props.event.eventVariables} setInList={updateVars} outList={props.nonUsedVariables(props.event)} showKey=\"evVariableName\" newLabel=\"New Variable\"/>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n})"]},"metadata":{},"sourceType":"module"}