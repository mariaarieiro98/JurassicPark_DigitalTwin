{"ast":null,"code":"export function makeTriggerCommandAndExecute(data) {\n  const fs = require('fs'),\n        path = require('path'); // const fileName = './events_sub_serv.json'\n  // const file = require(fileName)\n\n\n  let key_eventName = data.monitoredEventName;\n  let key_eventFb = data.fbAssociated; //let ipArray = [key_eventFb + \".\" + key_eventName]\n\n  let ipArray = [\"ENERGY_COSTS.INIT\"];\n  let jsonData = {\n    \"localhost:61492\": ipArray\n  };\n  let jsonString = JSON.stringify(jsonData, null, 2); //Função que lê o que estava no ficheiro ./events_sub_serv.json\n  // fs.readFile('./events_sub_serv.json','utf8', function(err,data){\n  //     var obj = JSON.parse(data);\n  //     console.log(obj)\n  // })\n  //Função que escreve no ficheiro ./events_sub_serv.json a jsonString atualizada\n  // fs.writeFile('./events_sub_serv.json', jsonString, function(err: any){\n  //     if(err) return console.log(err);\n  //     console.log('Note added');\n  // });\n  //command python3 trigger_fb.py events_sub_serv.json\n\n  const exec = require('child_process').exec;\n\n  exec(\"ls\", (error, stdout, stderr) => {\n    if (error) {\n      console.log(`error: ${error.message}`);\n      return;\n    }\n\n    if (stderr) {\n      console.log(`erro ao efetuar o comando`);\n      return;\n    }\n\n    console.log(`trigger efetuado ${stdout}`);\n  });\n}","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/trigger.ts"],"names":["makeTriggerCommandAndExecute","data","fs","require","path","key_eventName","monitoredEventName","key_eventFb","fbAssociated","ipArray","jsonData","jsonString","JSON","stringify","exec","error","stdout","stderr","console","log","message"],"mappings":"AAKA,OAAO,SAASA,4BAAT,CAAsCC,IAAtC,EAA4D;AAE/D,QAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;AAAA,QAA0BC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAxC,CAF+D,CAI/D;AAEA;;;AAEA,MAAIE,aAAa,GAAIJ,IAAI,CAACK,kBAA1B;AACA,MAAIC,WAAW,GAAGN,IAAI,CAACO,YAAvB,CAT+D,CAW/D;;AACA,MAAIC,OAAO,GAAG,CAAC,mBAAD,CAAd;AAEA,MAAIC,QAAQ,GAAG;AAAC,uBAAkBD;AAAnB,GAAf;AAEA,MAAIE,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAf,EAAwB,IAAxB,EAA6B,CAA7B,CAAjB,CAhB+D,CAkB/D;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMI,IAAI,GAAIX,OAAO,CAAC,eAAD,CAAP,CAAyBW,IAAvC;;AAEAA,EAAAA,IAAI,CAAC,IAAD,EAAO,CAACC,KAAD,EAA2BC,MAA3B,EAAwCC,MAAxC,KAAwD;AAC/D,QAAIF,KAAJ,EAAW;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASJ,KAAK,CAACK,OAAQ,EAApC;AACA;AACH;;AACD,QAAIH,MAAJ,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb;AACA;AACH;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBH,MAAO,EAAvC;AACH,GAVG,CAAJ;AAYH","sourcesContent":["import { json } from \"express\";\nimport { triggerAsyncId } from \"node:async_hooks\";\nimport { fstat } from \"node:fs\";\nimport { MonitoredEvent } from \"./model\";\n\nexport function makeTriggerCommandAndExecute(data: MonitoredEvent) {\n    \n    const fs = require('fs'), path = require('path');\n\n    // const fileName = './events_sub_serv.json'\n    \n    // const file = require(fileName)\n    \n    let key_eventName =  data.monitoredEventName\n    let key_eventFb = data.fbAssociated\n    \n    //let ipArray = [key_eventFb + \".\" + key_eventName]\n    let ipArray = [\"ENERGY_COSTS.INIT\"]\n\n    let jsonData = {\"localhost:61492\":ipArray} \n    \n    let jsonString = JSON.stringify(jsonData,null,2)\n\n    //Função que lê o que estava no ficheiro ./events_sub_serv.json\n    // fs.readFile('./events_sub_serv.json','utf8', function(err,data){\n    //     var obj = JSON.parse(data);\n    //     console.log(obj)\n    // })\n\n    //Função que escreve no ficheiro ./events_sub_serv.json a jsonString atualizada\n    // fs.writeFile('./events_sub_serv.json', jsonString, function(err: any){\n    //     if(err) return console.log(err);\n    //     console.log('Note added');\n    // });\n\n    //command python3 trigger_fb.py events_sub_serv.json\n    \n    const exec  = require('child_process').exec;\n\n    exec(\"ls\", (error: { message: any; }, stdout: any, stderr: any) => {\n        if (error) {\n            console.log(`error: ${error.message}`);\n            return;\n        }\n        if (stderr) {\n            console.log(`erro ao efetuar o comando`);\n            return;\n        }\n        console.log(`trigger efetuado ${stdout}`);\n    });\n  \n}"]},"metadata":{},"sourceType":"module"}