{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinMonitoring.tsx\";\nimport React, { useState } from 'react';\nimport { Navigator } from '../templates/Navigator/Navigator';\nimport { ConfirmAction, ConfirmActionStateLabel } from '../templates/ConfirmAction/ConfirmAction';\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent';\nimport { JPTable } from '../templates/Table/JPTable';\nimport { useMountEffect } from '../../utils/main';\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities } from '../../utils/digitalTwins';\nimport { useStore } from '../templates/Store/Store';\nimport { FunctionalityActions, DigitalTwinActions } from '../../redux/actions';\nimport { TextField, Grid, Button, Box, Dialog, DialogTitle, CircularProgress, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { createFunctionality, updateFunctionality } from '../../services/api/digital-twin';\nimport { deleteFunctionality } from '../../services/api/digital-twin';\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style';\nimport { CheckCircle, Error } from '@material-ui/icons';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { routes } from '../../App';\nimport { Redirect } from 'react-router-dom';\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/;\nlet functionalityId = -1;\nconst funcUserId = 1;\n\nconst EditFunctionalityDialog = props => {\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const classes = useDialogStyles();\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n\n  const action = () => {\n    if (props.func.funcId) {\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func.funcId, newFuncName).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        }).finally(() => setSending(false));\n      } else {\n        if (result.good) props.onGood({ ...props.func,\n          funcName: newFuncName\n        });else props.onError();\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Edit Functionality\"), /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, !result.done ? /*#__PURE__*/React.createElement(TextField, {\n    disabled: sending,\n    value: newFuncName,\n    onChange: event => setNewFuncName(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 31\n    }\n  }, result.good ? /*#__PURE__*/React.createElement(CheckCircle, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 47\n    }\n  }) : /*#__PURE__*/React.createElement(Error, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 47\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: result.good ? classes.good : classes.error,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 35\n    }\n  }, result.message)))), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.buttons,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, sending ? /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    onClick: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Ok\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: sending,\n    onClick: props.onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, \"Cancel\"))));\n};\n\nconst AddFunctionalityDetails = props => {\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const classes = useDialogStyles();\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n\n  const action = () => {\n    if (props.func.funcId) {\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func.funcId, newFuncName).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        }).finally(() => setSending(false));\n      } else {\n        if (result.good) props.onGood({ ...props.func,\n          funcName: newFuncName\n        });else props.onError();\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Add Functionality Details\"), /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.box,\n    spacing: 3,\n    item: true,\n    container: true,\n    direction: \"column\",\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Dinasore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Function Block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Variable/Event\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Display Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.buttons,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, sending ? /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    onClick: action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 27\n    }\n  }, \"Ok\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: sending,\n    onClick: props.onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, \"Cancel\")))));\n};\n\nexport const DigitalTwinMonitoring = () => {\n  const classes = useFunctionBlockStyles();\n  const [fetching, setFetching] = useState(true);\n  const [error, setError] = useState('');\n  const [newFunc, setNewFunc] = useState('');\n  const [confirmEditing, setConfirmEditing] = useState(false);\n  const [confirmAddFunc, setConfirmAddFunc] = useState(false);\n  const [validNewFunc, setValidNewFunc] = useState(true);\n  const errorFetchingFunctionalityState = {\n    label: error,\n    state: ConfirmActionStateLabel.error,\n    positiveLabel: 'Ok'\n  };\n  const [redirectTo, setRedirectTo] = useState(\"\");\n  const {\n    data: functionalities,\n    dispatchAction: dispatchFunctionalityActions\n  } = useStore('functionalities');\n  const {\n    data: digitalTwins,\n    dispatchAction: dispatchDigitalTwinActions\n  } = useStore('digitalTwins');\n\n  const onCancel = () => setError('');\n\n  const updateFunctionalities = funcs => dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs));\n\n  const updateDigitalTwins = dts => dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(dts));\n\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({\n    funcId: functionalityId,\n    funcUserId: 1,\n    funcName: newFunc,\n    funcdtId: 1\n  }));\n\n  const [editingFunc, setEditingFunc] = useState(null);\n  const [addDetailsFunc, setAddDetailsFunc] = useState(null);\n  const indexes = [{\n    label: 'Functionality',\n    key: 'funcName'\n  }, {\n    label: 'Digital Twin',\n    key: 'dtName'\n  }, {\n    label: 'State',\n    key: 'dtDescription'\n  }, {\n    label: 'AssociatedSmartComponents',\n    key: 'dtSmartComponents'\n  }, {\n    label: 'Monitored Variables/Events',\n    key: 'dtMonitoredVariableEvent'\n  }]; // Recuperar da base de dados as funcionalidades (Functionality)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadFunctionalities(functionalities).then(result => updateFunctionalities(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); // Recuperar da base de dados os digital twins (DigitalTwin)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadDigitalTwins(digitalTwins).then(result => updateDigitalTwins(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n\n  const isFunctionalityValid = func => NEW_FUNCTIONALITY_RE.test(func);\n\n  const validateAndCreate = () => {\n    const validFunc = isFunctionalityValid(newFunc);\n    if (!validFunc) setValidNewFunc(false);else setConfirmAddFunc(true);\n  };\n\n  const buildFunctionality = () => ({\n    funcName: newFunc,\n    funcId: functionalityId,\n    funcdtId: digitalTwinIdChoice,\n    funcUserId,\n    funcdtName: digitalTwinChoice\n  });\n\n  const addNewFunctionalityAction = () => {\n    const functionality = buildFunctionality();\n    return new Promise((res, rej) => {\n      console.log(functionality);\n      createFunctionality(functionality).then(result => {\n        functionalityId = result.extra.lastInsertedId;\n        res('Functionality created');\n      }).catch(e => rej(e.msg));\n    });\n  };\n\n  const confirmFunctionalityCreationActionStates = {\n    start: {\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\n      positiveLabel: 'Ok',\n      negativeLabel: 'Cancel',\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: 'Functionality Created',\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: 'Ok'\n    },\n    error: {\n      label: 'Error Creating Functionality',\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: 'Ok'\n    }\n  };\n  const confirmActionProps = {\n    title: 'Add Functionality',\n    states: confirmFunctionalityCreationActionStates,\n    currentState: confirmFunctionalityCreationActionStates.start,\n    onCancel: () => setConfirmAddFunc(false),\n    onError: () => setConfirmAddFunc(false),\n    onSuccess: () => {\n      addFunc();\n      setNewFunc('');\n    },\n    action: addNewFunctionalityAction\n  };\n\n  const getDataFunctionality = () => functionalities.map(functionality => {\n    return { ...functionality\n    };\n  });\n\n  const deleteFunctionalityAction = func => {\n    return new Promise(async (res, rej) => {\n      if (!func.funcId) {\n        rej('Error');\n        return;\n      }\n\n      try {\n        const response = await deleteFunctionality(func.funcId);\n        res(response);\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }; //Adicionar Detalhes à Funcionalidade\n\n\n  const cancelAddDetails = () => setAddDetailsFunc(null);\n\n  const showAddDetails = func => setAddDetailsFunc(func); //Editar a Funcionalidade\n\n\n  const cancelEditing = () => setEditingFunc(null);\n\n  const showEditing = func => setEditingFunc(func);\n\n  const onGoodEditing = editingFunctionality => {\n    const newFunctionalities = functionalities.map(func => {\n      if (func.funcId === editingFunctionality.funcId) return { ...func,\n        funcName: editingFunctionality.funcName,\n        funcdtId: editingFunctionality.funcdtId\n      };\n      return func;\n    });\n    cancelEditing();\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities));\n  }; // Associar um digital twin à nova funcionalidade criada\n\n\n  const [digitalTwinChoice, setDigitalTwinChoice] = useState('');\n  const [digitalTwinIdChoice, setDigitalTwinIdChoice] = useState(0);\n\n  const handleDigitalTwinChoice = event => {\n    setDigitalTwinChoice(event.target.value);\n    let i = 0;\n\n    while (i < digitalTwins.length) {\n      if (digitalTwins[i].dtName === event.target.value) {\n        setDigitalTwinIdChoice(digitalTwins[i].dtId);\n      }\n\n      i++;\n    }\n  };\n\n  const redirectToList = () => setRedirectTo(routes.functionalityDetails);\n\n  if (redirectTo !== \"\") return /*#__PURE__*/React.createElement(Redirect, {\n    to: redirectTo,\n    push: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 10\n    }\n  });\n  return /*#__PURE__*/React.createElement(Navigator, {\n    title: \"New Digital Twin Functionality\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, error !== '' ? /*#__PURE__*/React.createElement(ConfirmAction, {\n    title: \"Fetching Functionalities\",\n    currentState: errorFetchingFunctionalityState,\n    states: {\n      error: errorFetchingFunctionalityState\n    },\n    onCancel: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 19\n    }\n  }) : null, /*#__PURE__*/React.createElement(LazyComponent, {\n    loaded: !fetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, confirmEditing ? /*#__PURE__*/React.createElement(ConfirmAction, Object.assign({}, confirmActionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 24\n    }\n  })) : editingFunc ? /*#__PURE__*/React.createElement(EditFunctionalityDialog, {\n    onGood: onGoodEditing,\n    func: editingFunc,\n    onError: cancelEditing,\n    onCancel: cancelEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 29\n    }\n  }) : null, confirmAddFunc ? /*#__PURE__*/React.createElement(ConfirmAction, Object.assign({}, confirmActionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 24\n    }\n  })) : addDetailsFunc ? /*#__PURE__*/React.createElement(AddFunctionalityDetails, {\n    onGood: onGoodEditing,\n    func: addDetailsFunc,\n    onError: cancelAddDetails,\n    onCancel: cancelAddDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 29\n    }\n  }) : null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(JPTable, {\n    sortedkey: \"funcName\",\n    data: getDataFunctionality(),\n    updateData: updateFunctionalities,\n    indexes: indexes,\n    tName: \"Functionality\",\n    extra: {\n      delete: {\n        action: deleteFunctionalityAction,\n        labelKey: 'funcName',\n        onSuccessDelete: () => {}\n      },\n      edit: {\n        action: showEditing\n      },\n      details: {\n        action: redirectToList\n      },\n      add: {\n        action: showAddDetails\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 21\n    }\n  }, \"New Functionality\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.box,\n    spacing: 1,\n    item: true,\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    helperText: !validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : '',\n    error: !validNewFunc,\n    label: \"Insert new functionality name\",\n    required: true,\n    onChange: event => {\n      setNewFunc(event.target.value);\n      if (!validNewFunc) setValidNewFunc(isFunctionalityValid(event.target.value.trim()));\n    },\n    fullWidth: true,\n    value: newFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: `digital-twin-label-${newFunc}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 33\n    }\n  }, \"Digital Twin\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: `digital-twin-label-${newFunc}`,\n    value: digitalTwinChoice,\n    onChange: handleDigitalTwinChoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 33\n    }\n  }, (digitalTwins || []).map(digitalTwin => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: digitalTwin.dtId,\n      value: digitalTwin.dtName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 89\n      }\n    }, digitalTwin.dtName);\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: validateAndCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 34\n    }\n  }, \"Add Functionality\")))))))))));\n};","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinMonitoring.tsx"],"names":["React","useState","Navigator","ConfirmAction","ConfirmActionStateLabel","LazyComponent","JPTable","useMountEffect","getOrDownloadDigitalTwins","getOrDownloadFunctionalities","useStore","FunctionalityActions","DigitalTwinActions","TextField","Grid","Button","Box","Dialog","DialogTitle","CircularProgress","Select","InputLabel","MenuItem","createFunctionality","updateFunctionality","deleteFunctionality","useDialogStyles","CheckCircle","Error","useFunctionBlockStyles","routes","Redirect","NEW_FUNCTIONALITY_RE","functionalityId","funcUserId","EditFunctionalityDialog","props","newFuncName","setNewFuncName","func","funcName","classes","sending","setSending","result","setResult","done","action","funcId","then","response","good","message","msg","catch","error","finally","onGood","onError","box","event","target","value","buttons","onCancel","AddFunctionalityDetails","DigitalTwinMonitoring","fetching","setFetching","setError","newFunc","setNewFunc","confirmEditing","setConfirmEditing","confirmAddFunc","setConfirmAddFunc","validNewFunc","setValidNewFunc","errorFetchingFunctionalityState","label","state","positiveLabel","redirectTo","setRedirectTo","data","functionalities","dispatchAction","dispatchFunctionalityActions","digitalTwins","dispatchDigitalTwinActions","updateFunctionalities","funcs","updateDigitalTwins","dts","addFunc","addFunctionality","funcdtId","editingFunc","setEditingFunc","addDetailsFunc","setAddDetailsFunc","indexes","key","setTimeout","e","isFunctionalityValid","test","validateAndCreate","validFunc","buildFunctionality","digitalTwinIdChoice","funcdtName","digitalTwinChoice","addNewFunctionalityAction","functionality","Promise","res","rej","console","log","extra","lastInsertedId","confirmFunctionalityCreationActionStates","start","negativeLabel","executing","success","confirmActionProps","title","states","currentState","onSuccess","getDataFunctionality","map","deleteFunctionalityAction","err","cancelAddDetails","showAddDetails","cancelEditing","showEditing","onGoodEditing","editingFunctionality","newFunctionalities","setDigitalTwinChoice","setDigitalTwinIdChoice","handleDigitalTwinChoice","i","length","dtName","dtId","redirectToList","functionalityDetails","delete","labelKey","onSuccessDelete","edit","details","add","toString","trim","digitalTwin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,aAAT,EAA4CC,uBAA5C,QAA+F,0CAA/F;AACA,SAASC,aAAT,QAA8B,0CAA9B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,yBAAT,EAAoCC,4BAApC,QAAuE,0BAAvE;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,oBAAT,EAAgCC,kBAAhC,QAAyD,qBAAzD;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,MAAvC,EAA+CC,WAA/C,EAA4DC,gBAA5D,EAA+EC,MAA/E,EAAuFC,UAAvF,EAAmGC,QAAnG,QAAuJ,mBAAvJ;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,iCAAzD;AACA,SAASC,mBAAT,QAAmC,iCAAnC;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,oBAAnC;AACA,SAASC,sBAAT,QAAuC,uCAAvC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,oBAAoB,GAAG,iBAA7B;AAEA,IAAIC,eAAe,GAAG,CAAC,CAAvB;AACA,MAAMC,UAAU,GAAG,CAAnB;;AAEA,MAAMC,uBAAuB,GAAIC,KAAD,IAAuH;AAErJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAoDrC,QAAQ,CAACmC,KAAK,CAACG,IAAN,CAAWC,QAAZ,CAAlE;AAEA,QAAMC,OAAO,GAAGf,eAAe,EAA/B;AAEA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAA8C1C,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAM,CAAC2C,MAAD,EAASC,SAAT,IAAqF5C,QAAQ,CAAC;AAAC6C,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAnG;;AAEA,QAAMC,MAAM,GAAG,MAAM;AAEjB,QAAGX,KAAK,CAACG,IAAN,CAAWS,MAAd,EAAsB;AAElB,UAAG,CAACJ,MAAM,CAACE,IAAX,EAAiB;AAEbH,QAAAA,UAAU,CAAC,IAAD,CAAV;AAEAnB,QAAAA,mBAAmB,CAACY,KAAK,CAACG,IAAN,CAAWS,MAAZ,EAAoBX,WAApB,CAAnB,CAEKY,IAFL,CAEWC,QAAD,IAAoC;AACtCL,UAAAA,SAAS,CAAC;AAACC,YAAAA,IAAI,EAAC,IAAN;AAAYK,YAAAA,IAAI,EAAE,IAAlB;AAAwBC,YAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA1C,WAAD,CAAT;AACH,SAJL,EAMKC,KANL,CAMYC,KAAD,IAAiC;AACpCV,UAAAA,SAAS,CAAC;AAACC,YAAAA,IAAI,EAAE,IAAP;AAAaK,YAAAA,IAAI,EAAE,KAAnB;AAA0BC,YAAAA,OAAO,EAAEG,KAAK,CAACF;AAAzC,WAAD,CAAT;AACH,SARL,EAUKG,OAVL,CAUa,MAAMb,UAAU,CAAC,KAAD,CAV7B;AAYH,OAhBD,MAkBK;AAED,YAAGC,MAAM,CAACO,IAAV,EACIf,KAAK,CAACqB,MAAN,CAAa,EAAC,GAAGrB,KAAK,CAACG,IAAV;AAAgBC,UAAAA,QAAQ,EAAEH;AAA1B,SAAb,EADJ,KAIID,KAAK,CAACsB,OAAN;AAEP;AAEJ;AAEJ,GAlCD;;AAoCA,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACkB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAACf,MAAM,CAACE,IAAR,gBAEQ,oBAAC,SAAD;AACI,IAAA,QAAQ,EAAEJ,OADd;AAEI,IAAA,KAAK,EAAEL,WAFX;AAGI,IAAA,QAAQ,EAAGuB,KAAD,IAAWtB,cAAc,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,gBAOS,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQlB,MAAM,CAACO,IAAP,gBACQ,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,gBAEQ,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJhB,CADH,eAQG,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACO,IAAP,GAAcV,OAAO,CAACU,IAAtB,GAA6BV,OAAO,CAACc,KAArD;AAA4D,IAAA,SAAS,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgFX,MAAM,CAACQ,OAAvF,CADJ,CARH,CATjB,CAFJ,eAyBI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEX,OAAO,CAACsB,OAAzB;AAAkC,IAAA,SAAS,MAA3C;AAA4C,IAAA,SAAS,EAAC,KAAtD;AAA4D,IAAA,OAAO,EAAC,eAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,OAAO,gBACF,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,gBAEF,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHV,CADJ,eAOI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEL,OAAlB;AAA2B,IAAA,OAAO,EAAEN,KAAK,CAAC4B,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAPJ,CAzBJ,CADJ;AAwCD,CAtFD;;AAwFA,MAAMC,uBAAuB,GAAI7B,KAAD,IAAuH;AAEnJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAoDrC,QAAQ,CAACmC,KAAK,CAACG,IAAN,CAAWC,QAAZ,CAAlE;AAEA,QAAMC,OAAO,GAAGf,eAAe,EAA/B;AAEA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAA8C1C,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAM,CAAC2C,MAAD,EAASC,SAAT,IAAqF5C,QAAQ,CAAC;AAAC6C,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAnG;;AAEA,QAAMC,MAAM,GAAG,MAAM;AAEjB,QAAGX,KAAK,CAACG,IAAN,CAAWS,MAAd,EAAsB;AAElB,UAAG,CAACJ,MAAM,CAACE,IAAX,EAAiB;AAEbH,QAAAA,UAAU,CAAC,IAAD,CAAV;AAEAnB,QAAAA,mBAAmB,CAACY,KAAK,CAACG,IAAN,CAAWS,MAAZ,EAAoBX,WAApB,CAAnB,CAEKY,IAFL,CAEWC,QAAD,IAAoC;AACtCL,UAAAA,SAAS,CAAC;AAACC,YAAAA,IAAI,EAAC,IAAN;AAAYK,YAAAA,IAAI,EAAE,IAAlB;AAAwBC,YAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA1C,WAAD,CAAT;AACH,SAJL,EAMKC,KANL,CAMYC,KAAD,IAAiC;AACpCV,UAAAA,SAAS,CAAC;AAACC,YAAAA,IAAI,EAAE,IAAP;AAAaK,YAAAA,IAAI,EAAE,KAAnB;AAA0BC,YAAAA,OAAO,EAAEG,KAAK,CAACF;AAAzC,WAAD,CAAT;AACH,SARL,EAUKG,OAVL,CAUa,MAAMb,UAAU,CAAC,KAAD,CAV7B;AAYH,OAhBD,MAkBK;AAED,YAAGC,MAAM,CAACO,IAAV,EACIf,KAAK,CAACqB,MAAN,CAAa,EAAC,GAAGrB,KAAK,CAACG,IAAV;AAAgBC,UAAAA,QAAQ,EAAEH;AAA1B,SAAb,EADJ,KAIID,KAAK,CAACsB,OAAN;AAEP;AAEJ;AAEJ,GAlCD;;AAoCA,sBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACkB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAElB,OAAO,CAACkB,GAAzB;AAA8B,IAAA,OAAO,EAAE,CAAvC;AAA0C,IAAA,IAAI,MAA9C;AAA+C,IAAA,SAAS,MAAxD;AAAyD,IAAA,SAAS,EAAC,QAAnE;AAA4E,IAAA,UAAU,EAAC,YAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,UADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,eAUI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,eAeI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,gBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,eAoBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,cADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApBJ,CADJ,CADJ,CADA,eA+BA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAElB,OAAO,CAACsB,OAAzB;AAAkC,IAAA,SAAS,MAA3C;AAA4C,IAAA,SAAS,EAAC,KAAtD;AAA4D,IAAA,OAAO,EAAC,eAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,OAAO,gBACF,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,gBAEF,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHV,CADJ,eAOI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEL,OAAlB;AAA2B,IAAA,OAAO,EAAEN,KAAK,CAAC4B,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAPJ,CA/BA,CAFJ,CADJ;AAiDH,CA/FD;;AAkGA,OAAO,MAAME,qBAAqB,GAAG,MAAM;AAEzC,QAAMzB,OAAO,GAAGZ,sBAAsB,EAAtC;AAEA,QAAM,CAACsC,QAAD,EAAUC,WAAV,IAAyBnE,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACsD,KAAD,EAAOc,QAAP,IAAmBpE,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACqE,OAAD,EAASC,UAAT,IAA2CtE,QAAQ,CAAC,EAAD,CAAzD;AAEA,QAAM,CAACuE,cAAD,EAAgBC,iBAAhB,IAA2DxE,QAAQ,CAAC,KAAD,CAAzE;AACA,QAAM,CAACyE,cAAD,EAAgBC,iBAAhB,IAA2D1E,QAAQ,CAAC,KAAD,CAAzE;AAEA,QAAM,CAAC2E,YAAD,EAAeC,eAAf,IAAuD5E,QAAQ,CAAC,IAAD,CAArE;AAEA,QAAM6E,+BAAoD,GAAG;AAC3DC,IAAAA,KAAK,EAAExB,KADoD;AAE3DyB,IAAAA,KAAK,EAAE5E,uBAAuB,CAACmD,KAF4B;AAG3D0B,IAAAA,aAAa,EAAE;AAH4C,GAA7D;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAAmDlF,QAAQ,CAAC,EAAD,CAAjE;AAEA,QAAM;AAACmF,IAAAA,IAAI,EAACC,eAAN;AAAuBC,IAAAA,cAAc,EAACC;AAAtC,MAAsE7E,QAAQ,CAAC,iBAAD,CAApF;AACA,QAAM;AAAC0E,IAAAA,IAAI,EAACI,YAAN;AAAoBF,IAAAA,cAAc,EAACG;AAAnC,MAAiE/E,QAAQ,CAAC,cAAD,CAA/E;;AAEA,QAAMsD,QAAQ,GAAG,MAAMK,QAAQ,CAAC,EAAD,CAA/B;;AAEA,QAAMqB,qBAAqB,GAAIC,KAAD,IAA4BJ,4BAA4B,CAAC5E,oBAAoB,CAAC+E,qBAArB,CAA2CC,KAA3C,CAAD,CAAtF;;AACA,QAAMC,kBAAkB,GAAIC,GAAD,IAAwBJ,0BAA0B,CAAC7E,kBAAkB,CAACgF,kBAAnB,CAAsCC,GAAtC,CAAD,CAA7E;;AACA,QAAMC,OAAO,GAAG,MAAMP,4BAA4B,CAAC5E,oBAAoB,CAACoF,gBAArB,CAAsC;AAAC/C,IAAAA,MAAM,EAAEf,eAAT;AAA0BC,IAAAA,UAAU,EAAE,CAAtC;AAA0CM,IAAAA,QAAQ,EAAE8B,OAApD;AAA6D0B,IAAAA,QAAQ,EAAE;AAAvE,GAAtC,CAAD,CAAlD;;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAkEjG,QAAQ,CAAC,IAAD,CAAhF;AACA,QAAM,CAACkG,cAAD,EAAiBC,iBAAjB,IAAwEnG,QAAQ,CAAC,IAAD,CAAtF;AAGA,QAAMoG,OAAO,GAAG,CACd;AAACtB,IAAAA,KAAK,EAAE,eAAR;AAAyBuB,IAAAA,GAAG,EAAE;AAA9B,GADc,EAEd;AAACvB,IAAAA,KAAK,EAAE,cAAR;AAAwBuB,IAAAA,GAAG,EAAE;AAA7B,GAFc,EAGd;AAACvB,IAAAA,KAAK,EAAE,OAAR;AAAiBuB,IAAAA,GAAG,EAAE;AAAtB,GAHc,EAId;AAACvB,IAAAA,KAAK,EAAE,2BAAR;AAAqCuB,IAAAA,GAAG,EAAE;AAA1C,GAJc,EAKd;AAACvB,IAAAA,KAAK,EAAE,4BAAR;AAAsCuB,IAAAA,GAAG,EAAE;AAA3C,GALc,CAAhB,CAlCyC,CA0CzC;;AACA/F,EAAAA,cAAc,CAAC,MAAM;AAEnBgG,IAAAA,UAAU,CAAC,MAAM;AAEjBnC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA3D,MAAAA,4BAA4B,CAAC4E,eAAD,CAA5B,CACKpC,IADL,CACWL,MAAD,IAA6B8C,qBAAqB,CAAC9C,MAAD,CAD5D,EAEKU,KAFL,CAEYkD,CAAD,IAA4BnC,QAAQ,CAACmC,CAAC,CAACnD,GAAH,CAF/C,EAGKG,OAHL,CAGa,MAAMY,WAAW,CAAC,KAAD,CAH9B;AAIC,KAPS,EAOP,CAPO,CAAV;AAQD,GAVa,CAAd,CA3CyC,CAwDzC;;AACA7D,EAAAA,cAAc,CAAC,MAAM;AAEnBgG,IAAAA,UAAU,CAAC,MAAM;AAEjBnC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA5D,MAAAA,yBAAyB,CAACgF,YAAD,CAAzB,CACKvC,IADL,CACWL,MAAD,IAA2BgD,kBAAkB,CAAChD,MAAD,CADvD,EAEKU,KAFL,CAEYkD,CAAD,IAA4BnC,QAAQ,CAACmC,CAAC,CAACnD,GAAH,CAF/C,EAGKG,OAHL,CAGa,MAAMY,WAAW,CAAC,KAAD,CAH9B;AAIC,KAPS,EAOP,CAPO,CAAV;AAQD,GAVa,CAAd;;AAYA,QAAMqC,oBAAoB,GAAIlE,IAAD,IAAiBP,oBAAoB,CAAC0E,IAArB,CAA0BnE,IAA1B,CAA9C;;AAEA,QAAMoE,iBAAiB,GAAG,MAAM;AAEhC,UAAMC,SAAS,GAAEH,oBAAoB,CAACnC,OAAD,CAArC;AAEE,QAAG,CAACsC,SAAJ,EACE/B,eAAe,CAAC,KAAD,CAAf,CADF,KAGEF,iBAAiB,CAAC,IAAD,CAAjB;AAEH,GATD;;AAWA,QAAMkC,kBAAkB,GAAG,OAAuB;AAChDrE,IAAAA,QAAQ,EAAE8B,OADsC;AAC7BtB,IAAAA,MAAM,EAAEf,eADqB;AAEhD+D,IAAAA,QAAQ,EAAEc,mBAFsC;AAEhB5E,IAAAA,UAFgB;AAEJ6E,IAAAA,UAAU,EAAEC;AAFR,GAAvB,CAA3B;;AAMA,QAAMC,yBAAyB,GAAG,MAAwB;AAExD,UAAMC,aAA6B,GAAGL,kBAAkB,EAAxD;AAEA,WAAO,IAAIM,OAAJ,CAAoB,CAACC,GAAD,EAAeC,GAAf,KAAiC;AAExDC,MAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AAEA3F,MAAAA,mBAAmB,CAAC2F,aAAD,CAAnB,CAEKjE,IAFL,CAEWL,MAAD,IAAkC;AACxCX,QAAAA,eAAe,GAAGW,MAAM,CAAC4E,KAAP,CAAaC,cAA/B;AACIL,QAAAA,GAAG,CAAC,uBAAD,CAAH;AACH,OALL,EAOK9D,KAPL,CAOYkD,CAAD,IAA4Ba,GAAG,CAACb,CAAC,CAACnD,GAAH,CAP1C;AASH,KAbM,CAAP;AAcD,GAlBD;;AAoBA,QAAMqE,wCAAwC,GAAG;AAC/CC,IAAAA,KAAK,EAAE;AACL5C,MAAAA,KAAK,EAAG,0CAAyCT,OAAQ,IADpD;AAELW,MAAAA,aAAa,EAAE,IAFV;AAGL2C,MAAAA,aAAa,EAAE,QAHV;AAIL5C,MAAAA,KAAK,EAAE5E,uBAAuB,CAACuH;AAJ1B,KADwC;AAO/CE,IAAAA,SAAS,EAAE;AACT9C,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,KAAK,EAAE5E,uBAAuB,CAACyH;AAFtB,KAPoC;AAW/CC,IAAAA,OAAO,EAAE;AACP/C,MAAAA,KAAK,EAAE,uBADA;AAEPC,MAAAA,KAAK,EAAE5E,uBAAuB,CAAC0H,OAFxB;AAGP7C,MAAAA,aAAa,EAAE;AAHR,KAXsC;AAgB/C1B,IAAAA,KAAK,EAAE;AACLwB,MAAAA,KAAK,EAAE,8BADF;AAELC,MAAAA,KAAK,EAAE5E,uBAAuB,CAACmD,KAF1B;AAGL0B,MAAAA,aAAa,EAAE;AAHV;AAhBwC,GAAjD;AAuBA,QAAM8C,kBAAuC,GAAG;AAE9CC,IAAAA,KAAK,EAAE,mBAFuC;AAG9CC,IAAAA,MAAM,EAAEP,wCAHsC;AAI9CQ,IAAAA,YAAY,EAAER,wCAAwC,CAACC,KAJT;AAK9C3D,IAAAA,QAAQ,EAAE,MAAMW,iBAAiB,CAAC,KAAD,CALa;AAM9CjB,IAAAA,OAAO,EAAE,MAAMiB,iBAAiB,CAAC,KAAD,CANc;AAO9CwD,IAAAA,SAAS,EAAE,MAAM;AACbrC,MAAAA,OAAO;AACPvB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAV6C;AAW9CxB,IAAAA,MAAM,EAAEkE;AAXsC,GAAhD;;AAcA,QAAMmB,oBAAoB,GAAG,MAAM/C,eAAe,CAACgD,GAAhB,CAAqBnB,aAAD,IAAkC;AAEvF,WAAO,EACD,GAAGA;AADF,KAAP;AAGD,GALkC,CAAnC;;AAOA,QAAMoB,yBAAyB,GAAI/F,IAAD,IAAwC;AAExE,WAAO,IAAI4E,OAAJ,CAAY,OAAMC,GAAN,EAAmBC,GAAnB,KAAoC;AAEnD,UAAG,CAAC9E,IAAI,CAACS,MAAT,EAAiB;AACbqE,QAAAA,GAAG,CAAC,OAAD,CAAH;AACA;AACH;;AAED,UAAI;AACA,cAAMnE,QAA+B,GAAG,MAAMzB,mBAAmB,CAACc,IAAI,CAACS,MAAN,CAAjE;AACAoE,QAAAA,GAAG,CAAClE,QAAD,CAAH;AACD,OAHH,CAKA,OAAMqF,GAAN,EAAW;AACPlB,QAAAA,GAAG,CAACkB,GAAD,CAAH;AACH;AACJ,KAfM,CAAP;AAgBD,GAlBD,CAxJyC,CA4KzC;;;AACA,QAAMC,gBAAgB,GAAG,MAAMpC,iBAAiB,CAAC,IAAD,CAAhD;;AACA,QAAMqC,cAAc,GAAIlG,IAAD,IAAyB6D,iBAAiB,CAAC7D,IAAD,CAAjE,CA9KyC,CAgLzC;;;AACA,QAAMmG,aAAa,GAAG,MAAMxC,cAAc,CAAC,IAAD,CAA1C;;AACA,QAAMyC,WAAW,GAAIpG,IAAD,IAAyB2D,cAAc,CAAC3D,IAAD,CAA3D;;AAEA,QAAMqG,aAAa,GAAIC,oBAAD,IAAyC;AAE7D,UAAMC,kBAAkB,GAAGzD,eAAe,CAACgD,GAAhB,CAAqB9F,IAAD,IAAyB;AAExE,UAAGA,IAAI,CAACS,MAAL,KAAgB6F,oBAAoB,CAAC7F,MAAxC,EACI,OAAO,EAAC,GAAGT,IAAJ;AAAUC,QAAAA,QAAQ,EAAEqG,oBAAoB,CAACrG,QAAzC;AAAmDwD,QAAAA,QAAQ,EAAE6C,oBAAoB,CAAC7C;AAAlF,OAAP;AACJ,aAAOzD,IAAP;AAEC,KAN0B,CAA3B;AAQAmG,IAAAA,aAAa;AACbnD,IAAAA,4BAA4B,CAAC5E,oBAAoB,CAAC+E,qBAArB,CAA2CoD,kBAA3C,CAAD,CAA5B;AACD,GAZD,CApLyC,CAkMzC;;;AACA,QAAM,CAAC9B,iBAAD,EAAoB+B,oBAApB,IAA4C9I,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAAC6G,mBAAD,EAAsBkC,sBAAtB,IAAgD/I,QAAQ,CAAC,CAAD,CAA9D;;AAEA,QAAMgJ,uBAAuB,GAAIrF,KAAD,IAAkD;AAChFmF,IAAAA,oBAAoB,CAACnF,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AACA,QAAIoF,CAAC,GAAG,CAAR;;AACA,WAAMA,CAAC,GAAG1D,YAAY,CAAC2D,MAAvB,EACA;AACI,UAAG3D,YAAY,CAAC0D,CAAD,CAAZ,CAAgBE,MAAhB,KAA4BxF,KAAK,CAACC,MAAN,CAAaC,KAA5C,EACA;AACIkF,QAAAA,sBAAsB,CAACxD,YAAY,CAAC0D,CAAD,CAAZ,CAAgBG,IAAjB,CAAtB;AACH;;AACDH,MAAAA,CAAC;AACJ;AAEF,GAZD;;AAcA,QAAMI,cAAc,GAAG,MAAMnE,aAAa,CAACrD,MAAM,CAACyH,oBAAR,CAA1C;;AAEA,MAAGrE,UAAU,KAAK,EAAlB,EACA,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,UAAd;AAA0B,IAAA,IAAI,EAAE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,0CACI3B,KAAK,KAAK,EAAV,gBACS,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,0BAArB;AAAgD,IAAA,YAAY,EAAEuB,+BAA9D;AAA+F,IAAA,MAAM,EAAE;AAACvB,MAAAA,KAAK,EAAEuB;AAAR,KAAvG;AAAiJ,IAAA,QAAQ,EAAEd,QAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,GAES,IAHb,eAKI,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAE,CAACG,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,0CACIK,cAAc,gBACR,oBAAC,aAAD,oBAAmBuD,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADQ,GAER9B,WAAW,gBACN,oBAAC,uBAAD;AACC,IAAA,MAAM,EAAE2C,aADT;AAEC,IAAA,IAAI,EAAE3C,WAFP;AAGC,IAAA,OAAO,EAAEyC,aAHV;AAIC,IAAA,QAAQ,EAAEA,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAMP,IATd,EAWIhE,cAAc,gBACR,oBAAC,aAAD,oBAAmBqD,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADQ,GAER5B,cAAc,gBACT,oBAAC,uBAAD;AACC,IAAA,MAAM,EAAEyC,aADT;AAEC,IAAA,IAAI,EAAEzC,cAFP;AAGC,IAAA,OAAO,EAAEqC,gBAHV;AAIC,IAAA,QAAQ,EAAEA,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAMV,IAnBd,eAqBI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACI,IAAA,SAAS,EAAC,UADd;AAEI,IAAA,IAAI,EAAEJ,oBAAoB,EAF9B;AAGI,IAAA,UAAU,EAAE1C,qBAHhB;AAII,IAAA,OAAO,EAAEW,OAJb;AAKI,IAAA,KAAK,EAAC,eALV;AAMI,IAAA,KAAK,EAAE;AACHmD,MAAAA,MAAM,EAAE;AACJzG,QAAAA,MAAM,EAAEuF,yBADJ;AAEJmB,QAAAA,QAAQ,EAAE,UAFN;AAGJC,QAAAA,eAAe,EAAE,MAAM,CAAE;AAHrB,OADL;AAMHC,MAAAA,IAAI,EAAE;AACF5G,QAAAA,MAAM,EAAE4F;AADN,OANH;AASHiB,MAAAA,OAAO,EAAE;AACL7G,QAAAA,MAAM,EAAEuG;AADH,OATN;AAYHO,MAAAA,GAAG,EAAE;AACD9G,QAAAA,MAAM,EAAE0F;AADP;AAZF,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADL,eA0BG,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA1BH,eA6BI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEhG,OAAO,CAACkB,GAAzB;AAA8B,IAAA,OAAO,EAAE,CAAvC;AAA0C,IAAA,IAAI,MAA9C;AAA+C,IAAA,SAAS,MAAxD;AAAyD,IAAA,SAAS,EAAC,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,UAAU,EAAE,CAACiB,YAAD,GAAgB5C,oBAAoB,CAAC8H,QAArB,EAAhB,GAAkD,EADlE;AAEI,IAAA,KAAK,EAAE,CAAClF,YAFZ;AAGI,IAAA,KAAK,EAAC,+BAHV;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,QAAQ,EAAGhB,KAAD,IAAW;AACjBW,MAAAA,UAAU,CAACX,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACA,UAAG,CAACc,YAAJ,EACIC,eAAe,CAAC4B,oBAAoB,CAAC7C,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBiG,IAAnB,EAAD,CAArB,CAAf;AACP,KATL;AAUI,IAAA,SAAS,MAVb;AAWI,IAAA,KAAK,EAAEzF,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,eAgBA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAG,sBAAqBA,OAAQ,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAG,sBAAqBA,OAAQ,EAA/C;AAAkD,IAAA,KAAK,EAAE0C,iBAAzD;AAA4E,IAAA,QAAQ,EAAEiC,uBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACzD,YAAY,IAAI,EAAjB,EAAqB6C,GAArB,CAA0B2B,WAAD,IAAsB;AAAC,wBAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,WAAW,CAACX,IAA3B;AAAiC,MAAA,KAAK,EAAEW,WAAW,CAACZ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DY,WAAW,CAACZ,MAAzE,CAAP;AAAmG,GAAnJ,CADD,CAFJ,CAhBA,eAsBA,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,UAAxB;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACG,IAAA,KAAK,EAAC,SADT;AAEG,IAAA,OAAO,EAAC,WAFX;AAGG,IAAA,OAAO,EAAEzC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADD,CAtBA,CADJ,CADH,CA7BJ,CArBJ,CADJ,CALJ,CADD,CADF;AAsGD,CA/TM","sourcesContent":["import React, { useState } from 'react'\r\nimport { Navigator } from '../templates/Navigator/Navigator'\r\nimport { ConfirmAction, ConfirmActionState, ConfirmActionStateLabel, ConfirmActionProps } from '../templates/ConfirmAction/ConfirmAction'\r\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent'\r\nimport { JPTable } from '../templates/Table/JPTable'\r\nimport { Functionality, DigitalTwin} from '../../model'\r\nimport { useMountEffect } from '../../utils/main'\r\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities} from '../../utils/digitalTwins'\r\nimport { useStore } from '../templates/Store/Store'\r\nimport { FunctionalityActions , DigitalTwinActions} from '../../redux/actions'\r\nimport { RequestResponseState } from '../../services/api/api'\r\nimport { TextField, Grid, Button, Box, Dialog, DialogTitle, CircularProgress , Select, InputLabel, MenuItem, FormControl, Input, FormHelperText } from '@material-ui/core'\r\nimport { createFunctionality, updateFunctionality } from '../../services/api/digital-twin'\r\nimport { deleteFunctionality} from '../../services/api/digital-twin'\r\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style'\r\nimport { CheckCircle, Error } from '@material-ui/icons'\r\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\r\nimport { routes } from '../../App'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/\r\n\r\nlet functionalityId = -1\r\nconst funcUserId = 1\r\n\r\nconst EditFunctionalityDialog = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n  const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n\r\n  const classes = useDialogStyles()\r\n\r\n  const [sending, setSending] : [boolean, Function] = useState(false)\r\n\r\n  const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n\r\n  const action = () => {\r\n\r\n      if(props.func.funcId) {\r\n\r\n          if(!result.done) {\r\n\r\n              setSending(true)\r\n  \r\n              updateFunctionality(props.func.funcId, newFuncName)\r\n\r\n                  .then((response: RequestResponseState) => {\r\n                      setResult({done:true, good: true, message: response.msg})\r\n                  })\r\n\r\n                  .catch((error: RequestResponseState) => {\r\n                      setResult({done: true, good: false, message: error.msg})\r\n                  })\r\n\r\n                  .finally(() => setSending(false))\r\n\r\n          }\r\n\r\n          else {\r\n\r\n              if(result.good)\r\n                  props.onGood({...props.func, funcName: newFuncName})\r\n              \r\n              else\r\n                  props.onError()\r\n\r\n          }\r\n\r\n      }\r\n\r\n  }\r\n\r\n  return (\r\n      <Dialog open={true}>\r\n          <DialogTitle>Edit Functionality</DialogTitle>\r\n          <Box className={classes.box}>\r\n              {\r\n                  !result.done \r\n                      ?\r\n                          <TextField \r\n                              disabled={sending}\r\n                              value={newFuncName}\r\n                              onChange={(event) => setNewFuncName(event.target.value)}\r\n                          />\r\n                      :    <Grid container justify=\"center\">\r\n                              <Grid item>\r\n                                  {\r\n                                      result.good \r\n                                          ?   <CheckCircle color=\"primary\" />\r\n                                          :   <Error color=\"error\" />\r\n                                  }\r\n                              </Grid>\r\n                              <Grid item>\r\n                                  <Box className={result.good ? classes.good : classes.error} textAlign=\"center\">{result.message}</Box>\r\n                              </Grid>\r\n                          </Grid> \r\n              }\r\n          </Box>\r\n          <Grid className={classes.buttons} container direction=\"row\" justify=\"space-between\">\r\n              <Grid item>\r\n                  {sending \r\n                      ? <CircularProgress color=\"primary\" />\r\n                      : <Button onClick={action}>Ok</Button>\r\n                  }\r\n              </Grid>\r\n              <Grid item>\r\n                  <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>\r\n              </Grid>\r\n          </Grid>\r\n      </Dialog>\r\n  )\r\n\r\n}\r\n\r\nconst AddFunctionalityDetails = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n    const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n  \r\n    const classes = useDialogStyles()\r\n  \r\n    const [sending, setSending] : [boolean, Function] = useState(false)\r\n  \r\n    const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n  \r\n    const action = () => {\r\n  \r\n        if(props.func.funcId) {\r\n  \r\n            if(!result.done) {\r\n  \r\n                setSending(true)\r\n    \r\n                updateFunctionality(props.func.funcId, newFuncName)\r\n  \r\n                    .then((response: RequestResponseState) => {\r\n                        setResult({done:true, good: true, message: response.msg})\r\n                    })\r\n  \r\n                    .catch((error: RequestResponseState) => {\r\n                        setResult({done: true, good: false, message: error.msg})\r\n                    })\r\n  \r\n                    .finally(() => setSending(false))\r\n  \r\n            }\r\n  \r\n            else {\r\n  \r\n                if(result.good)\r\n                    props.onGood({...props.func, funcName: newFuncName})\r\n                \r\n                else\r\n                    props.onError()\r\n  \r\n            }\r\n  \r\n        }\r\n  \r\n    }\r\n  \r\n    return (\r\n        <Dialog open={true}>\r\n            <DialogTitle>Add Functionality Details</DialogTitle>\r\n            <Box className={classes.box}>\r\n            <Grid item> \r\n                <Grid container item xs>\r\n                    <Grid className={classes.box} spacing={3} item container direction=\"column\" alignItems=\"flex-start\">\r\n                        {/* <InputLabel id={`digital-twin-label-${newFunc}`}>DINASORE</InputLabel>\r\n                                <Select labelId={`digital-twin-label-${newFunc}`} value={digitalTwinChoice} onChange={handleDigitalTwinChoice}>\r\n                                {(digitalTwins || []).map((digitalTwin: any) => {return <MenuItem key={digitalTwin.dtId} value={digitalTwin.dtName}>{digitalTwin.dtName}</MenuItem>})}\r\n                                </Select> */}\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Dinasore\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Function Block\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Variable/Event\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label= \"Display Name\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid className={classes.buttons} container direction=\"row\" justify=\"space-between\">\r\n                <Grid item>\r\n                    {sending \r\n                        ? <CircularProgress color=\"primary\" />\r\n                        : <Button onClick={action}>Ok</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>\r\n                </Grid>\r\n            </Grid>\r\n         </Box>\r\n        </Dialog>\r\n    )\r\n  \r\n}\r\n  \r\n\r\nexport const DigitalTwinMonitoring = () => {\r\n    \r\n  const classes = useFunctionBlockStyles()\r\n\r\n  const [fetching,setFetching] = useState(true)\r\n  const [error,setError] = useState('')\r\n  const [newFunc,setNewFunc] : [string,Function] = useState('')\r\n\r\n  const [confirmEditing,setConfirmEditing] : [boolean, Function] = useState(false)\r\n  const [confirmAddFunc,setConfirmAddFunc] : [boolean, Function] = useState(false)\r\n\r\n  const [validNewFunc, setValidNewFunc] : [boolean,Function] = useState(true)\r\n\r\n  const errorFetchingFunctionalityState : ConfirmActionState = {\r\n    label: error,\r\n    state: ConfirmActionStateLabel.error,\r\n    positiveLabel: 'Ok'\r\n  }\r\n\r\n  const [redirectTo, setRedirectTo] : [string, Function] = useState(\"\")\r\n\r\n  const {data:functionalities, dispatchAction:dispatchFunctionalityActions} = useStore('functionalities')\r\n  const {data:digitalTwins, dispatchAction:dispatchDigitalTwinActions} = useStore('digitalTwins')\r\n\r\n  const onCancel = () => setError('')\r\n\r\n  const updateFunctionalities = (funcs: Functionality[]) => dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs))\r\n  const updateDigitalTwins = (dts: DigitalTwin[]) => dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(dts))\r\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({funcId: functionalityId, funcUserId: 1 , funcName: newFunc, funcdtId: 1}))\r\n \r\n  const [editingFunc, setEditingFunc] : [Functionality | null,Function] = useState(null)\r\n  const [addDetailsFunc, setAddDetailsFunc] : [Functionality | null,Function] = useState(null)\r\n\r\n\r\n  const indexes = [\r\n    {label: 'Functionality', key: 'funcName'},\r\n    {label: 'Digital Twin', key: 'dtName'},\r\n    {label: 'State', key: 'dtDescription'},\r\n    {label: 'AssociatedSmartComponents', key: 'dtSmartComponents'},\r\n    {label: 'Monitored Variables/Events', key: 'dtMonitoredVariableEvent'},\r\n  ]\r\n\r\n  // Recuperar da base de dados as funcionalidades (Functionality)\r\n  useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadFunctionalities(functionalities)\r\n        .then((result: Functionality[]) => updateFunctionalities(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  \r\n  // Recuperar da base de dados os digital twins (DigitalTwin)\r\n  useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadDigitalTwins(digitalTwins)\r\n        .then((result: DigitalTwin[]) => updateDigitalTwins(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  const isFunctionalityValid = (func:string) => NEW_FUNCTIONALITY_RE.test(func)\r\n\r\n  const validateAndCreate = () => {\r\n\r\n  const validFunc= isFunctionalityValid(newFunc)\r\n\r\n    if(!validFunc)\r\n      setValidNewFunc(false)\r\n    else\r\n      setConfirmAddFunc(true)\r\n\r\n  }\r\n\r\n  const buildFunctionality = () : Functionality => ({\r\n    funcName: newFunc, funcId: functionalityId,\r\n    funcdtId: digitalTwinIdChoice , funcUserId, funcdtName: digitalTwinChoice,\r\n  })\r\n\r\n\r\n  const addNewFunctionalityAction = () : Promise<string> => {\r\n\r\n    const functionality : Functionality = buildFunctionality()\r\n\r\n    return new Promise<string>((res:Function, rej:Function)  => {\r\n\r\n        console.log(functionality)\r\n\r\n        createFunctionality(functionality)\r\n\r\n            .then((result: RequestResponseState) => {\r\n            functionalityId = result.extra.lastInsertedId\r\n                res('Functionality created')\r\n            })\r\n\r\n            .catch((e:RequestResponseState) => rej(e.msg))\r\n\r\n    })\r\n  }\r\n\r\n  const confirmFunctionalityCreationActionStates = {\r\n    start: {\r\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\r\n      positiveLabel: 'Ok',\r\n      negativeLabel: 'Cancel',\r\n      state: ConfirmActionStateLabel.start\r\n    },\r\n    executing: {\r\n      label: '',\r\n      state: ConfirmActionStateLabel.executing,\r\n    },\r\n    success: {\r\n      label: 'Functionality Created',\r\n      state: ConfirmActionStateLabel.success,\r\n      positiveLabel: 'Ok'\r\n    },\r\n    error: {\r\n      label: 'Error Creating Functionality',\r\n      state: ConfirmActionStateLabel.error,\r\n      positiveLabel: 'Ok'\r\n    },\r\n  }\r\n\r\n  const confirmActionProps : ConfirmActionProps = {\r\n\r\n    title: 'Add Functionality',\r\n    states: confirmFunctionalityCreationActionStates,\r\n    currentState: confirmFunctionalityCreationActionStates.start,\r\n    onCancel: () => setConfirmAddFunc(false),\r\n    onError: () => setConfirmAddFunc(false),\r\n    onSuccess: () => {\r\n        addFunc()\r\n        setNewFunc('')\r\n    },\r\n    action: addNewFunctionalityAction,\r\n  }\r\n\r\n  const getDataFunctionality = () => functionalities.map((functionality: Functionality) => {\r\n\r\n    return {\r\n          ...functionality,\r\n    }\r\n  })\r\n\r\n  const deleteFunctionalityAction = (func: Functionality) : Promise<any> => {\r\n\r\n    return new Promise(async(res:Function,rej:Function) => {\r\n\r\n        if(!func.funcId) {\r\n            rej('Error')\r\n            return\r\n        }\r\n\r\n        try {\r\n            const response : RequestResponseState = await deleteFunctionality(func.funcId)\r\n            res(response)\r\n          }\r\n\r\n        catch(err) {\r\n            rej(err)\r\n        }\r\n    })\r\n  }\r\n\r\n  //Adicionar Detalhes à Funcionalidade\r\n  const cancelAddDetails = () => setAddDetailsFunc(null);\r\n  const showAddDetails = (func: Functionality) => setAddDetailsFunc(func)\r\n  \r\n  //Editar a Funcionalidade\r\n  const cancelEditing = () => setEditingFunc(null)\r\n  const showEditing = (func: Functionality) => setEditingFunc(func)\r\n\r\n  const onGoodEditing = (editingFunctionality: Functionality) => {\r\n      \r\n    const newFunctionalities = functionalities.map((func: Functionality) => {\r\n\r\n    if(func.funcId === editingFunctionality.funcId)\r\n        return {...func, funcName: editingFunctionality.funcName, funcdtId: editingFunctionality.funcdtId}\r\n    return func\r\n\r\n    })\r\n  \r\n    cancelEditing()\r\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities))\r\n  }\r\n\r\n  // Associar um digital twin à nova funcionalidade criada\r\n  const [digitalTwinChoice, setDigitalTwinChoice] = useState('')\r\n  const [digitalTwinIdChoice, setDigitalTwinIdChoice] = useState(0)\r\n\r\n  const handleDigitalTwinChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setDigitalTwinChoice(event.target.value as string);\r\n    let i = 0;\r\n    while(i < digitalTwins.length)\r\n    {\r\n        if(digitalTwins[i].dtName === (event.target.value as string))\r\n        {\r\n            setDigitalTwinIdChoice(digitalTwins[i].dtId)\r\n        }\r\n        i++;\r\n    }\r\n   \r\n  };\r\n\r\n  const redirectToList = () => setRedirectTo(routes.functionalityDetails)\r\n  \r\n  if(redirectTo !== \"\") \r\n  return <Redirect to={redirectTo} push={true} />\r\n\r\n  return (\r\n    <Navigator title=\"New Digital Twin Functionality\">\r\n     <> \r\n        {error !== ''\r\n                ? <ConfirmAction title='Fetching Functionalities' currentState={errorFetchingFunctionalityState} states={{error: errorFetchingFunctionalityState}} onCancel={onCancel}/>\r\n                : null \r\n        }\r\n         <LazyComponent loaded={!fetching}>\r\n             <>\r\n                {confirmEditing\r\n                     ? <ConfirmAction {...confirmActionProps} /> \r\n                     : editingFunc\r\n                         ?  <EditFunctionalityDialog\r\n                             onGood={onGoodEditing}\r\n                             func={editingFunc}\r\n                             onError={cancelEditing}\r\n                             onCancel={cancelEditing} />\r\n                         : null\r\n                 }\r\n                {confirmAddFunc \r\n                     ? <ConfirmAction {...confirmActionProps} /> \r\n                     : addDetailsFunc\r\n                         ?  <AddFunctionalityDetails\r\n                             onGood={onGoodEditing}\r\n                             func={addDetailsFunc}\r\n                             onError={cancelAddDetails}\r\n                             onCancel={cancelAddDetails} />\r\n                         : null\r\n                 }\r\n                 <Grid container direction=\"column\" spacing={2}>\r\n                      <Grid item>\r\n                        <JPTable\r\n                            sortedkey=\"funcName\"\r\n                            data={getDataFunctionality()} \r\n                            updateData={updateFunctionalities} \r\n                            indexes={indexes} \r\n                            tName='Functionality'\r\n                            extra={{\r\n                                delete: {\r\n                                    action: deleteFunctionalityAction,\r\n                                    labelKey: 'funcName',\r\n                                    onSuccessDelete: () => {}\r\n                                },\r\n                                edit: {\r\n                                    action: showEditing\r\n                                },\r\n                                details: {\r\n                                    action: redirectToList\r\n                                },\r\n                                add: {\r\n                                    action: showAddDetails\r\n                                }\r\n                              }} \r\n                        />\r\n                      </Grid>\r\n                    <Grid item xs>\r\n                        New Functionality\r\n                    </Grid>\r\n                     <Grid item> \r\n                        <Grid container item xs>\r\n                            <Grid className={classes.box} spacing={1} item container direction=\"row\">\r\n                            <Grid item xs={4}>\r\n                                <TextField\r\n                                    helperText={!validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : ''}\r\n                                    error={!validNewFunc}\r\n                                    label=\"Insert new functionality name\" \r\n                                    required\r\n                                    onChange={(event) => {\r\n                                        setNewFunc(event.target.value)\r\n                                        if(!validNewFunc)\r\n                                            setValidNewFunc(isFunctionalityValid(event.target.value.trim()))\r\n                                    }}\r\n                                    fullWidth\r\n                                    value={newFunc}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputLabel id={`digital-twin-label-${newFunc}`}>Digital Twin</InputLabel>\r\n                                <Select labelId={`digital-twin-label-${newFunc}`} value={digitalTwinChoice} onChange={handleDigitalTwinChoice}>\r\n                                {(digitalTwins || []).map((digitalTwin: any) => {return <MenuItem key={digitalTwin.dtId} value={digitalTwin.dtName}>{digitalTwin.dtName}</MenuItem>})}\r\n                                </Select>\r\n                            </Grid>\r\n                            <Grid container justify=\"flex-end\" spacing={1}>\r\n                             <Grid item>\r\n                                 <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={validateAndCreate}\r\n                                 >\r\n                                    Add Functionality\r\n                                 </Button>\r\n                             </Grid>\r\n                         </Grid>\r\n                        </Grid>\r\n                        </Grid>\r\n                     </Grid>\r\n                 </Grid>\r\n             </>\r\n         </LazyComponent>\r\n     </>\r\n </Navigator>\r\n )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}