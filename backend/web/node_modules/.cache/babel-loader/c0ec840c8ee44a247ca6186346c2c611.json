{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/FunctionalityForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { FormControl, InputLabel, TextField, Grid, Select, MenuItem, Button } from '@material-ui/core';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { Done, Clear } from '@material-ui/icons';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction';\nimport { useStore } from '../templates/Store/Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FunctionalityForm = props => {\n  _s();\n\n  var _props$confirmDialog$, _props$confirmDialog$2, _props$confirmDialog$3;\n\n  /**styles */\n  const classes = useFunctionBlockStyles();\n  /**list of digital-twins */\n\n  const {\n    data: digitalTwins,\n    dispatchAction: dispatchDigitalTwinsActions\n  } = useStore('digitalTwins');\n  const [validDt, setValidDt] = useState(true);\n  /**Functionality Name */\n\n  const {\n    funcName,\n    setFuncName\n  } = props.funcName;\n  const [validFuncName, setValidFuncName] = useState(true);\n  const onChangeFuncName = useCallback(event => {\n    setFuncName(event.target.value.trim());\n    setValidFuncName(true);\n  }, [setFuncName]);\n  /*Digital Twin*/\n\n  const {\n    digitalTwin,\n    setDigitalTwin\n  } = props.digitalTwin;\n  /* Buttons */\n\n  const onCancel = props.cancel.action;\n  const cancelLabel = props.cancel.label;\n  const confirmLabel = props.confirmDialog.buttonTitle;\n  /* Confirmation */\n\n  const [confirm, setConfirm] = useState(false);\n\n  const validateFields = () => {\n    const cValidFuncName = funcName.trim() !== '';\n    const cValidDigitalTwin = digitalTwin.dtId !== -1;\n    if (!cValidFuncName) setValidFuncName(cValidFuncName);\n    if (!cValidDigitalTwin) setValidDt(cValidDigitalTwin);\n    return cValidFuncName && cValidDigitalTwin;\n  };\n\n  const confirmButtonAction = () => {\n    if (validateFields()) setConfirm(true);\n  };\n\n  const confirmActionStates = {\n    start: {\n      label: (_props$confirmDialog$ = props.confirmDialog.start) === null || _props$confirmDialog$ === void 0 ? void 0 : _props$confirmDialog$.label,\n      positiveLabel: (_props$confirmDialog$2 = props.confirmDialog.start) === null || _props$confirmDialog$2 === void 0 ? void 0 : _props$confirmDialog$2.positiveLabel,\n      negativeLabel: (_props$confirmDialog$3 = props.confirmDialog.start) === null || _props$confirmDialog$3 === void 0 ? void 0 : _props$confirmDialog$3.negativeLabel,\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: props.confirmDialog.success.label,\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    },\n    error: {\n      label: props.confirmDialog.error.label,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    }\n  };\n  const confirmActionProps = {\n    title: props.confirmDialog.title,\n    states: confirmActionStates,\n    currentState: confirmActionStates.executing,\n    onCancel: () => setConfirm(false),\n    onError: () => setConfirm(false),\n    onSuccess: props.confirmDialog.onSuccess\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", confirm ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      spacing: 1,\n      justify: \"space-between\",\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: onChangeFuncName,\n          value: funcName,\n          helperText: \"\",\n          error: !validFuncName,\n          fullWidth: true,\n          required: true,\n          label: \"Type\",\n          id: \"fb-type\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          error: !validDt,\n          id: \"digital-twin-label\",\n          children: \"DigitalTwin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            error: !validDt,\n            labelId: \"digital-twin-label\",\n            value: digitalTwin.dtName,\n            onChange: event => {\n              setValidDt(true);\n              setDigitalTwin(digitalTwins.filter(dts => event.target.value === dts.dtName)[0]);\n            },\n            children: digitalTwins.map((dts, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: dts.dtName,\n              children: dts.dtName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 76\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        container: true,\n        direction: \"row\",\n        spacing: 2,\n        alignItems: \"center\",\n        justify: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onCancel,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 86\n            }, this), cancelLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: confirmButtonAction,\n            color: \"primary\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(Done, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 93\n            }, this), confirmLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FunctionalityForm, \"x5ZF15eHn0426/GXTUBDWbBkMsI=\", false, function () {\n  return [useFunctionBlockStyles, useStore];\n});\n\n_c = FunctionalityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FunctionalityForm\");","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/FunctionalityForm.tsx"],"names":["React","useState","useCallback","FormControl","InputLabel","TextField","Grid","Select","MenuItem","Button","useFunctionBlockStyles","Done","Clear","ConfirmActionStateLabel","ConfirmAction","useStore","FunctionalityForm","props","classes","data","digitalTwins","dispatchAction","dispatchDigitalTwinsActions","validDt","setValidDt","funcName","setFuncName","validFuncName","setValidFuncName","onChangeFuncName","event","target","value","trim","digitalTwin","setDigitalTwin","onCancel","cancel","action","cancelLabel","label","confirmLabel","confirmDialog","buttonTitle","confirm","setConfirm","validateFields","cValidFuncName","cValidDigitalTwin","dtId","confirmButtonAction","confirmActionStates","start","positiveLabel","negativeLabel","state","executing","success","error","confirmActionProps","title","states","currentState","onError","onSuccess","dtName","filter","dts","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\r\nimport { FormControl, InputLabel, TextField, Grid, Select, MenuItem, Box, Button,Typography, Chip } from '@material-ui/core'\r\nimport { DigitalTwin , Functionality} from '../../model'\r\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\r\nimport { VariableList } from '../FunctionBlocks/FunctionBlock/Variable'\r\nimport { setSimpleField, useMountEffect } from '../../utils/main'\r\nimport { Done, Clear } from '@material-ui/icons'\r\nimport { ReactComponent as UploadIcon } from '../../../icons/Upload.svg'\r\nimport { getFBfromFbtFile, getOrDownloadFunctionBlockCategories } from '../../utils/functionBlock'\r\nimport { ConfirmActionProps, ConfirmActionStateLabel, ConfirmActionAction, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction'\r\nimport { useStore } from '../templates/Store/Store'\r\n\r\ninterface FunctionalityFormProps {\r\n\r\n    funcName: {\r\n      funcName: string\r\n      setFuncName: Function\r\n    },\r\n    digitalTwin: {\r\n      digitalTwin: DigitalTwin\r\n      setDigitalTwin: Function\r\n    }\r\n    cancel: {\r\n        label: string\r\n        action: () => void\r\n    },\r\n    confirmDialog: {\r\n        buttonTitle: string\r\n        title: string\r\n        initialState: ConfirmActionStateLabel\r\n        onSuccess : () => void\r\n        start? : {\r\n            label: string\r\n            positiveLabel: string\r\n            negativeLabel: string\r\n        }\r\n        success: {\r\n            label:string\r\n            positiveLabel: string\r\n        }\r\n        error: {\r\n            label: string\r\n            positiveLabel: string\r\n        }\r\n    },\r\n}\r\n\r\nexport const FunctionalityForm = (props: FunctionalityFormProps) => {\r\n\r\n    /**styles */\r\n    const classes = useFunctionBlockStyles()\r\n\r\n    /**list of digital-twins */\r\n    const {data: digitalTwins, dispatchAction:dispatchDigitalTwinsActions} = useStore('digitalTwins')\r\n    const [validDt,setValidDt] : [boolean, Function] = useState(true)\r\n\r\n    /**Functionality Name */\r\n    const {funcName, setFuncName} = props.funcName\r\n    const [validFuncName, setValidFuncName] = useState(true)\r\n    const onChangeFuncName = useCallback((event:any) => {\r\n\r\n      setFuncName(event.target.value.trim())\r\n      setValidFuncName(true)\r\n    \r\n    },[setFuncName])\r\n\r\n    /*Digital Twin*/\r\n    const {digitalTwin,setDigitalTwin} = props.digitalTwin\r\n\r\n\r\n    /* Buttons */\r\n\r\n    const onCancel = props.cancel.action\r\n    const cancelLabel = props.cancel.label\r\n\r\n    const confirmLabel = props.confirmDialog.buttonTitle\r\n\r\n    /* Confirmation */\r\n\r\n    const [confirm, setConfirm] : [boolean, Function] = useState(false)\r\n\r\n    const validateFields = () : boolean => {\r\n\r\n        const cValidFuncName = funcName.trim() !== ''\r\n        const cValidDigitalTwin = digitalTwin.dtId !== -1\r\n            \r\n        if(!cValidFuncName) setValidFuncName(cValidFuncName)\r\n        if(!cValidDigitalTwin ) setValidDt(cValidDigitalTwin)\r\n    \r\n        return cValidFuncName && cValidDigitalTwin\r\n    }\r\n\r\n    const confirmButtonAction = () => {\r\n\r\n        if(validateFields())\r\n          setConfirm(true)\r\n    }\r\n\r\n    const confirmActionStates = {\r\n        start: {\r\n            label: props.confirmDialog.start?.label,\r\n            positiveLabel: props.confirmDialog.start?.positiveLabel,\r\n            negativeLabel: props.confirmDialog.start?.negativeLabel,\r\n            state: ConfirmActionStateLabel.start\r\n        },\r\n        executing: {\r\n          label: '',\r\n          state: ConfirmActionStateLabel.executing,\r\n        },\r\n        success: {\r\n          label: props.confirmDialog.success.label,\r\n          state: ConfirmActionStateLabel.success,\r\n          positiveLabel: props.confirmDialog.success.positiveLabel\r\n        },\r\n        error: {\r\n          label: props.confirmDialog.error.label,\r\n          state: ConfirmActionStateLabel.error,\r\n          positiveLabel: props.confirmDialog.success.positiveLabel\r\n        },\r\n      }\r\n    \r\n    const confirmActionProps : ConfirmActionProps = {\r\n\r\n        title: props.confirmDialog.title,\r\n        states: confirmActionStates,\r\n        currentState: confirmActionStates.executing,\r\n        onCancel: () => setConfirm(false),\r\n        onError: () => setConfirm(false),\r\n        onSuccess: props.confirmDialog.onSuccess,\r\n    }\r\n\r\n    return (\r\n        <> {confirm ? <ConfirmAction {...confirmActionProps} /> : null}\r\n            <Grid spacing={1} justify=\"space-between\" item xs container direction=\"row\">\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  onChange={onChangeFuncName} \r\n                  value={funcName}\r\n                  helperText=\"\"\r\n                  error={!validFuncName} \r\n                  fullWidth required \r\n                  label=\"Type\" \r\n                  id=\"fb-type\" \r\n                  type=\"text\" />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs>\r\n                <FormControl fullWidth required>\r\n                  <InputLabel error={!validDt} id=\"digital-twin-label\">DigitalTwin</InputLabel>\r\n                  <>\r\n                    <Select\r\n                      error={!validDt}\r\n                      labelId=\"digital-twin-label\"\r\n                      value={digitalTwin.dtName}\r\n                      onChange={(event) => {\r\n                        setValidDt(true)\r\n                        setDigitalTwin(digitalTwins.filter((dts:DigitalTwin) => event.target.value === dts.dtName)[0])\r\n                      }} \r\n                    >\r\n                      {digitalTwins.map((dts:DigitalTwin, index:number) => <MenuItem key={index} value={dts.dtName}>{dts.dtName}</MenuItem>)}\r\n                    </Select>\r\n                   \r\n                  </>\r\n                </FormControl>\r\n              </Grid>\r\n            <Grid item xs container direction=\"row\" justify=\"space-between\" alignItems=\"center\"> \r\n              <Grid item xs={6} container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"flex-end\">\r\n                <Grid item>\r\n                    <Button onClick={onCancel} color=\"secondary\" variant=\"contained\"><Clear/>{cancelLabel}</Button>\r\n                </Grid>\r\n                <Grid>\r\n                  <Button onClick={confirmButtonAction} color=\"primary\" variant=\"contained\"><Done/>{confirmLabel}</Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n        </>\r\n      )\r\n}"]},"metadata":{},"sourceType":"module"}