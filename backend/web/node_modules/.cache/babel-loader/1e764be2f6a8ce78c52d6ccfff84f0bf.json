{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinMonitoring.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navigator } from '../templates/Navigator/Navigator';\nimport { ConfirmAction, ConfirmActionStateLabel } from '../templates/ConfirmAction/ConfirmAction';\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent';\nimport { JPTable } from '../templates/Table/JPTable';\nimport { useMountEffect } from '../../utils/main';\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities } from '../../utils/digitalTwins';\nimport { useStore } from '../templates/Store/Store';\nimport { FunctionalityActions, DigitalTwinActions } from '../../redux/actions';\nimport { TextField, Grid, Button, Box, Dialog, DialogTitle, CircularProgress, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport { createFunctionality, updateFunctionality } from '../../services/api/digital-twin';\nimport { deleteFunctionality } from '../../services/api/digital-twin';\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style';\nimport { CheckCircle, Error } from '@material-ui/icons';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { routes } from '../../App';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/;\nlet functionalityId = -1;\nconst funcUserId = 1;\n\nconst EditFunctionalityDialog = props => {\n  _s();\n\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const classes = useDialogStyles();\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n\n  const action = () => {\n    if (props.func.funcId) {\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func.funcId, newFuncName).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        }).finally(() => setSending(false));\n      } else {\n        if (result.good) props.onGood({ ...props.func,\n          funcName: newFuncName\n        });else props.onError();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Edit Functionality\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: !result.done ? /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: sending,\n        value: newFuncName,\n        onChange: event => setNewFuncName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: result.good ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(Error, {\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: result.good ? classes.good : classes.error,\n            textAlign: \"center\",\n            children: result.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.buttons,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: sending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: action,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: sending,\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditFunctionalityDialog, \"pa6Sqs49YPMvA2bR1UMOpZZcg98=\", false, function () {\n  return [useDialogStyles];\n});\n\n_c = EditFunctionalityDialog;\n\nconst AddFunctionalityDetails = props => {\n  _s2();\n\n  const [newFuncName, setNewFuncName] = useState(props.func.funcName);\n  const classes = useDialogStyles();\n  const [sending, setSending] = useState(false);\n  const [result, setResult] = useState({\n    done: false\n  });\n\n  const action = () => {\n    if (props.func.funcId) {\n      if (!result.done) {\n        setSending(true);\n        updateFunctionality(props.func.funcId, newFuncName).then(response => {\n          setResult({\n            done: true,\n            good: true,\n            message: response.msg\n          });\n        }).catch(error => {\n          setResult({\n            done: true,\n            good: false,\n            message: error.msg\n          });\n        }).finally(() => setSending(false));\n      } else {\n        if (result.good) props.onGood({ ...props.func,\n          funcName: newFuncName\n        });else props.onError();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Add Functionality Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: !result.done ? /*#__PURE__*/_jsxDEV(TextField, {\n        disabled: sending,\n        value: newFuncName,\n        onChange: event => setNewFuncName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: result.good ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(Error, {\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: result.good ? classes.good : classes.error,\n            textAlign: \"center\",\n            children: result.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.buttons,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: sending ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: action,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: sending,\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AddFunctionalityDetails, \"pa6Sqs49YPMvA2bR1UMOpZZcg98=\", false, function () {\n  return [useDialogStyles];\n});\n\n_c2 = AddFunctionalityDetails;\nexport const DigitalTwinMonitoring = () => {\n  _s3();\n\n  const classes = useFunctionBlockStyles();\n  const [fetching, setFetching] = useState(true);\n  const [error, setError] = useState('');\n  const [newFunc, setNewFunc] = useState('');\n  const [confirmAddFunc, setConfirmAddFunc] = useState(false);\n  const [validNewFunc, setValidNewFunc] = useState(true);\n  const errorFetchingFunctionalityState = {\n    label: error,\n    state: ConfirmActionStateLabel.error,\n    positiveLabel: 'Ok'\n  };\n  const [redirectTo, setRedirectTo] = useState(\"\");\n  const {\n    data: functionalities,\n    dispatchAction: dispatchFunctionalityActions\n  } = useStore('functionalities');\n  const {\n    data: digitalTwins,\n    dispatchAction: dispatchDigitalTwinActions\n  } = useStore('digitalTwins');\n\n  const onCancel = () => setError('');\n\n  const updateFunctionalities = funcs => dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs));\n\n  const updateDigitalTwins = dts => dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(dts));\n\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({\n    funcId: functionalityId,\n    funcUserId: 1,\n    funcName: newFunc,\n    funcdtId: 1\n  }));\n\n  const [editingFunc, setEditingFunc] = useState(null);\n  const [addDetailsFunc, setAddDetailsFunc] = useState(null);\n  const indexes = [{\n    label: 'Functionality',\n    key: 'funcName'\n  }, {\n    label: 'Digital Twin',\n    key: 'dtName'\n  }, {\n    label: 'State',\n    key: 'dtDescription'\n  }, {\n    label: 'AssociatedSmartComponents',\n    key: 'dtSmartComponents'\n  }, {\n    label: 'Monitored Variables/Events',\n    key: 'dtMonitoredVariableEvent'\n  } // {label: 'Add Variables/Events', key: 'dtAddVariableEvent'},\n  // {label: 'Details', key: 'dtDetails'},\n  ];\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadFunctionalities(functionalities).then(result => updateFunctionalities(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadDigitalTwins(digitalTwins).then(result => updateDigitalTwins(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n\n  const isFunctionalityValid = func => NEW_FUNCTIONALITY_RE.test(func);\n\n  const validateAndCreate = () => {\n    const validFunc = isFunctionalityValid(newFunc);\n    if (!validFunc) setValidNewFunc(false);else setConfirmAddFunc(true);\n  };\n\n  const buildFunctionality = () => ({\n    funcName: newFunc,\n    funcId: functionalityId,\n    funcdtId: digitalTwinIdChoice,\n    funcUserId,\n    funcdtName: digitalTwinChoice\n  });\n\n  const addNewFunctionalityAction = () => {\n    const functionality = buildFunctionality();\n    return new Promise((res, rej) => {\n      console.log(functionality);\n      createFunctionality(functionality).then(result => {\n        functionalityId = result.extra.lastInsertedId;\n        res('Functionality created');\n      }).catch(e => rej(e.msg));\n    });\n  };\n\n  const confirmFunctionalityCreationActionStates = {\n    start: {\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\n      positiveLabel: 'Ok',\n      negativeLabel: 'Cancel',\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: 'Functionality Created',\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: 'Ok'\n    },\n    error: {\n      label: 'Error Creating Functionality',\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: 'Ok'\n    }\n  };\n  const confirmActionProps = {\n    title: 'Add Functionality',\n    states: confirmFunctionalityCreationActionStates,\n    currentState: confirmFunctionalityCreationActionStates.start,\n    onCancel: () => setConfirmAddFunc(false),\n    onError: () => setConfirmAddFunc(false),\n    onSuccess: () => {\n      addFunc();\n      setNewFunc('');\n    },\n    action: addNewFunctionalityAction\n  };\n\n  const getDataFunctionality = () => functionalities.map(functionality => {\n    return { ...functionality\n    };\n  });\n\n  const deleteFunctionalityAction = func => {\n    return new Promise(async (res, rej) => {\n      if (!func.funcId) {\n        rej('Error');\n        return;\n      }\n\n      try {\n        const response = await deleteFunctionality(func.funcId);\n        res(response);\n      } catch (err) {\n        rej(err);\n      }\n    });\n  }; //Adicionar Detalhes à Funcionalidade\n\n\n  const cancelAddDetails = () => setAddDetailsFunc(null);\n\n  const showAddDetails = func => setAddDetails(func); //Editar a Funcionalidade\n\n\n  const cancelEditing = () => setEditingFunc(null);\n\n  const showEditing = func => setEditingFunc(func);\n\n  const onGoodEditing = editingFunctionality => {\n    const newFunctionalities = functionalities.map(func => {\n      if (func.funcId === editingFunctionality.funcId) return { ...func,\n        funcName: editingFunctionality.funcName,\n        funcdtId: editingFunctionality.funcdtId\n      };\n      return func;\n    });\n    cancelEditing();\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities));\n  };\n\n  const [digitalTwinChoice, setDigitalTwinChoice] = useState('');\n  const [digitalTwinIdChoice, setDigitalTwinIdChoice] = useState(0);\n\n  const handleDigitalTwinChoice = event => {\n    setDigitalTwinChoice(event.target.value);\n    let i = 0;\n\n    while (i < digitalTwins.length) {\n      if (digitalTwins[i].dtName === event.target.value) {\n        setDigitalTwinIdChoice(digitalTwins[i].dtId);\n      }\n\n      i++;\n    }\n  };\n\n  const redirectToList = () => setRedirectTo(routes.functionalityDetails);\n\n  if (redirectTo !== \"\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: redirectTo,\n    push: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 10\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Navigator, {\n    title: \"New Digital Twin Functionality\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [error !== '' ? /*#__PURE__*/_jsxDEV(ConfirmAction, {\n        title: \"Fetching Functionalities\",\n        currentState: errorFetchingFunctionalityState,\n        states: {\n          error: errorFetchingFunctionalityState\n        },\n        onCancel: onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(LazyComponent, {\n        loaded: !fetching,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [confirmAddFunc ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 24\n          }, this) : editingFunc ? /*#__PURE__*/_jsxDEV(EditFunctionalityDialog, {\n            onGood: onGoodEditing,\n            func: editingFunc,\n            onError: cancelEditing,\n            onCancel: cancelEditing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(JPTable, {\n                sortedkey: \"funcName\",\n                data: getDataFunctionality(),\n                updateData: updateFunctionalities,\n                indexes: indexes,\n                tName: \"Functionality\",\n                extra: {\n                  delete: {\n                    action: deleteFunctionalityAction,\n                    labelKey: 'funcName',\n                    onSuccessDelete: () => {}\n                  },\n                  edit: {\n                    action: showEditing\n                  },\n                  details: {\n                    action: redirectToList\n                  },\n                  add: {\n                    action: showEditing\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: \"New Functionality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                item: true,\n                xs: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  className: classes.box,\n                  spacing: 1,\n                  item: true,\n                  container: true,\n                  direction: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      helperText: !validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : '',\n                      error: !validNewFunc,\n                      label: \"Insert new functionality name\",\n                      required: true,\n                      onChange: event => {\n                        setNewFunc(event.target.value);\n                        if (!validNewFunc) setValidNewFunc(isFunctionalityValid(event.target.value.trim()));\n                      },\n                      fullWidth: true,\n                      value: newFunc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 479,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: `digital-twin-label-${newFunc}`,\n                      children: \"Digital Twin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: `digital-twin-label-${newFunc}`,\n                      value: digitalTwinChoice,\n                      onChange: handleDigitalTwinChoice,\n                      children: (digitalTwins || []).map(digitalTwin => {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: digitalTwin.dtName,\n                          children: digitalTwin.dtName\n                        }, digitalTwin.dtId, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 496,\n                          columnNumber: 89\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    justify: \"flex-end\",\n                    spacing: 1,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        variant: \"contained\",\n                        onClick: validateAndCreate,\n                        children: \"Add Functionality\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 34\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 30\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(DigitalTwinMonitoring, \"Kv+7e+IBWWlJaMEz5H5H0a7y8wE=\", false, function () {\n  return [useFunctionBlockStyles, useStore, useStore, useMountEffect, useMountEffect];\n});\n\n_c3 = DigitalTwinMonitoring;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditFunctionalityDialog\");\n$RefreshReg$(_c2, \"AddFunctionalityDetails\");\n$RefreshReg$(_c3, \"DigitalTwinMonitoring\");","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinMonitoring.tsx"],"names":["React","useState","Navigator","ConfirmAction","ConfirmActionStateLabel","LazyComponent","JPTable","useMountEffect","getOrDownloadDigitalTwins","getOrDownloadFunctionalities","useStore","FunctionalityActions","DigitalTwinActions","TextField","Grid","Button","Box","Dialog","DialogTitle","CircularProgress","Select","InputLabel","MenuItem","createFunctionality","updateFunctionality","deleteFunctionality","useDialogStyles","CheckCircle","Error","useFunctionBlockStyles","routes","Redirect","NEW_FUNCTIONALITY_RE","functionalityId","funcUserId","EditFunctionalityDialog","props","newFuncName","setNewFuncName","func","funcName","classes","sending","setSending","result","setResult","done","action","funcId","then","response","good","message","msg","catch","error","finally","onGood","onError","box","event","target","value","buttons","onCancel","AddFunctionalityDetails","DigitalTwinMonitoring","fetching","setFetching","setError","newFunc","setNewFunc","confirmAddFunc","setConfirmAddFunc","validNewFunc","setValidNewFunc","errorFetchingFunctionalityState","label","state","positiveLabel","redirectTo","setRedirectTo","data","functionalities","dispatchAction","dispatchFunctionalityActions","digitalTwins","dispatchDigitalTwinActions","updateFunctionalities","funcs","updateDigitalTwins","dts","addFunc","addFunctionality","funcdtId","editingFunc","setEditingFunc","addDetailsFunc","setAddDetailsFunc","indexes","key","setTimeout","e","isFunctionalityValid","test","validateAndCreate","validFunc","buildFunctionality","digitalTwinIdChoice","funcdtName","digitalTwinChoice","addNewFunctionalityAction","functionality","Promise","res","rej","console","log","extra","lastInsertedId","confirmFunctionalityCreationActionStates","start","negativeLabel","executing","success","confirmActionProps","title","states","currentState","onSuccess","getDataFunctionality","map","deleteFunctionalityAction","err","cancelAddDetails","showAddDetails","setAddDetails","cancelEditing","showEditing","onGoodEditing","editingFunctionality","newFunctionalities","setDigitalTwinChoice","setDigitalTwinIdChoice","handleDigitalTwinChoice","i","length","dtName","dtId","redirectToList","functionalityDetails","delete","labelKey","onSuccessDelete","edit","details","add","toString","trim","digitalTwin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Navigator } from '../templates/Navigator/Navigator'\r\nimport { ConfirmAction, ConfirmActionState, ConfirmActionStateLabel, ConfirmActionProps } from '../templates/ConfirmAction/ConfirmAction'\r\nimport { LazyComponent } from '../templates/LazyComponent/LazyComponent'\r\nimport { JPTable } from '../templates/Table/JPTable'\r\nimport { Functionality, DigitalTwin} from '../../model'\r\nimport { useMountEffect } from '../../utils/main'\r\nimport { getOrDownloadDigitalTwins, getOrDownloadFunctionalities} from '../../utils/digitalTwins'\r\nimport { useStore } from '../templates/Store/Store'\r\nimport { FunctionalityActions , DigitalTwinActions} from '../../redux/actions'\r\nimport { RequestResponseState } from '../../services/api/api'\r\nimport { TextField, Grid, Button, Box, Dialog, DialogTitle, CircularProgress , Select, InputLabel, MenuItem } from '@material-ui/core'\r\nimport { createFunctionality, updateFunctionality } from '../../services/api/digital-twin'\r\nimport { deleteFunctionality} from '../../services/api/digital-twin'\r\nimport { useDialogStyles } from '../FunctionBlockCategories/List/style'\r\nimport { CheckCircle, Error } from '@material-ui/icons'\r\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\r\nimport { routes } from '../../App'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst NEW_FUNCTIONALITY_RE = /[a-zA-Z0-9]{3,}/\r\n\r\nlet functionalityId = -1\r\nconst funcUserId = 1\r\n\r\nconst EditFunctionalityDialog = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n  const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n\r\n  const classes = useDialogStyles()\r\n\r\n  const [sending, setSending] : [boolean, Function] = useState(false)\r\n\r\n  const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n\r\n  const action = () => {\r\n\r\n      if(props.func.funcId) {\r\n\r\n          if(!result.done) {\r\n\r\n              setSending(true)\r\n  \r\n              updateFunctionality(props.func.funcId, newFuncName)\r\n\r\n                  .then((response: RequestResponseState) => {\r\n                      setResult({done:true, good: true, message: response.msg})\r\n                  })\r\n\r\n                  .catch((error: RequestResponseState) => {\r\n                      setResult({done: true, good: false, message: error.msg})\r\n                  })\r\n\r\n                  .finally(() => setSending(false))\r\n\r\n          }\r\n\r\n          else {\r\n\r\n              if(result.good)\r\n                  props.onGood({...props.func, funcName: newFuncName})\r\n              \r\n              else\r\n                  props.onError()\r\n\r\n          }\r\n\r\n      }\r\n\r\n  }\r\n\r\n  return (\r\n      <Dialog open={true}>\r\n          <DialogTitle>Edit Functionality</DialogTitle>\r\n          <Box className={classes.box}>\r\n              {\r\n                  !result.done \r\n                      ?\r\n                          <TextField \r\n                              disabled={sending}\r\n                              value={newFuncName}\r\n                              onChange={(event) => setNewFuncName(event.target.value)}\r\n                          />\r\n                      :    <Grid container justify=\"center\">\r\n                              <Grid item>\r\n                                  {\r\n                                      result.good \r\n                                          ?   <CheckCircle color=\"primary\" />\r\n                                          :   <Error color=\"error\" />\r\n                                  }\r\n                              </Grid>\r\n                              <Grid item>\r\n                                  <Box className={result.good ? classes.good : classes.error} textAlign=\"center\">{result.message}</Box>\r\n                              </Grid>\r\n                          </Grid> \r\n              }\r\n          </Box>\r\n          <Grid className={classes.buttons} container direction=\"row\" justify=\"space-between\">\r\n              <Grid item>\r\n                  {sending \r\n                      ? <CircularProgress color=\"primary\" />\r\n                      : <Button onClick={action}>Ok</Button>\r\n                  }\r\n              </Grid>\r\n              <Grid item>\r\n                  <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>\r\n              </Grid>\r\n          </Grid>\r\n      </Dialog>\r\n  )\r\n\r\n}\r\n\r\nconst AddFunctionalityDetails = (props: {func: Functionality, onGood: (newFunc: Functionality) => void, onError: () => void, onCancel: () => void}) => {\r\n\r\n    const [newFuncName, setNewFuncName] : [string,Function] = useState(props.func.funcName)\r\n  \r\n    const classes = useDialogStyles()\r\n  \r\n    const [sending, setSending] : [boolean, Function] = useState(false)\r\n  \r\n    const [result, setResult] : [{done: boolean, good?: boolean, message?: string},Function] = useState({done:false})\r\n  \r\n    const action = () => {\r\n  \r\n        if(props.func.funcId) {\r\n  \r\n            if(!result.done) {\r\n  \r\n                setSending(true)\r\n    \r\n                updateFunctionality(props.func.funcId, newFuncName)\r\n  \r\n                    .then((response: RequestResponseState) => {\r\n                        setResult({done:true, good: true, message: response.msg})\r\n                    })\r\n  \r\n                    .catch((error: RequestResponseState) => {\r\n                        setResult({done: true, good: false, message: error.msg})\r\n                    })\r\n  \r\n                    .finally(() => setSending(false))\r\n  \r\n            }\r\n  \r\n            else {\r\n  \r\n                if(result.good)\r\n                    props.onGood({...props.func, funcName: newFuncName})\r\n                \r\n                else\r\n                    props.onError()\r\n  \r\n            }\r\n  \r\n        }\r\n  \r\n    }\r\n  \r\n    return (\r\n        <Dialog open={true}>\r\n            <DialogTitle>Add Functionality Details</DialogTitle>\r\n            <Box className={classes.box}>\r\n                {\r\n                    !result.done \r\n                        ?\r\n                            <TextField \r\n                                disabled={sending}\r\n                                value={newFuncName}\r\n                                onChange={(event) => setNewFuncName(event.target.value)}\r\n                            />\r\n                        :    <Grid container justify=\"center\">\r\n                                <Grid item>\r\n                                    {\r\n                                        result.good \r\n                                            ?   <CheckCircle color=\"primary\" />\r\n                                            :   <Error color=\"error\" />\r\n                                    }\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Box className={result.good ? classes.good : classes.error} textAlign=\"center\">{result.message}</Box>\r\n                                </Grid>\r\n                            </Grid> \r\n                }\r\n            </Box>\r\n            <Grid className={classes.buttons} container direction=\"row\" justify=\"space-between\">\r\n                <Grid item>\r\n                    {sending \r\n                        ? <CircularProgress color=\"primary\" />\r\n                        : <Button onClick={action}>Ok</Button>\r\n                    }\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button disabled={sending} onClick={props.onCancel}>Cancel</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Dialog>\r\n    )\r\n  \r\n  }\r\n  \r\n\r\nexport const DigitalTwinMonitoring = () => {\r\n    \r\n  const classes = useFunctionBlockStyles()\r\n\r\n  const [fetching,setFetching] = useState(true)\r\n  const [error,setError] = useState('')\r\n  const [newFunc,setNewFunc] : [string,Function] = useState('')\r\n\r\n  const [confirmAddFunc,setConfirmAddFunc] : [boolean, Function] = useState(false)\r\n\r\n  const [validNewFunc, setValidNewFunc] : [boolean,Function] = useState(true)\r\n\r\n  const errorFetchingFunctionalityState : ConfirmActionState = {\r\n    label: error,\r\n    state: ConfirmActionStateLabel.error,\r\n    positiveLabel: 'Ok'\r\n  }\r\n\r\n  const [redirectTo, setRedirectTo] : [string, Function] = useState(\"\")\r\n\r\n  const {data:functionalities, dispatchAction:dispatchFunctionalityActions} = useStore('functionalities')\r\n  const {data:digitalTwins, dispatchAction:dispatchDigitalTwinActions} = useStore('digitalTwins')\r\n\r\n  const onCancel = () => setError('')\r\n\r\n  const updateFunctionalities = (funcs: Functionality[]) => dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(funcs))\r\n  const updateDigitalTwins = (dts: DigitalTwin[]) => dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(dts))\r\n  const addFunc = () => dispatchFunctionalityActions(FunctionalityActions.addFunctionality({funcId: functionalityId, funcUserId: 1 , funcName: newFunc, funcdtId: 1}))\r\n \r\n  const [editingFunc, setEditingFunc] : [Functionality | null,Function] = useState(null)\r\n  const [addDetailsFunc, setAddDetailsFunc] : [Functionality | null,Function] = useState(null)\r\n\r\n\r\n  const indexes = [\r\n    {label: 'Functionality', key: 'funcName'},\r\n    {label: 'Digital Twin', key: 'dtName'},\r\n    {label: 'State', key: 'dtDescription'},\r\n    {label: 'AssociatedSmartComponents', key: 'dtSmartComponents'},\r\n    {label: 'Monitored Variables/Events', key: 'dtMonitoredVariableEvent'},\r\n    // {label: 'Add Variables/Events', key: 'dtAddVariableEvent'},\r\n    // {label: 'Details', key: 'dtDetails'},\r\n  ]\r\n\r\n  useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadFunctionalities(functionalities)\r\n        .then((result: Functionality[]) => updateFunctionalities(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  useMountEffect(() => {\r\n\r\n    setTimeout(() => {\r\n\r\n    setFetching(true)\r\n    getOrDownloadDigitalTwins(digitalTwins)\r\n        .then((result: DigitalTwin[]) => updateDigitalTwins(result))\r\n        .catch((e:RequestResponseState) => setError(e.msg))\r\n        .finally(() => setFetching(false))\r\n    }, 0)\r\n  })\r\n\r\n  const isFunctionalityValid = (func:string) => NEW_FUNCTIONALITY_RE.test(func)\r\n\r\n  const validateAndCreate = () => {\r\n\r\n  const validFunc= isFunctionalityValid(newFunc)\r\n\r\n    if(!validFunc)\r\n      setValidNewFunc(false)\r\n    else\r\n      setConfirmAddFunc(true)\r\n\r\n  }\r\n\r\n  const buildFunctionality = () : Functionality => ({\r\n    funcName: newFunc, funcId: functionalityId,\r\n    funcdtId: digitalTwinIdChoice , funcUserId, funcdtName: digitalTwinChoice,\r\n  })\r\n\r\n\r\n  const addNewFunctionalityAction = () : Promise<string> => {\r\n\r\n    const functionality : Functionality = buildFunctionality()\r\n\r\n    return new Promise<string>((res:Function, rej:Function)  => {\r\n\r\n        console.log(functionality)\r\n\r\n        createFunctionality(functionality)\r\n\r\n            .then((result: RequestResponseState) => {\r\n            functionalityId = result.extra.lastInsertedId\r\n                res('Functionality created')\r\n            })\r\n\r\n            .catch((e:RequestResponseState) => rej(e.msg))\r\n\r\n    })\r\n  }\r\n\r\n  const confirmFunctionalityCreationActionStates = {\r\n    start: {\r\n      label: `Confirm creation of new functionality: ${newFunc} ?`,\r\n      positiveLabel: 'Ok',\r\n      negativeLabel: 'Cancel',\r\n      state: ConfirmActionStateLabel.start\r\n    },\r\n    executing: {\r\n      label: '',\r\n      state: ConfirmActionStateLabel.executing,\r\n    },\r\n    success: {\r\n      label: 'Functionality Created',\r\n      state: ConfirmActionStateLabel.success,\r\n      positiveLabel: 'Ok'\r\n    },\r\n    error: {\r\n      label: 'Error Creating Functionality',\r\n      state: ConfirmActionStateLabel.error,\r\n      positiveLabel: 'Ok'\r\n    },\r\n  }\r\n\r\n  const confirmActionProps : ConfirmActionProps = {\r\n\r\n    title: 'Add Functionality',\r\n    states: confirmFunctionalityCreationActionStates,\r\n    currentState: confirmFunctionalityCreationActionStates.start,\r\n    onCancel: () => setConfirmAddFunc(false),\r\n    onError: () => setConfirmAddFunc(false),\r\n    onSuccess: () => {\r\n        addFunc()\r\n        setNewFunc('')\r\n    },\r\n    action: addNewFunctionalityAction,\r\n  }\r\n\r\n  const getDataFunctionality = () => functionalities.map((functionality: Functionality) => {\r\n\r\n    return {\r\n          ...functionality,\r\n    }\r\n  })\r\n\r\n  const deleteFunctionalityAction = (func: Functionality) : Promise<any> => {\r\n\r\n    return new Promise(async(res:Function,rej:Function) => {\r\n\r\n        if(!func.funcId) {\r\n            rej('Error')\r\n            return\r\n        }\r\n\r\n        try {\r\n            const response : RequestResponseState = await deleteFunctionality(func.funcId)\r\n            res(response)\r\n          }\r\n\r\n        catch(err) {\r\n            rej(err)\r\n        }\r\n    })\r\n  }\r\n\r\n  //Adicionar Detalhes à Funcionalidade\r\n  const cancelAddDetails = () => setAddDetailsFunc(null);\r\n  const showAddDetails = (func: Functionality) => setAddDetails(func)\r\n  \r\n  //Editar a Funcionalidade\r\n  const cancelEditing = () => setEditingFunc(null)\r\n  const showEditing = (func: Functionality) => setEditingFunc(func)\r\n\r\n  const onGoodEditing = (editingFunctionality: Functionality) => {\r\n      \r\n    const newFunctionalities = functionalities.map((func: Functionality) => {\r\n\r\n    if(func.funcId === editingFunctionality.funcId)\r\n        return {...func, funcName: editingFunctionality.funcName, funcdtId: editingFunctionality.funcdtId}\r\n    return func\r\n\r\n    })\r\n  \r\n    cancelEditing()\r\n    dispatchFunctionalityActions(FunctionalityActions.updateFunctionalities(newFunctionalities))\r\n   }\r\n\r\n  const [digitalTwinChoice, setDigitalTwinChoice] = useState('')\r\n  const [digitalTwinIdChoice, setDigitalTwinIdChoice] = useState(0)\r\n\r\n  const handleDigitalTwinChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setDigitalTwinChoice(event.target.value as string);\r\n    let i = 0;\r\n    while(i < digitalTwins.length)\r\n    {\r\n        if(digitalTwins[i].dtName === (event.target.value as string))\r\n        {\r\n            setDigitalTwinIdChoice(digitalTwins[i].dtId)\r\n        }\r\n        i++;\r\n    }\r\n   \r\n  };\r\n\r\n  const redirectToList = () => setRedirectTo(routes.functionalityDetails)\r\n  \r\n  if(redirectTo !== \"\") \r\n  return <Redirect to={redirectTo} push={true} />\r\n\r\n  return (\r\n    <Navigator title=\"New Digital Twin Functionality\">\r\n     <> \r\n        {error !== ''\r\n                ? <ConfirmAction title='Fetching Functionalities' currentState={errorFetchingFunctionalityState} states={{error: errorFetchingFunctionalityState}} onCancel={onCancel}/>\r\n                : null \r\n        }\r\n         <LazyComponent loaded={!fetching}>\r\n             <>\r\n                {confirmAddFunc \r\n                     ? <ConfirmAction {...confirmActionProps} /> \r\n                     : editingFunc\r\n                         ?  <EditFunctionalityDialog\r\n                             onGood={onGoodEditing}\r\n                             func={editingFunc}\r\n                             onError={cancelEditing}\r\n                             onCancel={cancelEditing} />\r\n                         : null\r\n                 }\r\n                {/* {confirmAddFunc \r\n                     ? <ConfirmAction {...confirmActionProps} /> \r\n                     : editingFunc\r\n                         ?  <AddFunctionalityDetails\r\n                             onGood={onGoodEditing}\r\n                             func={addDetailsFunc}\r\n                             onError={cancelAddDetails}\r\n                             onCancel={cancelAddDetails} />\r\n                         : null\r\n                 } */}\r\n                 <Grid container direction=\"column\" spacing={2}>\r\n                      <Grid item>\r\n                        <JPTable\r\n                            sortedkey=\"funcName\"\r\n                            data={getDataFunctionality()} \r\n                            updateData={updateFunctionalities} \r\n                            indexes={indexes} \r\n                            tName='Functionality'\r\n                            extra={{\r\n                                delete: {\r\n                                    action: deleteFunctionalityAction,\r\n                                    labelKey: 'funcName',\r\n                                    onSuccessDelete: () => {}\r\n                                },\r\n                                edit: {\r\n                                    action: showEditing\r\n                                },\r\n                                details: {\r\n                                    action: redirectToList\r\n                                },\r\n                                add: {\r\n                                    action: showEditing\r\n                                }\r\n                              }} \r\n                        />\r\n                      </Grid>\r\n                    <Grid item xs>\r\n                        New Functionality\r\n                    </Grid>\r\n                     <Grid item> \r\n                        <Grid container item xs>\r\n                            <Grid className={classes.box} spacing={1} item container direction=\"row\">\r\n                            <Grid item xs={4}>\r\n                                <TextField\r\n                                    helperText={!validNewFunc ? NEW_FUNCTIONALITY_RE.toString() : ''}\r\n                                    error={!validNewFunc}\r\n                                    label=\"Insert new functionality name\" \r\n                                    required\r\n                                    onChange={(event) => {\r\n                                        setNewFunc(event.target.value)\r\n                                        if(!validNewFunc)\r\n                                            setValidNewFunc(isFunctionalityValid(event.target.value.trim()))\r\n                                    }}\r\n                                    fullWidth\r\n                                    value={newFunc}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <InputLabel id={`digital-twin-label-${newFunc}`}>Digital Twin</InputLabel>\r\n                                <Select labelId={`digital-twin-label-${newFunc}`} value={digitalTwinChoice} onChange={handleDigitalTwinChoice}>\r\n                                {(digitalTwins || []).map((digitalTwin: any) => {return <MenuItem key={digitalTwin.dtId} value={digitalTwin.dtName}>{digitalTwin.dtName}</MenuItem>})}\r\n                                </Select>\r\n                            </Grid>\r\n                            <Grid container justify=\"flex-end\" spacing={1}>\r\n                             <Grid item>\r\n                                 <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={validateAndCreate}\r\n                                 >\r\n                                    Add Functionality\r\n                                 </Button>\r\n                             </Grid>\r\n                         </Grid>\r\n                        </Grid>\r\n                        </Grid>\r\n                     </Grid>\r\n                 </Grid>\r\n             </>\r\n         </LazyComponent>\r\n     </>\r\n </Navigator>\r\n )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}