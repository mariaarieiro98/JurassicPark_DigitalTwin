{"ast":null,"code":"import { apiRoutes, RouteMethod, fetchRequest } from './api';\nexport const getFunctionBlocks = () => fetchRequest(apiRoutes.getFunctionBlockPath(RouteMethod.get));\nexport const getFunctionBlockCategories = () => fetchRequest(apiRoutes.getFunctionBlockCategoryPath(RouteMethod.get));\nexport const createFunctionBlock = (functionBlock, fileB64) => fetchRequest(apiRoutes.getFunctionBlockPath(RouteMethod.post), false, {\n  functionBlock,\n  fileB64\n});\nexport const createFunctionBlockCategory = categoryName => fetchRequest(apiRoutes.getFunctionBlockCategoryPath(RouteMethod.post), false, {\n  categoryName\n});\nexport const deleteFunctionBlock = id => fetchRequest(apiRoutes.getFunctionBlockPath(RouteMethod.delete, id));\nexport const deleteFunctionBlockCategory = id => fetchRequest(apiRoutes.getFunctionBlockCategoryPath(RouteMethod.delete, id));\nexport const updateFunctionBlock = (functionBlock, fileB64) => fetchRequest(apiRoutes.getFunctionBlockPath(RouteMethod.put, functionBlock.fbId), false, {\n  functionBlock,\n  fileB64\n});\nexport const updateFunctionBlockCategory = (id, categoryName) => fetchRequest(apiRoutes.getFunctionBlockCategoryPath(RouteMethod.put, id), false, {\n  categoryName\n});","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/services/api/function-block.ts"],"names":["apiRoutes","RouteMethod","fetchRequest","getFunctionBlocks","getFunctionBlockPath","get","getFunctionBlockCategories","getFunctionBlockCategoryPath","createFunctionBlock","functionBlock","fileB64","post","createFunctionBlockCategory","categoryName","deleteFunctionBlock","id","delete","deleteFunctionBlockCategory","updateFunctionBlock","put","fbId","updateFunctionBlockCategory"],"mappings":"AACA,SAASA,SAAT,EAA0CC,WAA1C,EAAuDC,YAAvD,QAA2E,OAA3E;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAiCD,YAAY,CAACF,SAAS,CAACI,oBAAV,CAA+BH,WAAW,CAACI,GAA3C,CAAD,CAAvE;AAEP,OAAO,MAAMC,0BAA0B,GAAG,MAA8BJ,YAAY,CAACF,SAAS,CAACO,4BAAV,CAAuCN,WAAW,CAACI,GAAnD,CAAD,CAA7E;AAEP,OAAO,MAAMG,mBAAmB,GAAG,CAACC,aAAD,EAA8BC,OAA9B,KAAkFR,YAAY,CAACF,SAAS,CAACI,oBAAV,CAA+BH,WAAW,CAACU,IAA3C,CAAD,EAAkD,KAAlD,EAAwD;AAACF,EAAAA,aAAD;AAAeC,EAAAA;AAAf,CAAxD,CAA1H;AAEP,OAAO,MAAME,2BAA2B,GAAIC,YAAD,IAAyDX,YAAY,CAACF,SAAS,CAACO,4BAAV,CAAuCN,WAAW,CAACU,IAAnD,CAAD,EAA0D,KAA1D,EAAgE;AAACE,EAAAA;AAAD,CAAhE,CAAzG;AAEP,OAAO,MAAMC,mBAAmB,GAAIC,EAAD,IAA+Cb,YAAY,CAACF,SAAS,CAACI,oBAAV,CAA+BH,WAAW,CAACe,MAA3C,EAAkDD,EAAlD,CAAD,CAAvF;AAEP,OAAO,MAAME,2BAA2B,GAAIF,EAAD,IAA+Cb,YAAY,CAACF,SAAS,CAACO,4BAAV,CAAuCN,WAAW,CAACe,MAAnD,EAA0DD,EAA1D,CAAD,CAA/F;AAEP,OAAO,MAAMG,mBAAmB,GAAG,CAACT,aAAD,EAA8BC,OAA9B,KAAmFR,YAAY,CAACF,SAAS,CAACI,oBAAV,CAA+BH,WAAW,CAACkB,GAA3C,EAA+CV,aAAa,CAACW,IAA7D,CAAD,EAAoE,KAApE,EAA0E;AAACX,EAAAA,aAAD;AAAeC,EAAAA;AAAf,CAA1E,CAA3H;AAEP,OAAO,MAAMW,2BAA2B,GAAG,CAACN,EAAD,EAAaF,YAAb,KAAsEX,YAAY,CAACF,SAAS,CAACO,4BAAV,CAAuCN,WAAW,CAACkB,GAAnD,EAAuDJ,EAAvD,CAAD,EAA4D,KAA5D,EAAkE;AAACF,EAAAA;AAAD,CAAlE,CAAtH","sourcesContent":["import {FunctionBlock, FBCategory} from '../../model'\nimport { apiRoutes, RequestResponseState, RouteMethod, fetchRequest } from './api'\n\nexport const getFunctionBlocks = () : Promise<FunctionBlock[]> => fetchRequest(apiRoutes.getFunctionBlockPath(RouteMethod.get))  \n\nexport const getFunctionBlockCategories = () : Promise<FBCategory[]> => fetchRequest(apiRoutes.getFunctionBlockCategoryPath(RouteMethod.get))  \n\nexport const createFunctionBlock = (functionBlock:FunctionBlock, fileB64: string) : Promise<RequestResponseState> => fetchRequest(apiRoutes.getFunctionBlockPath(RouteMethod.post),false,{functionBlock,fileB64})            \n\nexport const createFunctionBlockCategory = (categoryName:string) : Promise<RequestResponseState> => fetchRequest(apiRoutes.getFunctionBlockCategoryPath(RouteMethod.post),false,{categoryName})            \n\nexport const deleteFunctionBlock = (id:number) : Promise<RequestResponseState> => fetchRequest(apiRoutes.getFunctionBlockPath(RouteMethod.delete,id))            \n\nexport const deleteFunctionBlockCategory = (id:number) : Promise<RequestResponseState> => fetchRequest(apiRoutes.getFunctionBlockCategoryPath(RouteMethod.delete,id))            \n\nexport const updateFunctionBlock = (functionBlock:FunctionBlock, fileB64?: string) : Promise<RequestResponseState> => fetchRequest(apiRoutes.getFunctionBlockPath(RouteMethod.put,functionBlock.fbId),false,{functionBlock,fileB64})            \n\nexport const updateFunctionBlockCategory = (id: number, categoryName: string) : Promise<RequestResponseState> => fetchRequest(apiRoutes.getFunctionBlockCategoryPath(RouteMethod.put,id),false,{categoryName})            "]},"metadata":{},"sourceType":"module"}