{"ast":null,"code":"import { xml2js } from \"xml-js\";\nimport { InOutType } from \"../model\";\nimport { readLocalFile } from \"./main\";\nimport { getFunctionBlocks, getFunctionBlockCategories } from \"../services/api/function-block\";\nexport const getFBfromFbtFile = file => {\n  return new Promise(async (res, rej) => {\n    const result = {\n      fbDescription: '',\n      fbExternalDependencies: [],\n      fbFbcId: 1,\n      fbGeneralCategory: '',\n      fbInputEvents: [],\n      fbOutputEvents: [],\n      fbInputVariables: [],\n      fbOutputVariables: [],\n      fbType: '',\n      fbUserId: 1\n    };\n\n    const rejectNotWellFormed = elementName => {\n      rej('FBT not well formed' + (elementName ? `: Element ${elementName} not well formed` : ''));\n      return false;\n    };\n\n    const getFBTypeElement = fbJs => {\n      let fbElement = null;\n\n      for (let i = 0; i < fbJs.elements.length; i++) {\n        const element = fbJs.elements[i];\n\n        if (element.type === 'element' && element.name === 'FBType') {\n          fbElement = element;\n          break;\n        }\n      }\n\n      return fbElement;\n    };\n\n    const verifyMandatoryElements = fbJs => {\n      if (!fbJs.elements || fbJs.elements.length < 2) return rejectNotWellFormed();\n      const fbElement = getFBTypeElement(fbJs);\n      if (!fbElement) return rejectNotWellFormed();\n      if (!verifyElement(fbElement, 'FBType', ['Name'], 1)) return rejectNotWellFormed('FBType');\n      if (!verifyElement(fbElement.elements[0], 'InterfaceList', [], 4)) return rejectNotWellFormed('InterfaceList');\n      if (!verifyElement(fbElement.elements[0].elements[0], 'EventInputs')) return rejectNotWellFormed('EventInputs');\n      if (!verifyElement(fbElement.elements[0].elements[1], 'EventOutputs')) return rejectNotWellFormed('EventOutputs');\n      if (!verifyElement(fbElement.elements[0].elements[2], 'InputVars')) return rejectNotWellFormed('InputVars');\n      if (!verifyElement(fbElement.elements[0].elements[3], 'OutputVars')) return rejectNotWellFormed('OutputVars');\n      return true;\n    };\n\n    const getVariables = (variableList, inOutYpe) => {\n      const result = {\n        variables: [],\n        varNames: []\n      };\n      if (!variableList.elements) return result;\n\n      for (let i = 0; i < variableList.elements.length; i++) {\n        const variable = variableList.elements[i];\n\n        if (!verifyElement(variable, 'VarDeclaration', ['Name', 'Type'])) {\n          rejectNotWellFormed('VarDeclaration');\n          return;\n        }\n\n        result.variables.push({\n          variableDataType: variable.attributes.Type,\n          variableInoutType: inOutYpe,\n          variableName: variable.attributes.Name,\n          variableOpcua: variable.attributes.OpcUa\n        });\n        result.varNames.push(variable.attributes.Name);\n      }\n\n      return result;\n    };\n\n    const getEvents = (eventList, inOutYpe, variableNames) => {\n      const result = [];\n      if (!eventList.elements) return result;\n\n      for (let i = 0; i < eventList.elements.length; i++) {\n        const event = eventList.elements[i];\n\n        if (!verifyElement(event, 'Event', ['Name', 'Type'])) {\n          rejectNotWellFormed('Event');\n          return;\n        }\n\n        const eventVars = [];\n\n        if (event.elements) {\n          for (let j = 0; j < event.elements.length; j++) {\n            const eventVariable = event.elements[j];\n\n            if (!verifyElement(eventVariable, 'With', ['Var']) || !variableNames.includes(eventVariable.attributes.Var)) {\n              rejectNotWellFormed('With');\n              return;\n            }\n\n            eventVars.push({\n              evEventName: event.attributes.Name,\n              evVariableName: eventVariable.attributes.Var\n            });\n          }\n        }\n\n        result.push({\n          eventName: event.attributes.Name,\n          eventType: event.attributes.Type,\n          eventInoutType: inOutYpe,\n          eventVariables: eventVars,\n          eventOpcua: event.attributes.OpcUa\n        });\n      }\n\n      return result;\n    };\n\n    try {\n      const fbtString = await readLocalFile(file);\n      const fbJs = xml2js(fbtString);\n      if (!verifyMandatoryElements(fbJs)) return;\n      const fbTypeElement = getFBTypeElement(fbJs);\n      result.fbType = fbTypeElement.attributes.Name;\n      result.fbGeneralCategory = fbTypeElement.attributes.OpcUa;\n      const fbInterfaceListElement = fbTypeElement.elements[0];\n      const fbInputVarsElement = fbInterfaceListElement.elements[2];\n      const fbOutputVarsElement = fbInterfaceListElement.elements[3];\n      const fbEventInputsElement = fbInterfaceListElement.elements[0];\n      const fbEventOutputsElement = fbInterfaceListElement.elements[1];\n      const fbInputVariables = getVariables(fbInputVarsElement, InOutType.in);\n      const fbOutputVariables = getVariables(fbOutputVarsElement, InOutType.out);\n      if (!fbInputVariables || !fbOutputVariables) return;\n      const fbInputEvents = getEvents(fbEventInputsElement, InOutType.in, fbInputVariables.varNames);\n      const fbOutputEvents = getEvents(fbEventOutputsElement, InOutType.out, fbOutputVariables.varNames);\n      if (!fbInputEvents || !fbOutputEvents) return;\n      result.fbInputVariables = fbInputVariables.variables;\n      result.fbOutputVariables = fbOutputVariables.variables;\n      result.fbInputEvents = fbInputEvents;\n      result.fbOutputEvents = fbOutputEvents;\n      res(result);\n    } catch (err) {\n      console.error(err);\n      rej('Error reading fbt file');\n    }\n  });\n};\n\nconst verifyElement = (element, name, attributes, elementsLength, type = 'element') => {\n  if (!(element.type === type)) return false;\n  if (!(element.name === name)) return false;\n\n  if (!!elementsLength) {\n    if (!element.elements) return false;\n    if (element.elements.length !== elementsLength) return false;\n  }\n\n  if (!!attributes && !!attributes.length) {\n    if (!element.attributes) return false;\n\n    for (let i = 0; i < attributes.length; i++) {\n      if (!(attributes[i] in element.attributes)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nexport const getOrDownloadFunctionBlocks = fbs => {\n  return new Promise((res, rej) => {\n    if (fbs.length) res(fbs);else getFunctionBlocks().then(result => res(result)).catch(error => rej(error));\n  });\n};\nexport const getOrDownloadFunctionBlockCategories = fbCategories => {\n  return new Promise((res, rej) => {\n    if (fbCategories.length) res(fbCategories);else getFunctionBlockCategories().then(result => res(result)).catch(error => rej(error));\n  });\n};","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/utils/functionBlock.ts"],"names":["xml2js","InOutType","readLocalFile","getFunctionBlocks","getFunctionBlockCategories","getFBfromFbtFile","file","Promise","res","rej","result","fbDescription","fbExternalDependencies","fbFbcId","fbGeneralCategory","fbInputEvents","fbOutputEvents","fbInputVariables","fbOutputVariables","fbType","fbUserId","rejectNotWellFormed","elementName","getFBTypeElement","fbJs","fbElement","i","elements","length","element","type","name","verifyMandatoryElements","verifyElement","getVariables","variableList","inOutYpe","variables","varNames","variable","push","variableDataType","attributes","Type","variableInoutType","variableName","Name","variableOpcua","OpcUa","getEvents","eventList","variableNames","event","eventVars","j","eventVariable","includes","Var","evEventName","evVariableName","eventName","eventType","eventInoutType","eventVariables","eventOpcua","fbtString","fbTypeElement","fbInterfaceListElement","fbInputVarsElement","fbOutputVarsElement","fbEventInputsElement","fbEventOutputsElement","in","out","err","console","error","elementsLength","getOrDownloadFunctionBlocks","fbs","then","catch","getOrDownloadFunctionBlockCategories","fbCategories"],"mappings":"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","sourcesContent":["import { xml2js, Element } from \"xml-js\"\nimport { FunctionBlock, InOutType, Variable, Event, EventVariable, FBCategory, Functionality } from \"../model\"\nimport { readLocalFile } from \"./main\"\nimport { getFunctionBlocks, getFunctionBlockCategories } from \"../services/api/function-block\"\nimport { RequestResponseState } from \"../services/api/api\"\n\nexport const getFBfromFbtFile = (file: File) : Promise<FunctionBlock> => {\n\n    return new Promise(async (res:Function, rej:Function) => {\n\n        const result : FunctionBlock = {\n            fbDescription:'',\n            fbExternalDependencies: [],\n            fbFbcId: 1,\n            fbGeneralCategory: '',\n            fbInputEvents: [],\n            fbOutputEvents: [],\n            fbInputVariables: [],\n            fbOutputVariables: [],\n            fbType: '',\n            fbUserId: 1\n        }\n\n        const rejectNotWellFormed = (elementName?: string) =>  {\n            rej('FBT not well formed' + (elementName ? `: Element ${elementName} not well formed` : ''))\n            return false\n        }\n\n        const getFBTypeElement = (fbJs: any) => {\n\n            let fbElement = null\n            for(let i = 0; i < fbJs.elements.length; i++) {\n                const element = fbJs.elements[i]\n                if(element.type === 'element' && element.name === 'FBType') {\n                    fbElement = element\n                    break\n                }\n            }\n            return fbElement\n\n        }\n\n        const verifyMandatoryElements = (fbJs: any) : boolean =>  {\n\n            if(!fbJs.elements || fbJs.elements.length < 2) return rejectNotWellFormed()\n\n            const fbElement = getFBTypeElement(fbJs)\n\n            if(!fbElement) return rejectNotWellFormed()\n\n            if(!(verifyElement(fbElement,'FBType',['Name'],1))) return rejectNotWellFormed('FBType')\n            if(!verifyElement(fbElement.elements[0],'InterfaceList',[],4)) return rejectNotWellFormed('InterfaceList')\n            if(!verifyElement(fbElement.elements[0].elements[0],'EventInputs')) return rejectNotWellFormed('EventInputs')\n            if(!verifyElement(fbElement.elements[0].elements[1],'EventOutputs')) return rejectNotWellFormed('EventOutputs')\n            if(!verifyElement(fbElement.elements[0].elements[2],'InputVars')) return rejectNotWellFormed('InputVars')\n            if(!verifyElement(fbElement.elements[0].elements[3],'OutputVars')) return rejectNotWellFormed('OutputVars')\n\n            return true\n\n        }\n\n        const getVariables = (variableList: any, inOutYpe:InOutType) : {variables:Variable[], varNames: string[]} | undefined => {\n\n            const result : {variables:Variable[], varNames: string[]} = {variables:[], varNames:[]}\n\n            if(!variableList.elements) return result\n\n            for(let i = 0; i < variableList.elements.length; i++) {\n\n                const variable = variableList.elements[i]\n                if(!verifyElement(variable,'VarDeclaration',['Name','Type'])) {\n                    rejectNotWellFormed('VarDeclaration')\n                    return\n                }\n                result.variables.push({\n                    variableDataType: variable.attributes.Type, \n                    variableInoutType: inOutYpe, \n                    variableName: variable.attributes.Name,\n                    variableOpcua: variable.attributes.OpcUa\n                })\n\n                result.varNames.push(variable.attributes.Name)\n                \n            }\n\n            return result\n\n        } \n\n        const getEvents = (eventList: any, inOutYpe:InOutType, variableNames: string[]) : Event[] | undefined => {\n\n            const result : Event[] = []\n            if(!eventList.elements) return result\n\n            for(let i = 0; i < eventList.elements.length; i++) {\n\n                const event = eventList.elements[i]\n                if(!verifyElement(event,'Event',['Name','Type'])) {\n                    rejectNotWellFormed('Event')\n                    return\n                }\n\n                const eventVars : EventVariable[] = []\n\n                if(event.elements) {\n                    \n                    for(let j = 0; j < event.elements.length; j++) {\n\n                        const eventVariable = event.elements[j]\n                        if(!verifyElement(eventVariable,'With',['Var']) || !variableNames.includes(eventVariable.attributes.Var)) {\n                            rejectNotWellFormed('With')\n                            return\n                        }\n                        eventVars.push({\n                            evEventName: event.attributes.Name,\n                            evVariableName: eventVariable.attributes.Var\n                        })\n\n                    }\n                }\n\n                result.push({\n                    eventName: event.attributes.Name, \n                    eventType: event.attributes.Type, \n                    eventInoutType: inOutYpe,\n                    eventVariables: eventVars,\n                    eventOpcua: event.attributes.OpcUa\n                })\n                \n            }\n\n            return result\n\n        } \n\n        try {\n\n            const fbtString = await readLocalFile(file)\n            const fbJs = xml2js(fbtString)\n\n            if(!verifyMandatoryElements(fbJs)) return\n            \n            const fbTypeElement = getFBTypeElement(fbJs)\n\n            result.fbType = fbTypeElement.attributes.Name\n            result.fbGeneralCategory = fbTypeElement.attributes.OpcUa\n\n            const fbInterfaceListElement = fbTypeElement.elements[0]\n            const fbInputVarsElement = fbInterfaceListElement.elements[2]\n            const fbOutputVarsElement = fbInterfaceListElement.elements[3]\n            const fbEventInputsElement = fbInterfaceListElement.elements[0]\n            const fbEventOutputsElement = fbInterfaceListElement.elements[1]\n\n            const fbInputVariables = getVariables(fbInputVarsElement, InOutType.in)\n            const fbOutputVariables = getVariables(fbOutputVarsElement, InOutType.out)\n\n            if(!fbInputVariables || !fbOutputVariables) return \n            \n            const fbInputEvents = getEvents(fbEventInputsElement, InOutType.in,fbInputVariables.varNames)\n            const fbOutputEvents = getEvents(fbEventOutputsElement, InOutType.out,fbOutputVariables.varNames)\n\n            if(!fbInputEvents || !fbOutputEvents) return \n            \n            result.fbInputVariables = fbInputVariables.variables\n            result.fbOutputVariables = fbOutputVariables.variables\n            result.fbInputEvents = fbInputEvents\n            result.fbOutputEvents = fbOutputEvents\n\n            res(result)\n\n        }\n\n        catch(err) {\n            console.error(err)\n            rej('Error reading fbt file')\n        }\n\n    })\n\n}\n\n\n\nconst verifyElement = (element: Element,name: string, attributes?: string[], elementsLength?: number, type: 'element' | 'doctype' = 'element') : boolean => {\n    \n    if(!(element.type === type)) return false\n    if(!(element.name === name)) return false\n    \n    if(!!elementsLength) {\n\n        if(!element.elements) return false\n        if(element.elements.length !== elementsLength) return false\n    \n    }\n\n    if(!!attributes && !!attributes.length) {\n        \n        if(!element.attributes) return false\n        \n        for(let i = 0; i < attributes.length; i++) {\n            if(!(attributes[i] in element.attributes)) {\n                return false\n            }\n        }\n        \n    }\n\n    return true\n        \n}\n\nexport const getOrDownloadFunctionBlocks = (fbs: FunctionBlock[]) :  Promise<FunctionBlock[]> => {\n\n    return new Promise((res: Function, rej:Function) => {\n\n        if(fbs.length) \n            res(fbs)\n        else \n            getFunctionBlocks()\n                .then((result:FunctionBlock[]) => res(result))\n                .catch((error: RequestResponseState) => rej(error))\n    })\n\n}\n\nexport const getOrDownloadFunctionBlockCategories = (fbCategories: FBCategory[]) :  Promise<FBCategory[]> => {\n\n    return new Promise((res: Function, rej:Function) => {\n\n        if(fbCategories.length) \n            res(fbCategories)\n        else \n            getFunctionBlockCategories()\n                .then((result:FBCategory[]) => res(result))\n                .catch((error: RequestResponseState) => rej(error))\n    })\n\n}\n\n"]},"metadata":{},"sourceType":"module"}