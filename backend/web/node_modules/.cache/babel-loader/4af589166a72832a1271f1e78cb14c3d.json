{"ast":null,"code":"import socketIOClient from 'socket.io-client';\nexport let SOCKET_EVENT;\n\n(function (SOCKET_EVENT) {\n  SOCKET_EVENT[\"UPDATED_SC_EVENT\"] = \"`${}`smart-component-updated\";\n  SOCKET_EVENT[\"EDITED_FBI_EVENT\"] = \"smart-component-fbi-updated\";\n  SOCKET_EVENT[\"INITIAL_DATA\"] = \"initial-data\";\n  SOCKET_EVENT[\"EDITED_MVI_EVENT\"] = \"smart-component-mvi-updated\";\n})(SOCKET_EVENT || (SOCKET_EVENT = {}));\n\nexport class SocketConnection {\n  constructor(namespace) {\n    var _process$env$REACT_AP, _process$env$REACT_AP2;\n\n    this.host = void 0;\n    this.port = void 0;\n    this.namespace = void 0;\n    this.base = void 0;\n    this.socket = undefined;\n    this.host = (_process$env$REACT_AP = process.env.REACT_APP_BACKEND_HOST) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'localhost';\n    this.port = parseInt((_process$env$REACT_AP2 = process.env.REACT_APP_SOCKET_PORT) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : '3500');\n    this.namespace = namespace;\n    this.base = `${this.host}:${this.port}${this.namespace}`;\n  }\n\n  static getSmartComponentsNamespace() {\n    return this.resources.smartComponents;\n  }\n\n  static getSmartComponentNamespace(scId) {\n    return `${this.resources.smartComponents}/${scId}`;\n  }\n\n  connect(onConnect, onDisconnect, onInitialData, onError, onRecconected, onReconnecting) {\n    this.socket = socketIOClient(this.base);\n    this.socket.on(\"connect\", () => {\n      onConnect();\n    });\n    this.socket.on(\"disconnect\", () => {\n      onDisconnect();\n    });\n    this.socket.on(\"connect_error\", error => {\n      console.error(error);\n      if (onError) onError(error);\n    });\n    this.socket.on(\"error\", error => {\n      console.error(error);\n      console.error(\"error\");\n      if (onError) onError(error);\n    });\n    this.socket.on(\"connect_timeout\", error => {\n      console.error(error);\n      console.error(\"connect_timeout\");\n      if (onError) onError(error);\n    });\n    this.socket.on(SOCKET_EVENT.INITIAL_DATA, data => {\n      if (onInitialData) onInitialData(data);\n    });\n    this.socket.on(\"reconnect\", attemptNumber => {\n      console.log('reconnected at ' + attemptNumber);\n      if (onRecconected) onRecconected();\n    });\n    this.socket.on(\"reconnecting\", attemptNumber => {\n      if (onReconnecting) onReconnecting(attemptNumber);\n    });\n  }\n\n  disconnect() {\n    var _this$socket, _this$socket2;\n\n    (_this$socket = this.socket) === null || _this$socket === void 0 ? void 0 : _this$socket.removeAllListeners();\n    (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.disconnect();\n  }\n\n  addListener(event, listener) {\n    var _this$socket3;\n\n    (_this$socket3 = this.socket) === null || _this$socket3 === void 0 ? void 0 : _this$socket3.on(event, listener);\n  }\n\n}\nSocketConnection.resources = {\n  smartComponents: '/smart-component'\n};","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/services/socket/socket.ts"],"names":["socketIOClient","SOCKET_EVENT","SocketConnection","constructor","namespace","host","port","base","socket","undefined","process","env","REACT_APP_BACKEND_HOST","parseInt","REACT_APP_SOCKET_PORT","getSmartComponentsNamespace","resources","smartComponents","getSmartComponentNamespace","scId","connect","onConnect","onDisconnect","onInitialData","onError","onRecconected","onReconnecting","on","error","console","INITIAL_DATA","data","attemptNumber","log","disconnect","removeAllListeners","addListener","event","listener"],"mappings":"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","sourcesContent":["import socketIOClient from 'socket.io-client'\n\nexport enum SOCKET_EVENT {\n    UPDATED_SC_EVENT = '`${}`smart-component-updated',\n    EDITED_FBI_EVENT = \"smart-component-fbi-updated\",\n    INITIAL_DATA = \"initial-data\",\n    EDITED_MVI_EVENT = \"smart-component-mvi-updated\"\n}\n\nexport class SocketConnection {\n    \n    private host : string \n    private port? : number \n    private namespace : string\n    private base : string\n    private socket? : SocketIOClient.Socket = undefined\n    \n    static resources = {\n        smartComponents: '/smart-component'\n    }\n\n    constructor(namespace:string) {\n        this.host = process.env.REACT_APP_BACKEND_HOST ?? 'localhost'\n        this.port = parseInt(process.env.REACT_APP_SOCKET_PORT ?? '3500') \n        this.namespace = namespace\n        this.base = `${this.host}:${this.port}${this.namespace}`   \n    }\n\n    static getSmartComponentsNamespace() {\n        return this.resources.smartComponents\n    }\n\n    static getSmartComponentNamespace(scId: number) {\n        return `${this.resources.smartComponents}/${scId}`\n    }\n\n    public connect(onConnect: () => void, onDisconnect: () => void, onInitialData?: (data:any) => void, onError?: (error:any) => void, onRecconected?: () => void, onReconnecting?: (time:number) => void) {\n\n        this.socket = socketIOClient(this.base)\n        this.socket.on(\"connect\", () => {\n            onConnect()\n        })\n\n        this.socket.on(\"disconnect\", () => {\n            onDisconnect()\n        })\n\n        this.socket.on(\"connect_error\", (error:any) => {\n            console.error(error) \n            if(onError) onError(error)\n        })\n\n        this.socket.on(\"error\", (error:any) => {\n            console.error(error) \n            console.error(\"error\") \n            if(onError) onError(error)\n        })\n\n        this.socket.on(\"connect_timeout\", (error:any) => {\n            console.error(error) \n            console.error(\"connect_timeout\")\n            if(onError) onError(error) \n        })\n\n        this.socket.on(SOCKET_EVENT.INITIAL_DATA, (data:any) => {\n            if(onInitialData) onInitialData(data)\n        })\n\n        this.socket.on(\"reconnect\", (attemptNumber: number) => {\n            console.log('reconnected at ' + attemptNumber)\n            if(onRecconected) onRecconected()\n        })\n\n        this.socket.on(\"reconnecting\", (attemptNumber: number) => {\n            if(onReconnecting) onReconnecting(attemptNumber)\n        })\n\n    }\n\n    public disconnect() {\n        this.socket?.removeAllListeners()\n        this.socket?.disconnect()\n    }\n\n    public addListener(event: SOCKET_EVENT, listener:(data:any) => void) {\n        this.socket?.on(event,listener)\n    }\n\n} "]},"metadata":{},"sourceType":"module"}