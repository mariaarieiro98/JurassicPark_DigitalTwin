{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/NewDigitalTwin.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Navigator } from '../templates/Navigator/Navigator';\nimport { Redirect } from 'react-router-dom';\nimport { routes } from '../../App';\nimport { ConfirmActionStateLabel } from '../templates/ConfirmAction/ConfirmAction';\nimport { setTimeout } from 'timers';\nimport { DigitalTwinForm } from './DigitalTwinForm';\nimport { useMountEffect } from '../../utils/main';\nimport { useStore } from '../templates/Store/Store';\nimport { DigitalTwinActions } from '../../redux/actions';\nimport { getOrDownloadDigitalTwins } from '../../utils/digitalTwins';\nimport { createDigitalTwin } from '../../services/api/digital-twin';\nimport { createAssociatedSmartComponents } from '../../services/api/digital-twin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dtUserId = 1;\nexport const NewDigitalTwin = () => {\n  _s();\n\n  useMountEffect(() => {\n    getOrDownloadDigitalTwins(digitalTwins).then(result => {\n      dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(result));\n    }).catch(e => {\n      console.error(e);\n    });\n  });\n  const {\n    data: digitalTwins,\n    dispatchAction: dispatchDigitalTwinActions\n  } = useStore('digitalTwins');\n  const [redirectTo, setRedirectTo] = useState(\"\");\n  const [dtName, setDtName] = useState('');\n  const [associatedSc, setAssociatedSc] = useState([]);\n  let dtId = 1;\n\n  const redirectToList = () => setRedirectTo(routes.digitalTwinMonitoring);\n\n  const buildDigitalTwin = () => ({\n    dtName,\n    dtId,\n    dtUserId\n  });\n\n  const redirectToListAndUpdateLocal = () => {\n    dispatchDigitalTwinActions(DigitalTwinActions.addDigitalTwin(buildDigitalTwin()));\n    redirectToList();\n  };\n\n  const buildAssociatedSmartComponent = (associatedSc, dtId, i) => ({\n    scName: associatedSc[i].scName,\n    scDtId: dtId,\n    associatedScUserId: 1\n  });\n\n  const createDigitalTwinAction = () => {\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        if (associatedSc.length === 0) {\n          createDigitalTwin(dtName).then(result => {\n            dtId = result.extra.lastInsertedId;\n            res('Digital Twin created');\n          }).catch(e => rej(e.msg));\n        } else {\n          createDigitalTwin(dtName).then(result => {\n            dtId = result.extra.lastInsertedId;\n            res('Digital Twin created');\n            let i = 0;\n\n            while (associatedSc.length) {\n              const choosenAssociatedSc = buildAssociatedSmartComponent(associatedSc, dtId, i);\n              i++;\n              createAssociatedSmartComponents(choosenAssociatedSc).then(r => {\n                let idAssociatedSmartComponent = r.extra.lastInsertedId;\n              }).catch(e => rej(e.msg));\n            }\n          }).catch(e => rej(e.msg));\n        }\n      });\n    });\n  };\n\n  if (redirectTo !== \"\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: redirectTo,\n    push: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Navigator, {\n    title: \"New Digital Twin\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DigitalTwinForm, {\n        dtName: {\n          dtName,\n          setDtName\n        },\n        associatedSc: {\n          associatedSc,\n          setAssociatedSc\n        },\n        cancel: {\n          action: redirectToList,\n          label: 'Cancel'\n        },\n        confirmDialog: {\n          buttonTitle: 'Confirm',\n          title: 'Creating Digital Twin',\n          initialState: ConfirmActionStateLabel.executing,\n          action: createDigitalTwinAction,\n          onSuccess: redirectToListAndUpdateLocal,\n          success: {\n            label: '',\n            positiveLabel: 'Ok'\n          },\n          error: {\n            label: '',\n            positiveLabel: 'Ok'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewDigitalTwin, \"PtMjUH120ChgwQDzhd2Hrc+qx1E=\", false, function () {\n  return [useMountEffect, useStore];\n});\n\n_c = NewDigitalTwin;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewDigitalTwin\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/NewDigitalTwin.tsx"],"names":["useState","Navigator","Redirect","routes","ConfirmActionStateLabel","setTimeout","DigitalTwinForm","useMountEffect","useStore","DigitalTwinActions","getOrDownloadDigitalTwins","createDigitalTwin","createAssociatedSmartComponents","dtUserId","NewDigitalTwin","digitalTwins","then","result","dispatchDigitalTwinActions","updateDigitalTwins","catch","e","console","error","data","dispatchAction","redirectTo","setRedirectTo","dtName","setDtName","associatedSc","setAssociatedSc","dtId","redirectToList","digitalTwinMonitoring","buildDigitalTwin","redirectToListAndUpdateLocal","addDigitalTwin","buildAssociatedSmartComponent","i","scName","scDtId","associatedScUserId","createDigitalTwinAction","Promise","res","rej","length","extra","lastInsertedId","msg","choosenAssociatedSc","r","idAssociatedSmartComponent","action","label","buttonTitle","title","initialState","executing","onSuccess","success","positiveLabel"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { Navigator } from '../templates/Navigator/Navigator'\r\nimport { DigitalTwin, AssociatedSmartComponent, SmartComponent } from '../../model/index'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { routes } from '../../App'\r\nimport { ConfirmActionStateLabel } from '../templates/ConfirmAction/ConfirmAction'\r\nimport { RequestResponseState } from '../../services/api/api'\r\nimport { setTimeout } from 'timers'\r\nimport { DigitalTwinForm } from './DigitalTwinForm'\r\nimport { useMountEffect } from '../../utils/main'\r\nimport { useStore } from '../templates/Store/Store'\r\nimport { DigitalTwinActions } from '../../redux/actions'\r\nimport { getOrDownloadDigitalTwins } from '../../utils/digitalTwins'\r\nimport { createDigitalTwin } from '../../services/api/digital-twin'\r\nimport { createAssociatedSmartComponents } from '../../services/api/digital-twin'\r\n\r\nconst dtUserId = 1\r\n\r\nexport const NewDigitalTwin = () => {\r\n\r\n  useMountEffect(() => {\r\n    \r\n    getOrDownloadDigitalTwins(digitalTwins)\r\n      .then((result: DigitalTwin[]) => {\r\n          dispatchDigitalTwinActions(DigitalTwinActions.updateDigitalTwins(result))\r\n      })\r\n      .catch((e:RequestResponseState) => {\r\n          console.error(e)\r\n      })\r\n\r\n  })\r\n\r\n  const {data: digitalTwins, dispatchAction:dispatchDigitalTwinActions} = useStore('digitalTwins')\r\n  \r\n  const [redirectTo, setRedirectTo] : [string, Function] = useState(\"\")\r\n\r\n  const [dtName,setDtName] : [string,Function] = useState('')\r\n  const [associatedSc,setAssociatedSc] : [SmartComponent[],Function] = useState([])\r\n\r\n  let dtId = 1\r\n\r\n  const redirectToList = () => setRedirectTo(routes.digitalTwinMonitoring)\r\n\r\n  const buildDigitalTwin = () : DigitalTwin => ({\r\n    dtName, dtId,\r\n    dtUserId,\r\n  })\r\n\r\n  const redirectToListAndUpdateLocal = () => {\r\n    dispatchDigitalTwinActions(DigitalTwinActions.addDigitalTwin(buildDigitalTwin()))\r\n    redirectToList()\r\n  } \r\n  \r\n  const buildAssociatedSmartComponent = (associatedSc : SmartComponent[], dtId: number, i: number) : AssociatedSmartComponent => ({\r\n    scName: associatedSc[i].scName, scDtId: dtId,\r\n    associatedScUserId: 1\r\n  })\r\n  \r\n  const createDigitalTwinAction = () : Promise<string> => {\r\n    \r\n    return new Promise<string>((res:Function, rej:Function)  => {\r\n\r\n      setTimeout(() => {\r\n\r\n        if(associatedSc.length === 0){\r\n          \r\n          createDigitalTwin(dtName)\r\n          .then((result: RequestResponseState) => {\r\n            dtId = result.extra.lastInsertedId\r\n            res('Digital Twin created')\r\n          })\r\n\r\n          .catch((e:RequestResponseState) => rej(e.msg))\r\n\r\n        }\r\n\r\n        else {\r\n\r\n      \r\n          createDigitalTwin(dtName)\r\n          .then((result:RequestResponseState) => {\r\n            dtId = result.extra.lastInsertedId\r\n            res('Digital Twin created')\r\n            let i = 0  \r\n            while(associatedSc.length){         \r\n            const choosenAssociatedSc : AssociatedSmartComponent = buildAssociatedSmartComponent(associatedSc,dtId,i)\r\n            i++\r\n            createAssociatedSmartComponents(choosenAssociatedSc)\r\n            .then((r:RequestResponseState) => {\r\n              let idAssociatedSmartComponent = r.extra.lastInsertedId\r\n            }) \r\n            .catch((e:RequestResponseState) => rej(e.msg))\r\n            }\r\n          })\r\n          .catch((e:RequestResponseState) => rej(e.msg))\r\n                    \r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  if(redirectTo !== \"\") \r\n    return <Redirect to={redirectTo} push={true} />\r\n  \r\n  return (\r\n    <Navigator title=\"New Digital Twin\">\r\n      <>\r\n      <DigitalTwinForm \r\n        dtName={{dtName, setDtName}}\r\n        associatedSc = {{associatedSc, setAssociatedSc}}\r\n        cancel={{action: redirectToList, label: 'Cancel'}}\r\n        confirmDialog={{\r\n          buttonTitle: 'Confirm',\r\n          title: 'Creating Digital Twin',\r\n          initialState: ConfirmActionStateLabel.executing,\r\n          action: createDigitalTwinAction,\r\n          onSuccess: redirectToListAndUpdateLocal,\r\n          success: {\r\n            label: '',\r\n            positiveLabel: 'Ok'\r\n          },\r\n          error: {\r\n            label: '',\r\n            positiveLabel: 'Ok'\r\n          },\r\n        }}\r\n      />\r\n      </>\r\n    </Navigator>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}