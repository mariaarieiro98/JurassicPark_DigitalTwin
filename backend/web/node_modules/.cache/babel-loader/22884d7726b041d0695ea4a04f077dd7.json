{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/SmartComponents/List/List.tsx\";\nimport React, { useState } from 'react';\nimport { Navigator } from '../../templates/Navigator/Navigator';\nimport { LazyComponent } from '../../templates/LazyComponent/LazyComponent';\nimport { JPTable } from '../../templates/Table/JPTable';\nimport { useMountEffect } from '../../../utils/main';\nimport { useSmartComponentStyles } from '../style';\nimport { Box, Button } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport { Visibility } from '@material-ui/icons';\nimport { SocketConnection, SOCKET_EVENT } from '../../../services/socket/socket';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../../templates/ConfirmAction/ConfirmAction';\nexport const SmartComponentList = () => {\n  const classes = useSmartComponentStyles();\n  const socket = new SocketConnection(SocketConnection.getSmartComponentsNamespace());\n  const [error, setError] = useState('');\n  const [fetching, setFetching] = useState(true);\n  const [smartComponents, setSmartComponents] = useState([]);\n  const [redirectToDetail, setRedirectToDetail] = useState(-1);\n  const indexes = [{\n    label: 'Name',\n    key: 'scName'\n  }, {\n    label: 'Address',\n    key: 'scAddress'\n  }, {\n    label: 'Port',\n    key: 'scPort'\n  }, {\n    label: 'Type',\n    key: 'scType'\n  }, {\n    label: 'CPU %',\n    key: 'cpuPercent'\n  }, {\n    label: 'MEM %',\n    key: 'memPercentage'\n  }, {\n    label: 'State',\n    key: 'scState'\n  }, {\n    label: '',\n    key: 'state'\n  }];\n\n  const onDisconnect = () => {\n    setError(\"Server error\");\n    setFetching(false);\n    setSmartComponents([]);\n  };\n\n  const onInitialData = data => {\n    updateSmartObjects(data.result);\n    setFetching(false);\n  };\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      socket.connect(() => {}, onDisconnect, onInitialData);\n      socket.addListener(SOCKET_EVENT.UPDATED_SC_EVENT, data => updateSmartComponent(data.sc));\n    }, 0);\n  }, () => socket === null || socket === void 0 ? void 0 : socket.disconnect());\n\n  const updateSmartObjects = scs => setSmartComponents(getComponentsWithStateData(scs));\n\n  const updateSmartComponent = sc => {\n    setSmartComponents(prevComponents => {\n      let newSc = true;\n      const newComponents = getComponentsWithStateData(prevComponents.map(oSc => {\n        if (oSc.scId === sc.scId) {\n          newSc = false;\n          return sc;\n        }\n\n        return oSc;\n      }));\n      if (newSc) return [...prevComponents, addStateAndDetialData(sc)];\n      return newComponents;\n    });\n  };\n\n  const getComponentsWithStateData = scs => {\n    return scs.map(sc => addStateAndDetialData(sc));\n  };\n\n  const addStateAndDetialData = sc => {\n    return { ...sc,\n      state: {\n        key: sc.scState,\n        data: /*#__PURE__*/React.createElement(Box, {\n          className: `${classes.onLineState} ${sc.scState === 'connected' ? classes.onLineStateOn : classes.onLineStateOff}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 27\n          }\n        })\n      },\n      detail: {\n        key: 'detail',\n        data: /*#__PURE__*/React.createElement(Button, {\n          variant: \"text\",\n          size: \"small\",\n          onClick: redirectToDetailAction(sc.scId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Visibility, {\n          fontSize: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 105\n          }\n        }))\n      }\n    };\n  };\n\n  const redirectToDetailAction = id => () => setRedirectToDetail(id);\n\n  const confirmActionStates = {\n    error: {\n      label: error,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: 'Ok'\n    }\n  };\n  const confirmActionProps = {\n    title: 'Loading Smart-Component',\n    states: confirmActionStates,\n    currentState: confirmActionStates.error,\n    onCancel: () => setError('')\n  };\n  if (redirectToDetail !== -1) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/smart-component/${redirectToDetail}`,\n    push: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 16\n    }\n  });\n  return /*#__PURE__*/React.createElement(Navigator, {\n    title: \"Smart Components\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LazyComponent, {\n    loaded: !fetching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, error !== '' ? /*#__PURE__*/React.createElement(ConfirmAction, Object.assign({}, confirmActionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 27\n    }\n  })) : /*#__PURE__*/React.createElement(JPTable, {\n    data: smartComponents,\n    updateData: updateSmartObjects,\n    indexes: indexes,\n    sortedkey: \"scName\",\n    tName: \"Function Block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 27\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/SmartComponents/List/List.tsx"],"names":["React","useState","Navigator","LazyComponent","JPTable","useMountEffect","useSmartComponentStyles","Box","Button","Redirect","Visibility","SocketConnection","SOCKET_EVENT","ConfirmActionStateLabel","ConfirmAction","SmartComponentList","classes","socket","getSmartComponentsNamespace","error","setError","fetching","setFetching","smartComponents","setSmartComponents","redirectToDetail","setRedirectToDetail","indexes","label","key","onDisconnect","onInitialData","data","updateSmartObjects","result","setTimeout","connect","addListener","UPDATED_SC_EVENT","updateSmartComponent","sc","disconnect","scs","getComponentsWithStateData","prevComponents","newSc","newComponents","map","oSc","scId","addStateAndDetialData","state","scState","onLineState","onLineStateOn","onLineStateOff","detail","redirectToDetailAction","id","confirmActionStates","positiveLabel","confirmActionProps","title","states","currentState","onCancel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Navigator } from '../../templates/Navigator/Navigator'\nimport { LazyComponent } from '../../templates/LazyComponent/LazyComponent'\nimport { JPTable } from '../../templates/Table/JPTable'\nimport { SmartComponent } from '../../../model/index'\nimport { useMountEffect } from '../../../utils/main'\nimport { useSmartComponentStyles } from '../style'\nimport { Box, Button } from '@material-ui/core'\nimport { Redirect } from 'react-router-dom'\nimport {Visibility} from '@material-ui/icons'\nimport { SocketConnection, SOCKET_EVENT } from '../../../services/socket/socket'\nimport { ConfirmActionStateLabel, ConfirmActionProps, ConfirmAction } from '../../templates/ConfirmAction/ConfirmAction'\n\ninterface SmartComponentWithDataState extends SmartComponent {\n    state: {\n        key:string | undefined\n        data: React.ReactElement\n    },\n    detail: {\n        key: 'detail'\n        data: React.ReactElement\n    }\n}\n\n\nexport const SmartComponentList = () : React.ReactElement => {\n    \n    const classes = useSmartComponentStyles()\n    \n    const socket : SocketConnection = new SocketConnection(SocketConnection.getSmartComponentsNamespace())\n    \n    const [error,setError] : [string,Function] = useState('')\n    const [fetching,setFetching] : [boolean, Function] = useState(true)\n\n    const [smartComponents,setSmartComponents] : [SmartComponentWithDataState[],Function] = useState([])\n\n    const [redirectToDetail,setRedirectToDetail] : [number, Function] = useState(-1)\n\n    const indexes = [\n        {label: 'Name', key: 'scName'},\n        {label: 'Address', key: 'scAddress'},\n        {label: 'Port', key: 'scPort'},\n        {label: 'Type', key: 'scType'},\n        {label: 'CPU %', key: 'cpuPercent'},\n        {label: 'MEM %', key: 'memPercentage'},\n        {label: 'State', key: 'scState'},\n        {label: '', key: 'state'},\n    ]\n\n    const onDisconnect = () => {\n        setError(\"Server error\")\n        setFetching(false)\n        setSmartComponents([])\n    }\n\n    const onInitialData = (data:any) => {\n        updateSmartObjects(data.result)\n        setFetching(false)\n    } \n\n    useMountEffect(() => {\n\n        setTimeout(() => {\n\n            socket.connect(() => {}, onDisconnect, onInitialData)\n            socket.addListener(SOCKET_EVENT.UPDATED_SC_EVENT, (data) => updateSmartComponent(data.sc))\n\n        }, 0)\n\n    }, () => socket?.disconnect())\n\n\n    const updateSmartObjects = (scs:SmartComponent[]) => setSmartComponents(getComponentsWithStateData(scs))\n\n    const updateSmartComponent = (sc: SmartComponent) => {\n\n        setSmartComponents((prevComponents: SmartComponentWithDataState[]) => {\n\n            let newSc = true\n\n            const newComponents = getComponentsWithStateData(prevComponents.map((oSc:SmartComponentWithDataState) => {\n\n                if(oSc.scId === sc.scId) {\n                    newSc = false\n                    return sc\n                }\n                return oSc\n\n            }))\n\n            if(newSc)\n                return [...prevComponents, addStateAndDetialData(sc)]\n            return newComponents\n\n        })\n    }\n\n    const getComponentsWithStateData = (scs: SmartComponent[]) : SmartComponentWithDataState[] => {\n\n        return scs.map((sc:SmartComponent) => addStateAndDetialData(sc))\n\n    }\n    \n    const addStateAndDetialData = (sc: SmartComponent) : SmartComponentWithDataState => {\n\n        return (\n            {\n                ...sc, \n                state:  {\n                    key: sc.scState,\n                    data: <Box className= {`${classes.onLineState} ${sc.scState === 'connected' ? classes.onLineStateOn : classes.onLineStateOff}`}/>\n                },\n                detail: {\n                    key: 'detail',\n                    data: <Button variant=\"text\" size=\"small\" onClick={redirectToDetailAction(sc.scId)}><Visibility fontSize=\"small\"/></Button> \n                }\n            }\n        )\n    }\n\n    const redirectToDetailAction = (id?: number) => () => setRedirectToDetail(id)\n\n    const confirmActionStates = {\n\n        error: {\n          label: error,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: 'Ok'\n        },\n    }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: 'Loading Smart-Component',\n        states: confirmActionStates,\n        currentState: confirmActionStates.error,\n        onCancel: () => setError(''),      \n    }\n\n    if(redirectToDetail !== -1)\n        return <Redirect to={`/smart-component/${redirectToDetail}`} push={true}/>\n\n    return (\n        <Navigator title=\"Smart Components\">\n            <>\n                <LazyComponent loaded={!fetching}>\n                    {error !== ''\n                        ? <ConfirmAction {...confirmActionProps}/> \n                        : <JPTable \n                            data={smartComponents} \n                            updateData={updateSmartObjects} \n                            indexes={indexes}\n                            sortedkey='scName' \n                            tName='Function Block'\n                        />\n                    }\n                </LazyComponent>\n            </>\n        </Navigator>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}