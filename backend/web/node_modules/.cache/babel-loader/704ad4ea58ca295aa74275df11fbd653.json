{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { TextField, Grid, Button, InputLabel, Select, MenuItem, FormControl } from '@material-ui/core';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { Done, Clear } from '@material-ui/icons';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction';\nimport { SmartComponentActions } from '../../redux/actions';\nimport { useStore } from '../templates/Store/Store';\nimport { getOrDownloadSmartComponents } from '../../utils/smartComponents';\nimport { useMountEffect } from '../../utils/main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SmartComponentList = /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n\n  const {\n    smartComponents,\n    setSmartComponents,\n    onSmartComponentRemoval,\n    onSmartComponentEdition\n  } = props;\n  const classes = useFunctionBlockStyles();\n  const newSc = {\n    scId: -1,\n    scName: \"\",\n    scAddress: \"\",\n    scPort: -1\n  };\n  const [newSmartComponent, setNewSmartComponent] = useState(newSc);\n  const setSmartComponent = useCallback((smartComponent, index) => {\n    setSmartComponents(prevScs => {\n      const oldSmartComponent = prevScs[index];\n      const newSmartComponents = [...prevScs];\n      newSmartComponents[index] = smartComponent;\n      onSmartComponentEdition(oldSmartComponent, smartComponent);\n      return newSmartComponents;\n    });\n  }, [onSmartComponentEdition, setSmartComponents]);\n  const addSmartComponent = useCallback(scToAdd => {\n    setSmartComponents(prevSmartComponents => [...prevSmartComponents, scToAdd]);\n    setNewSmartComponent(newSc);\n  }, [setSmartComponents, newSc]);\n  const removeSmartComponent = useCallback(smartComponentToRemove => {\n    setSmartComponents(prevSmartComponents => prevSmartComponents.filter((smartComponent, index) => smartComponent !== smartComponentToRemove));\n    onSmartComponentRemoval(smartComponentToRemove);\n  }, [onSmartComponentRemoval, setSmartComponents]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: classes.box,\n      children: [smartComponents.map((variable, index) => /*#__PURE__*/_jsxDEV(SmartComponentRow, {\n        index: index,\n        addRemoveSmartComponent: removeSmartComponent,\n        setSmartComponent: setSmartComponent,\n        smartComponent: smartComponent,\n        newSc: false\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 73\n      }, this)), /*#__PURE__*/_jsxDEV(SmartComponentRow, {\n        index: -1,\n        addRemoveVariable: addVariable,\n        setVariable: setNewVariable,\n        variable: newVariable,\n        newVar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}, \"nEPT5xElcQIY0XQYnP2j9DCOoCw=\", false, function () {\n  return [useFunctionBlockStyles];\n}));\n_c2 = SmartComponentList;\nconst SmartComponentRow = /*#__PURE__*/React.memo(_c3 = _s2(props => {\n  _s2();\n\n  const classes = useFunctionBlockStyles();\n  const [validName, setValidName] = useState(\"\");\n  const [fetching, setFetching] = useState(true);\n  const {\n    data: smartComponents,\n    dispatchAction: dispatchSmartComponentActions\n  } = useStore('smartComponents');\n\n  const updateSmartComponents = scs => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(scs));\n\n  const [error, setError] = useState('');\n\n  const action = () => {\n    if (!isValid() && props.newVar) setValidName(\"Mandatory\");else props.addRemoveVariable(props.variable);\n  };\n\n  const validate = useCallback(() => {\n    !isValid() ? setValidName(\"Mandatory\") : setValidName('');\n  }, [isValid]);\n  useEffect(() => {\n    if (!props.newSc) validate();\n  }, [props.smartComponent.scName, props.newSc, validate]);\n\n  const updateField = field => event => {\n    props.setSmartComponent({ ...props.smartComponent,\n      [field]: event.target.value\n    }, props.index);\n  }; // Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadSmartComponents(smartComponents).then(result => updateSmartComponents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    children: [props.order ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1,\n      children: props.order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: `smart-component-label-${props.smartComponent.scName}`,\n          children: \"SmartComponents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: `smart-component-label-${props.smartComponent.scName}`,\n          value: props.smartComponent.scName,\n          onChange: updateField('scName'),\n          children: (smartComponents || []).map(smartComponent => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: smartComponent.scName,\n              children: smartComponent.scName\n            }, smartComponent.scId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 75\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 1,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.varEvButton,\n        size: \"small\",\n        variant: \"contained\",\n        onClick: action,\n        children: props.newSc ? '+' : 'x'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}, \"CIeV8MPQsG4PSZGzW192W/LcK/A=\", false, function () {\n  return [useFunctionBlockStyles, useStore, useMountEffect];\n}), (prevProps, nextProps) => prevProps.smartComponent === nextProps.smartComponent);\n_c4 = SmartComponentRow;\nexport const DigitalTwinForm = props => {\n  _s3();\n\n  var _props$confirmDialog$, _props$confirmDialog$2, _props$confirmDialog$3;\n\n  /**styles */\n  const classes = useFunctionBlockStyles();\n  /**Digital Twin*/\n\n  const {\n    dtName,\n    setDtName\n  } = props.dtName;\n  const [validDtName, setValidDtName] = useState(true);\n  const onChangeDtName = useCallback(event => {\n    setDtName(event.target.value.trim());\n    setValidDtName(true);\n  }, [setDtName]);\n  /* Buttons */\n\n  const onCancel = props.cancel.action;\n  const cancelLabel = props.cancel.label;\n  const confirmLabel = props.confirmDialog.buttonTitle;\n  /* Confirmation */\n\n  const [confirm, setConfirm] = useState(false);\n\n  const validateFields = () => {\n    const cValidDtName = dtName.trim() !== '';\n    if (!cValidDtName) setValidDtName(cValidDtName);\n    return cValidDtName;\n  };\n\n  const confirmButtonAction = () => {\n    if (validateFields()) setConfirm(true);\n  };\n\n  const confirmActionStates = {\n    start: {\n      label: (_props$confirmDialog$ = props.confirmDialog.start) === null || _props$confirmDialog$ === void 0 ? void 0 : _props$confirmDialog$.label,\n      positiveLabel: (_props$confirmDialog$2 = props.confirmDialog.start) === null || _props$confirmDialog$2 === void 0 ? void 0 : _props$confirmDialog$2.positiveLabel,\n      negativeLabel: (_props$confirmDialog$3 = props.confirmDialog.start) === null || _props$confirmDialog$3 === void 0 ? void 0 : _props$confirmDialog$3.negativeLabel,\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: props.confirmDialog.success.label,\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    },\n    error: {\n      label: props.confirmDialog.error.label,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    }\n  };\n  const confirmActionProps = {\n    title: props.confirmDialog.title,\n    states: confirmActionStates,\n    currentState: confirmActionStates.executing,\n    onCancel: () => setConfirm(false),\n    onError: () => setConfirm(false),\n    onSuccess: props.confirmDialog.onSuccess,\n    action: props.confirmDialog.action\n  }; // Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n\n  useMountEffect(() => {\n    setTimeout(() => {\n      setFetching(true);\n      getOrDownloadSmartComponents(smartComponents).then(result => updateSmartComponents(result)).catch(e => setError(e.msg)).finally(() => setFetching(false));\n    }, 0);\n  }); // Associar um SmartComponent pelo frontend\n\n  const [fetching, setFetching] = useState(true);\n  const {\n    data: smartComponents,\n    dispatchAction: dispatchSmartComponentActions\n  } = useStore('smartComponents');\n\n  const updateSmartComponents = scs => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(scs));\n\n  const [error, setError] = useState('');\n  const [smartComponentChoice, setSmartComponentChoice] = useState('');\n  const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0);\n\n  const handleSmartComponentChoice = event => {\n    setSmartComponentChoice(event.target.value);\n    props.associatedSc.setAssociatedSc(event.target.value);\n    let i = 0;\n\n    while (i < smartComponents.length) {\n      if (smartComponents[i].scName === event.target.value) {\n        setSmartComponentIdChoice(smartComponents[i].scId);\n      }\n\n      i++;\n    }\n  };\n\n  const action = () => {// else\n    //props.addRemoveAssociatedSmartComponent(props.associatedSc)\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.box,\n    spacing: 2,\n    container: true,\n    direction: \"column\",\n    component: \"form\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", confirm ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 23\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        spacing: 1,\n        justify: \"space-between\",\n        item: true,\n        xs: true,\n        container: true,\n        direction: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: onChangeDtName,\n            value: dtName,\n            helperText: \"\",\n            error: !validDtName,\n            fullWidth: true,\n            required: true,\n            label: \"Insert New Digital Twin Name\",\n            id: \"dt-name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [props.order ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: props.order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: `digital-twin-label-${smartComponents}`,\n              children: \"SmartComponent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: `digital-twin-label-${smartComponents}`,\n              value: smartComponentChoice,\n              onChange: handleSmartComponentChoice,\n              children: (smartComponents || []).map(smartComponent => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: smartComponent.scName,\n                  children: smartComponent.scName\n                }, smartComponent.scId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 82\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.varEvButton,\n            size: \"small\",\n            variant: \"contained\" // onClick={action}\n            ,\n            children: props.newSc ? '+' : 'x'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          container: true,\n          direction: \"row\",\n          spacing: 2,\n          alignItems: \"center\",\n          justify: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onCancel,\n              color: \"secondary\",\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 84\n              }, this), cancelLabel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: confirmButtonAction,\n              color: \"primary\",\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Done, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 91\n              }, this), confirmLabel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 7\n  }, this);\n};\n\n_s3(DigitalTwinForm, \"TPvxINyGkxrHDn8R4FU31OlmELs=\", false, function () {\n  return [useFunctionBlockStyles, useMountEffect, useStore];\n});\n\n_c5 = DigitalTwinForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SmartComponentList$React.memo\");\n$RefreshReg$(_c2, \"SmartComponentList\");\n$RefreshReg$(_c3, \"SmartComponentRow$React.memo\");\n$RefreshReg$(_c4, \"SmartComponentRow\");\n$RefreshReg$(_c5, \"DigitalTwinForm\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx"],"names":["React","useState","useCallback","useEffect","TextField","Grid","Button","InputLabel","Select","MenuItem","FormControl","useFunctionBlockStyles","Done","Clear","ConfirmActionStateLabel","ConfirmAction","SmartComponentActions","useStore","getOrDownloadSmartComponents","useMountEffect","SmartComponentList","memo","props","smartComponents","setSmartComponents","onSmartComponentRemoval","onSmartComponentEdition","classes","newSc","scId","scName","scAddress","scPort","newSmartComponent","setNewSmartComponent","setSmartComponent","smartComponent","index","prevScs","oldSmartComponent","newSmartComponents","addSmartComponent","scToAdd","prevSmartComponents","removeSmartComponent","smartComponentToRemove","filter","title","box","map","variable","addVariable","setNewVariable","newVariable","SmartComponentRow","validName","setValidName","fetching","setFetching","data","dispatchAction","dispatchSmartComponentActions","updateSmartComponents","scs","updateSmartComponent","error","setError","action","isValid","newVar","addRemoveVariable","validate","updateField","field","event","target","value","setTimeout","then","result","catch","e","msg","finally","order","varEvButton","prevProps","nextProps","DigitalTwinForm","dtName","setDtName","validDtName","setValidDtName","onChangeDtName","trim","onCancel","cancel","cancelLabel","label","confirmLabel","confirmDialog","buttonTitle","confirm","setConfirm","validateFields","cValidDtName","confirmButtonAction","confirmActionStates","start","positiveLabel","negativeLabel","state","executing","success","confirmActionProps","states","currentState","onError","onSuccess","smartComponentChoice","setSmartComponentChoice","smartComponentIdChoice","setSmartComponentIdChoice","handleSmartComponentChoice","associatedSc","setAssociatedSc","i","length"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { TextField, Grid, Button, InputLabel, Select, MenuItem, FormControl } from '@material-ui/core'\nimport { AssociatedSmartComponent, SmartComponent } from '../../model'\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\nimport { Done, Clear } from '@material-ui/icons'\nimport { ConfirmActionProps, ConfirmActionStateLabel, ConfirmActionAction, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction'\nimport { AssociatedSmartComponentActions, SmartComponentActions } from '../../redux/actions'\nimport { useStore } from '../templates/Store/Store'\nimport { getOrDownloadSmartComponents } from '../../utils/smartComponents'\nimport { useMountEffect } from '../../utils/main'\nimport { RequestResponseState } from '../../services/api/api'\n\ninterface SmartComponentProps {\n  setSmartComponents: Function\n  smartComponents: SmartComponent[]\n  title: string\n  onSmartComponentRemoval: (smartComponent: SmartComponent) => void\n  onSmartComponentEdition: (oldSmartComponent: SmartComponent, newSmartComponent: SmartComponent) => void\n}\n\nexport const SmartComponentList = React.memo((props: SmartComponentProps) => {\n  \n  const {smartComponents,setSmartComponents,onSmartComponentRemoval,onSmartComponentEdition} = props\n\n  const classes = useFunctionBlockStyles()\n\n  const newSc : SmartComponent = {\n    scId: -1,\n    scName: \"\",\n    scAddress: \"\",\n    scPort: -1,\n  }\n\n  const [newSmartComponent,setNewSmartComponent] : [SmartComponent,Function] = useState(newSc)\n\n  const setSmartComponent = useCallback((smartComponent: SmartComponent , index:number) => {\n\n    setSmartComponents((prevScs: SmartComponent[]) => {\n\n      const oldSmartComponent : SmartComponent = prevScs[index]\n      const newSmartComponents : SmartComponent[] = [...prevScs]\n      newSmartComponents[index] = smartComponent\n      onSmartComponentEdition(oldSmartComponent,smartComponent)\n      return newSmartComponents\n\n    }) \n\n  },[onSmartComponentEdition, setSmartComponents])\n\n  const addSmartComponent = useCallback((scToAdd: SmartComponent) => {\n    \n    setSmartComponents((prevSmartComponents: SmartComponent[]) =>[...prevSmartComponents, scToAdd])\n    setNewSmartComponent(newSc)\n\n  }, [setSmartComponents,newSc]) \n\n  const removeSmartComponent = useCallback((smartComponentToRemove:SmartComponent) => {\n    setSmartComponents((prevSmartComponents: SmartComponent[]) => prevSmartComponents.filter((smartComponent:SmartComponent,index:number) => smartComponent !== smartComponentToRemove))\n    onSmartComponentRemoval(smartComponentToRemove)\n  },[onSmartComponentRemoval,setSmartComponents]) \n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>{props.title}</Grid>\n      <Grid item className={classes.box}>\n        {smartComponents.map((variable:SmartComponent, index:number) => <SmartComponentRow key={index} index={index} addRemoveSmartComponent={removeSmartComponent} setSmartComponent={setSmartComponent} smartComponent={smartComponent} newSc={false} />)}\n        <SmartComponentRow index={-1} addRemoveVariable={addVariable} setVariable={setNewVariable} variable={newVariable} newVar={true}  />\n      </Grid> \n    </Grid>\n  )\n})\n\ninterface SmartComponentRowProps {\n  index: number \n  addRemoveSmartComponent: (smartComponent: SmartComponent) => void\n  setSmartComponent:Function\n  smartComponent: SmartComponent\n  newSc: boolean\n  order?: number\n}\n\nconst SmartComponentRow = React.memo((props: SmartComponentRowProps) => {\n\n  const classes = useFunctionBlockStyles()\n\n  const [validName,setValidName] = useState(\"\")\n\n  const [fetching,setFetching] = useState(true)\n  const {data:smartComponents, dispatchAction:dispatchSmartComponentActions} = useStore('smartComponents')\n  const updateSmartComponents = (scs: SmartComponent[]) => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(scs))\n  const [error,setError] = useState('')\n\n  const action = () => {\n\n    if(!isValid() && props.newVar) \n      setValidName(\"Mandatory\")\n    \n    else\n      props.addRemoveVariable(props.variable)\n    \n  }\n  const validate = useCallback(() => {\n    \n    !isValid() ? setValidName(\"Mandatory\") : setValidName('')\n\n  },[isValid]) \n\n  useEffect(() => {if(!props.newSc) validate()}, [props.smartComponent.scName, props.newSc, validate])\n\n  const updateField = (field:string) => (event:any) => {\n\n    props.setSmartComponent({...props.smartComponent, [field]: event.target.value},props.index)\n  \n  }\n\n    // Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n    useMountEffect(() => {\n\n      setTimeout(() => {\n  \n      setFetching(true)\n      getOrDownloadSmartComponents(smartComponents)\n          .then((result: SmartComponent[]) => updateSmartComponents(result))\n          .catch((e:RequestResponseState) => setError(e.msg))\n          .finally(() => setFetching(false))\n      }, 0)\n      })\n  \n\n  return (\n    <Grid item container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n      { props.order ?\n      <Grid item xs={1}>\n          {props.order}\n      </Grid>\n      : null\n      }\n      <Grid item xs={3}>\n        <FormControl fullWidth required>\n          <InputLabel id={`smart-component-label-${props.smartComponent.scName}`}>SmartComponents</InputLabel>\n          <Select\n            labelId={`smart-component-label-${props.smartComponent.scName}`}\n            value={props.smartComponent.scName}\n            onChange={updateField('scName')}\n          >\n            {(smartComponents || []).map((smartComponent: any) => {return <MenuItem key={smartComponent.scId} value={smartComponent.scName}>{smartComponent.scName}</MenuItem>})}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={1}>\n        <Button \n          className={classes.varEvButton} \n          size=\"small\" \n          variant=\"contained\"\n          onClick={action}\n        >\n        {props.newSc ? '+' : 'x' }</Button>\n      </Grid>\n    </Grid>\n  )\n}\n ,(prevProps:SmartComponentRowProps, nextProps: SmartComponentRowProps) => prevProps.smartComponent === nextProps.smartComponent\n)\n\ninterface DigitalTwinFormProps {\n\n    dtName: {\n        dtName: string\n        setDtName: Function\n    },\n    associatedSc: {\n        associatedSc: string\n        setAssociatedSc: Function\n    }\n    cancel: {\n        label: string\n        action: () => void\n    },\n    confirmDialog: {\n        buttonTitle: string\n        title: string\n        initialState: ConfirmActionStateLabel\n        action: ConfirmActionAction\n        onSuccess : () => void\n        start? : {\n            label: string\n            positiveLabel: string\n            negativeLabel: string\n        }\n        success: {\n            label:string\n            positiveLabel: string\n        }\n        error: {\n            label: string\n            positiveLabel: string\n        }\n    },\n    order?: number,\n    newSc?: boolean,\n    // addRemoveAssociatedSmartComponent: (associatedSc: AssociatedSmartComponent) => void,\n}\n\nexport const DigitalTwinForm = (props: DigitalTwinFormProps) => {\n\n    /**styles */\n    const classes = useFunctionBlockStyles()\n\n    /**Digital Twin*/\n    const {dtName, setDtName} = props.dtName\n    const [validDtName, setValidDtName] = useState(true)\n    const onChangeDtName = useCallback((event:any) => {\n\n        setDtName(event.target.value.trim())\n        setValidDtName(true)\n    \n      },[setDtName])\n\n    /* Buttons */\n\n    const onCancel = props.cancel.action\n    const cancelLabel = props.cancel.label\n\n    const confirmLabel = props.confirmDialog.buttonTitle\n\n    /* Confirmation */\n\n    const [confirm, setConfirm] : [boolean, Function] = useState(false)\n\n    const validateFields = () : boolean => {\n\n        const cValidDtName = dtName.trim() !== ''\n            \n        if(!cValidDtName) setValidDtName(cValidDtName)\n    \n        return cValidDtName \n    \n    }\n\n    const confirmButtonAction = () => {\n\n        if(validateFields())\n          setConfirm(true)\n    }\n\n    const confirmActionStates = {\n        start: {\n            label: props.confirmDialog.start?.label,\n            positiveLabel: props.confirmDialog.start?.positiveLabel,\n            negativeLabel: props.confirmDialog.start?.negativeLabel,\n            state: ConfirmActionStateLabel.start\n        },\n        executing: {\n          label: '',\n          state: ConfirmActionStateLabel.executing,\n        },\n        success: {\n          label: props.confirmDialog.success.label,\n          state: ConfirmActionStateLabel.success,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n        error: {\n          label: props.confirmDialog.error.label,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n      }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: props.confirmDialog.title,\n        states: confirmActionStates,\n        currentState: confirmActionStates.executing,\n        onCancel: () => setConfirm(false),\n        onError: () => setConfirm(false),\n        onSuccess: props.confirmDialog.onSuccess,\n        action:props.confirmDialog.action,\n      \n    }\n\n    // Recuperar diretamente da comunicação OPC-UA os smart_components disponíveis (SmartComponent)\n    useMountEffect(() => {\n\n      setTimeout(() => {\n  \n      setFetching(true)\n      getOrDownloadSmartComponents(smartComponents)\n          .then((result: SmartComponent[]) => updateSmartComponents(result))\n          .catch((e:RequestResponseState) => setError(e.msg))\n          .finally(() => setFetching(false))\n      }, 0)\n      })\n  \n    // Associar um SmartComponent pelo frontend\n      \n    const [fetching,setFetching] = useState(true)\n    const {data:smartComponents, dispatchAction:dispatchSmartComponentActions} = useStore('smartComponents')\n    const updateSmartComponents = (scs: SmartComponent[]) => dispatchSmartComponentActions(SmartComponentActions.updateSmartComponent(scs))\n    const [error,setError] = useState('')\n\n    const [smartComponentChoice, setSmartComponentChoice] = useState('')\n    const [smartComponentIdChoice, setSmartComponentIdChoice] = useState(0)\n  \n    const handleSmartComponentChoice = (event: React.ChangeEvent<{ value: unknown }>) => {\n      setSmartComponentChoice(event.target.value as string);\n      props.associatedSc.setAssociatedSc(event.target.value as string)\n      let i = 0;\n      while(i < smartComponents.length)\n      {\n          if( smartComponents[i].scName === (event.target.value as string))\n          {\n              setSmartComponentIdChoice(smartComponents[i].scId)\n          }\n          i++;\n      }\n    };\n\n    const action = () => {\n\n      // else\n      //props.addRemoveAssociatedSmartComponent(props.associatedSc)\n      \n    }\n\n    return (\n      <Grid className={classes.box} spacing={2} container direction=\"column\" component=\"form\">\n        <> {confirm ? <ConfirmAction {...confirmActionProps} /> : null}\n          <Grid spacing={1} justify=\"space-between\" item xs container direction=\"row\">\n            <Grid item xs={6}>\n              <TextField\n                onChange={onChangeDtName} \n                value={dtName}\n                helperText=\"\"\n                error={!validDtName} \n                fullWidth required \n                label=\"Insert New Digital Twin Name\" \n                id=\"dt-name\" \n                type=\"text\" />\n            </Grid>\n          </Grid>\n          <Grid item container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n            {props.order ?\n            <Grid item xs={1}>\n                {props.order}\n            </Grid>\n            : null\n            }\n            <Grid item xs={3}>\n              <FormControl fullWidth required>\n                <InputLabel id={`digital-twin-label-${smartComponents}`}>SmartComponent</InputLabel>\n                <Select\n                  labelId={`digital-twin-label-${smartComponents}`}\n                  value={smartComponentChoice}\n                  onChange={handleSmartComponentChoice}\n                >\n                   {(smartComponents || []).map((smartComponent: any) => {return <MenuItem key={smartComponent.scId} value={smartComponent.scName}>{smartComponent.scName}</MenuItem>})}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={1}>\n              <Button \n                className={classes.varEvButton} \n                size=\"small\" \n                variant=\"contained\"\n                // onClick={action}\n              >\n              {props.newSc ? '+' : 'x' }</Button>\n            </Grid>\n          </Grid>\n          {/* <Grid  item xs={4}>\n            <InputLabel id={`digital-twin-label-${smartComponents}`}>Choose a Smart Component to associate</InputLabel>\n            <Select labelId={`digital-twin-label-${smartComponents}`} value={smartComponentChoice} onChange={handleSmartComponentChoice}>\n              {(smartComponents || []).map((smartComponent: any) => {return <MenuItem key={smartComponent.scId} value={smartComponent.scName}>{smartComponent.scName}</MenuItem>})}\n            </Select> \n          </Grid> */}\n          <Grid item xs container direction=\"row\" justify=\"space-between\" alignItems=\"center\"> \n            <Grid item xs={6} container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"flex-end\">\n              <Grid item>\n                  <Button onClick={onCancel} color=\"secondary\" variant=\"contained\"><Clear/>{cancelLabel}</Button>\n              </Grid>\n              <Grid>\n                <Button onClick={confirmButtonAction} color=\"primary\" variant=\"contained\"><Done/>{confirmLabel}</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </>\n    </Grid>\n  ) \n}"]},"metadata":{},"sourceType":"module"}