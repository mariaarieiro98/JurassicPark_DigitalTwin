{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { TextField, Grid, Button } from '@material-ui/core';\nimport { InOutType } from '../../model';\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style';\nimport { SmartComponentList } from './SmartComponent';\nimport { Done, Clear } from '@material-ui/icons';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_VALUES = {\n  eventType: 'Event'\n};\n\nconst updateEventVariablesOnRemoveVariable = (events, variableToRemove) => {\n  const newEvents = [...events];\n  newEvents.forEach(event => {\n    event.eventVariables = event.eventVariables.filter(ev => ev.evVariableName !== variableToRemove.variableName);\n  });\n  return newEvents;\n};\n\nconst updateEventVariablesOnUpdateVariable = (events, oldVariable, variableEdited) => {\n  const newEvents = [...events];\n  newEvents.forEach(event => {\n    event.eventVariables = event.eventVariables.map(ev => {\n      if (ev.evVariableName === oldVariable.variableName) return {\n        evVariableName: variableEdited.variableName,\n        evEventName: event.eventName\n      };else return ev;\n    });\n  });\n  return newEvents;\n};\n\nexport const DigitalTwinForm = props => {\n  _s();\n\n  var _props$confirmDialog$, _props$confirmDialog$2, _props$confirmDialog$3;\n\n  /**styles */\n  const classes = useFunctionBlockStyles();\n  /**Fb type */\n\n  const {\n    fbType,\n    setFbType\n  } = props.fbType;\n  const [validType, setValidType] = useState(true);\n  const onChangeFBType = useCallback(event => {\n    setFbType(event.target.value.trim());\n    setValidType(true);\n  }, [setFbType]);\n  /* Variables and Events */\n\n  const {\n    fbInputVariables,\n    setFbInputVariables\n  } = props.fbInputVariables;\n  const {\n    fbOutputVariables,\n    setFbOutputVariables\n  } = props.fbOutputVariables;\n\n  const getEmptyEvent = type => ({\n    eventId: -1,\n    eventOpcua: \"\",\n    eventInoutType: type,\n    eventName: '',\n    eventType: DEFAULT_VALUES.eventType,\n    eventVariables: []\n  });\n\n  const {\n    fbInputEvents,\n    setFbInputEvents\n  } = props.fbInputEvents;\n  const {\n    fbOutputEvents,\n    setFbOutputEvents\n  } = props.fbOutputEvents;\n  /** Variable Update and Edition */\n\n  const onInputVariableRemoval = useCallback(variableToRemove => {\n    setFbInputEvents(prevEvents => updateEventVariablesOnRemoveVariable(prevEvents, variableToRemove));\n  }, [setFbInputEvents]);\n  const onOutputVariableRemoval = useCallback(variableToRemove => {\n    setFbOutputEvents(prevEvents => updateEventVariablesOnRemoveVariable(prevEvents, variableToRemove));\n  }, [setFbOutputEvents]);\n  const onInputVariableEdition = useCallback((oldVariable, newVariable) => {\n    setFbInputEvents(prevEvents => updateEventVariablesOnUpdateVariable(prevEvents, oldVariable, newVariable));\n  }, [setFbInputEvents]);\n  const onOutputVariableEdition = useCallback((oldVariable, newVariable) => {\n    setFbOutputEvents(prevEvents => updateEventVariablesOnUpdateVariable(prevEvents, oldVariable, newVariable));\n  }, [setFbOutputEvents]);\n  /* Buttons */\n\n  const onCancel = props.cancel.action;\n  const cancelLabel = props.cancel.label;\n  const confirmLabel = props.confirmDialog.buttonTitle;\n  /* Confirmation */\n\n  const [confirm, setConfirm] = useState(false);\n\n  const validateFields = () => {\n    const cValidType = fbType.trim() !== '';\n    if (!cValidType) setValidType(cValidType);\n    return cValidType;\n  };\n\n  const confirmButtonAction = () => {\n    if (validateFields()) setConfirm(true);\n  };\n\n  const confirmActionStates = {\n    start: {\n      label: (_props$confirmDialog$ = props.confirmDialog.start) === null || _props$confirmDialog$ === void 0 ? void 0 : _props$confirmDialog$.label,\n      positiveLabel: (_props$confirmDialog$2 = props.confirmDialog.start) === null || _props$confirmDialog$2 === void 0 ? void 0 : _props$confirmDialog$2.positiveLabel,\n      negativeLabel: (_props$confirmDialog$3 = props.confirmDialog.start) === null || _props$confirmDialog$3 === void 0 ? void 0 : _props$confirmDialog$3.negativeLabel,\n      state: ConfirmActionStateLabel.start\n    },\n    executing: {\n      label: '',\n      state: ConfirmActionStateLabel.executing\n    },\n    success: {\n      label: props.confirmDialog.success.label,\n      state: ConfirmActionStateLabel.success,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    },\n    error: {\n      label: props.confirmDialog.error.label,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: props.confirmDialog.success.positiveLabel\n    }\n  };\n  const confirmActionProps = {\n    title: props.confirmDialog.title,\n    states: confirmActionStates,\n    currentState: confirmActionStates.executing,\n    onCancel: () => setConfirm(false),\n    onError: () => setConfirm(false),\n    onSuccess: props.confirmDialog.onSuccess,\n    action: props.confirmDialog.action\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", confirm ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      spacing: 1,\n      justify: \"space-between\",\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: onChangeFBType,\n          value: fbType,\n          helperText: \"\",\n          error: !validType,\n          fullWidth: true,\n          required: true,\n          label: \"Type\",\n          id: \"fb-type\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      children: \"Variables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.box,\n        spacing: 1,\n        item: true,\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(SmartComponentList, {\n            onVariableEdition: onInputVariableEdition,\n            onVariableRemoval: onInputVariableRemoval,\n            setVariables: setFbInputVariables,\n            inOutType: InOutType.in,\n            title: \"Input\",\n            variables: fbInputVariables\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(SmartComponentList, {\n            onVariableEdition: onOutputVariableEdition,\n            onVariableRemoval: onOutputVariableRemoval,\n            setVariables: setFbOutputVariables,\n            inOutType: InOutType.out,\n            title: \"Output\",\n            variables: fbOutputVariables\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        container: true,\n        direction: \"row\",\n        spacing: 2,\n        alignItems: \"center\",\n        justify: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onCancel,\n            color: \"secondary\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(Clear, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 86\n            }, this), cancelLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: confirmButtonAction,\n            color: \"primary\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(Done, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 93\n            }, this), confirmLabel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DigitalTwinForm, \"YgXg2hZ4QvnjexUMTJHTtDKacZQ=\", false, function () {\n  return [useFunctionBlockStyles];\n});\n\n_c = DigitalTwinForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalTwinForm\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/DigitalTwin/DigitalTwinForm.tsx"],"names":["React","useState","useCallback","TextField","Grid","Button","InOutType","useFunctionBlockStyles","SmartComponentList","Done","Clear","ConfirmActionStateLabel","ConfirmAction","DEFAULT_VALUES","eventType","updateEventVariablesOnRemoveVariable","events","variableToRemove","newEvents","forEach","event","eventVariables","filter","ev","evVariableName","variableName","updateEventVariablesOnUpdateVariable","oldVariable","variableEdited","map","evEventName","eventName","DigitalTwinForm","props","classes","fbType","setFbType","validType","setValidType","onChangeFBType","target","value","trim","fbInputVariables","setFbInputVariables","fbOutputVariables","setFbOutputVariables","getEmptyEvent","type","eventId","eventOpcua","eventInoutType","fbInputEvents","setFbInputEvents","fbOutputEvents","setFbOutputEvents","onInputVariableRemoval","prevEvents","onOutputVariableRemoval","onInputVariableEdition","newVariable","onOutputVariableEdition","onCancel","cancel","action","cancelLabel","label","confirmLabel","confirmDialog","buttonTitle","confirm","setConfirm","validateFields","cValidType","confirmButtonAction","confirmActionStates","start","positiveLabel","negativeLabel","state","executing","success","error","confirmActionProps","title","states","currentState","onError","onSuccess","box","in","out"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\nimport { FormControl, InputLabel, TextField, Grid, Select, MenuItem, Box, Button,Typography, Chip } from '@material-ui/core'\nimport { FBGeneralCategory, Variable, InOutType, Event, EventVariable, FunctionBlock, FBCategory, ExternalDependency } from '../../model'\nimport { useFunctionBlockStyles } from '../FunctionBlocks/FunctionBlock/style'\nimport { SmartComponentList } from './SmartComponent'\nimport { setSimpleField, useMountEffect } from '../../utils/main'\nimport { EventList } from '../FunctionBlocks/FunctionBlock/Event'\nimport { Done, Clear } from '@material-ui/icons'\nimport { ReactComponent as UploadIcon } from '../../icons/Upload.svg'\nimport { getFBfromFbtFile, getOrDownloadFunctionBlockCategories } from '../../utils/functionBlock'\nimport { ConfirmActionProps, ConfirmActionStateLabel, ConfirmActionAction, ConfirmAction } from '../templates/ConfirmAction/ConfirmAction'\n\nconst DEFAULT_VALUES = {\n    eventType: 'Event'\n}\n\nconst updateEventVariablesOnRemoveVariable = (events:Event[],variableToRemove:Variable, ) : Event[] => {\n\n    const newEvents : Event[] = [...events]\n    newEvents.forEach((event: Event) => {\n\n        event.eventVariables = event.eventVariables.filter((ev: EventVariable) => ev.evVariableName !== variableToRemove.variableName)\n\n    })\n\n    return newEvents\n\n}\n\nconst updateEventVariablesOnUpdateVariable = (events:Event[], oldVariable:Variable,variableEdited:Variable) : Event[] => {\n\n    const newEvents : Event[] = [...events]\n    newEvents.forEach((event: Event) => {\n\n      event.eventVariables = event.eventVariables.map((ev: EventVariable) => {\n        if(ev.evVariableName === oldVariable.variableName)\n          return {\n            evVariableName: variableEdited.variableName,\n            evEventName: event.eventName\n          }\n        else\n          return ev\n      }) \n\n    })\n\n    return newEvents\n\n}\n\ninterface FunctionBlockFormProps {\n\n    fbType: {\n        fbType: string\n        setFbType: Function\n    },\n    fbInputVariables: {\n        fbInputVariables: Variable[]\n        setFbInputVariables: Function\n    }\n    fbOutputVariables: {\n        fbOutputVariables: Variable[]\n        setFbOutputVariables: Function\n    },\n    cancel: {\n        label: string\n        action: () => void\n    },\n    confirmDialog: {\n        buttonTitle: string\n        title: string\n        initialState: ConfirmActionStateLabel\n        action: ConfirmActionAction\n        onSuccess : () => void\n        start? : {\n            label: string\n            positiveLabel: string\n            negativeLabel: string\n        }\n        success: {\n            label:string\n            positiveLabel: string\n        }\n        error: {\n            label: string\n            positiveLabel: string\n        }\n    },\n    byPassFields?: {\n      fbImplFile: boolean\n    }\n}\n\nexport const DigitalTwinForm = (props: FunctionBlockFormProps) => {\n\n    /**styles */\n    const classes = useFunctionBlockStyles()\n\n    /**Fb type */\n    const {fbType, setFbType} = props.fbType\n    const [validType, setValidType] = useState(true)\n    const onChangeFBType = useCallback((event:any) => {\n\n        setFbType(event.target.value.trim())\n        setValidType(true)\n    \n      },[setFbType])\n\n    /* Variables and Events */\n    const {fbInputVariables, setFbInputVariables} = props.fbInputVariables\n    const {fbOutputVariables, setFbOutputVariables} = props.fbOutputVariables\n    \n    const getEmptyEvent = (type:InOutType) : Event => ({\n        eventId: -1,\n        eventOpcua: \"\",\n        eventInoutType: type,\n        eventName: '',\n        eventType:DEFAULT_VALUES.eventType,\n        eventVariables: []\n    })\n\n\n    const {fbInputEvents, setFbInputEvents} = props.fbInputEvents\n    const {fbOutputEvents, setFbOutputEvents} = props.fbOutputEvents\n\n    /** Variable Update and Edition */\n    \n    const onInputVariableRemoval = useCallback((variableToRemove: Variable) => {\n\n        setFbInputEvents((prevEvents: Event[]) => updateEventVariablesOnRemoveVariable(prevEvents,variableToRemove))\n    }, [setFbInputEvents])\n\n    const onOutputVariableRemoval = useCallback((variableToRemove: Variable) => {\n\n        setFbOutputEvents((prevEvents: Event[]) => updateEventVariablesOnRemoveVariable(prevEvents,variableToRemove))\n    \n    }, [setFbOutputEvents])\n\n\n    const onInputVariableEdition = useCallback((oldVariable:Variable, newVariable: Variable) => {\n\n        setFbInputEvents((prevEvents: Event[]) => updateEventVariablesOnUpdateVariable(prevEvents,oldVariable,newVariable))\n    \n    },[setFbInputEvents])\n    \n      const onOutputVariableEdition = useCallback((oldVariable:Variable, newVariable: Variable) => {\n    \n        setFbOutputEvents((prevEvents: Event[]) => updateEventVariablesOnUpdateVariable(prevEvents,oldVariable,newVariable))\n    \n    },[setFbOutputEvents])\n\n    /* Buttons */\n\n    const onCancel = props.cancel.action\n    const cancelLabel = props.cancel.label\n\n    const confirmLabel = props.confirmDialog.buttonTitle\n\n    /* Confirmation */\n\n    const [confirm, setConfirm] : [boolean, Function] = useState(false)\n\n    const validateFields = () : boolean => {\n\n        const cValidType = fbType.trim() !== ''\n            \n        if(!cValidType) setValidType(cValidType)\n    \n        return cValidType \n    \n    }\n\n    const confirmButtonAction = () => {\n\n        if(validateFields())\n          setConfirm(true)\n    }\n\n    const confirmActionStates = {\n        start: {\n            label: props.confirmDialog.start?.label,\n            positiveLabel: props.confirmDialog.start?.positiveLabel,\n            negativeLabel: props.confirmDialog.start?.negativeLabel,\n            state: ConfirmActionStateLabel.start\n        },\n        executing: {\n          label: '',\n          state: ConfirmActionStateLabel.executing,\n        },\n        success: {\n          label: props.confirmDialog.success.label,\n          state: ConfirmActionStateLabel.success,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n        error: {\n          label: props.confirmDialog.error.label,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: props.confirmDialog.success.positiveLabel\n        },\n      }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: props.confirmDialog.title,\n        states: confirmActionStates,\n        currentState: confirmActionStates.executing,\n        onCancel: () => setConfirm(false),\n        onError: () => setConfirm(false),\n        onSuccess: props.confirmDialog.onSuccess,\n        action:props.confirmDialog.action,\n      \n    }\n\n    return (\n        <> {confirm ? <ConfirmAction {...confirmActionProps} /> : null}\n         \n            <Grid spacing={1} justify=\"space-between\" item xs container direction=\"row\">\n              <Grid item xs={6}>\n                <TextField\n                  onChange={onChangeFBType} \n                  value={fbType}\n                  helperText=\"\"\n                  error={!validType} \n                  fullWidth required \n                  label=\"Type\" \n                  id=\"fb-type\" \n                  type=\"text\" />\n              </Grid>\n            </Grid>\n            <Grid item xs>\n              Variables\n            </Grid>\n            <Grid container item xs>\n              <Grid className={classes.box} spacing={1} item container direction=\"row\">\n                <Grid item xs={6}>\n                  <SmartComponentList onVariableEdition={onInputVariableEdition} onVariableRemoval={onInputVariableRemoval} setVariables={setFbInputVariables} inOutType={InOutType.in} title=\"Input\" variables={fbInputVariables} />\n                </Grid>\n                <Grid item xs={6}>\n                  <SmartComponentList onVariableEdition={onOutputVariableEdition} onVariableRemoval={onOutputVariableRemoval} setVariables={setFbOutputVariables} inOutType={InOutType.out} title=\"Output\" variables={fbOutputVariables} />\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs container direction=\"row\" justify=\"space-between\" alignItems=\"center\"> \n              <Grid item xs={6} container direction=\"row\" spacing={2} alignItems=\"center\" justify=\"flex-end\">\n                <Grid item>\n                    <Button onClick={onCancel} color=\"secondary\" variant=\"contained\"><Clear/>{cancelLabel}</Button>\n                </Grid>\n                <Grid>\n                  <Button onClick={confirmButtonAction} color=\"primary\" variant=\"contained\"><Done/>{confirmLabel}</Button>\n                </Grid>\n              </Grid>\n            </Grid>\n        </>\n      )\n}"]},"metadata":{},"sourceType":"module"}