{"ast":null,"code":"import { getDigitalTwins, getFunctionalities, getMonitoredEvents, getMonitoredVariables } from \"../services/api/digital-twin\";\nexport const getOrDownloadDigitalTwins = dts => {\n  return new Promise((res, rej) => {\n    if (dts.length) res(dts);else getDigitalTwins().then(result => res(result)).catch(error => rej(error));\n  });\n};\nexport const getOrDownloadFunctionalities = functionalities => {\n  return new Promise((res, rej) => {\n    if (functionalities.length) res(functionalities);else getFunctionalities().then(result => res(result)).catch(error => rej(error));\n  });\n};\nexport const getOrDownloadMonitoredVariables = (monitoredVariables, id) => {\n  return new Promise((res, rej) => {\n    if (monitoredVariables.length) res(monitoredVariables, id);else getMonitoredVariables().then(result => res(result)).catch(error => rej(error));\n  });\n};\nexport const getOrDownloadMonitoredEvents = monitoredEvents => {\n  return new Promise((res, rej) => {\n    if (monitoredEvents.length) res(monitoredEvents);else getMonitoredEvents().then(result => res(result)).catch(error => rej(error));\n  });\n};","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/utils/digitalTwins.ts"],"names":["getDigitalTwins","getFunctionalities","getMonitoredEvents","getMonitoredVariables","getOrDownloadDigitalTwins","dts","Promise","res","rej","length","then","result","catch","error","getOrDownloadFunctionalities","functionalities","getOrDownloadMonitoredVariables","monitoredVariables","id","getOrDownloadMonitoredEvents","monitoredEvents"],"mappings":"AACA,SAASA,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,EAAkEC,qBAAlE,QAA+F,8BAA/F;AAGA,OAAO,MAAMC,yBAAyB,GAAIC,GAAD,IAAkD;AAEvF,SAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAgBC,GAAhB,KAAiC;AAEhD,QAAGH,GAAG,CAACI,MAAP,EACIF,GAAG,CAACF,GAAD,CAAH,CADJ,KAGIL,eAAe,GACVU,IADL,CACWC,MAAD,IAA2BJ,GAAG,CAACI,MAAD,CADxC,EAEKC,KAFL,CAEYC,KAAD,IAAiCL,GAAG,CAACK,KAAD,CAF/C;AAGP,GARM,CAAP;AAUH,CAZM;AAcP,OAAO,MAAMC,4BAA4B,GAAIC,eAAD,IAAkE;AAE1G,SAAO,IAAIT,OAAJ,CAAY,CAACC,GAAD,EAAgBC,GAAhB,KAAiC;AAEhD,QAAGO,eAAe,CAACN,MAAnB,EACIF,GAAG,CAACQ,eAAD,CAAH,CADJ,KAGId,kBAAkB,GACbS,IADL,CACWC,MAAD,IAA4BJ,GAAG,CAACI,MAAD,CADzC,EAEKC,KAFL,CAEYC,KAAD,IAAiCL,GAAG,CAACK,KAAD,CAF/C;AAGP,GARM,CAAP;AAUH,CAZM;AAeP,OAAO,MAAMG,+BAA+B,GAAG,CAACC,kBAAD,EAA0CC,EAA1C,KAAyF;AAEpI,SAAO,IAAIZ,OAAJ,CAAY,CAACC,GAAD,EAAgBC,GAAhB,KAAiC;AAEhD,QAAGS,kBAAkB,CAACR,MAAtB,EACIF,GAAG,CAACU,kBAAD,EAAoBC,EAApB,CAAH,CADJ,KAGIf,qBAAqB,GAChBO,IADL,CACWC,MAAD,IAAiCJ,GAAG,CAACI,MAAD,CAD9C,EAEKC,KAFL,CAEYC,KAAD,IAAiCL,GAAG,CAACK,KAAD,CAF/C;AAGP,GARM,CAAP;AAUH,CAZM;AAcP,OAAO,MAAMM,4BAA4B,GAAIC,eAAD,IAAoE;AAE5G,SAAO,IAAId,OAAJ,CAAY,CAACC,GAAD,EAAgBC,GAAhB,KAAiC;AAEhD,QAAGY,eAAe,CAACX,MAAnB,EACIF,GAAG,CAACa,eAAD,CAAH,CADJ,KAGIlB,kBAAkB,GACbQ,IADL,CACWC,MAAD,IAA8BJ,GAAG,CAACI,MAAD,CAD3C,EAEKC,KAFL,CAEYC,KAAD,IAAiCL,GAAG,CAACK,KAAD,CAF/C;AAGP,GARM,CAAP;AAUH,CAZM","sourcesContent":["import { DigitalTwin, Functionality, MonitoredEvent, MonitoredVariable } from \"../model/index\"\r\nimport { getDigitalTwins, getFunctionalities, getMonitoredEvents, getMonitoredVariables } from \"../services/api/digital-twin\"\r\nimport { RequestResponseState } from \"../services/api/api\"\r\n\r\nexport const getOrDownloadDigitalTwins = (dts: DigitalTwin[]) :  Promise<DigitalTwin[]> => {\r\n\r\n    return new Promise((res: Function, rej:Function) => {\r\n\r\n        if(dts.length) \r\n            res(dts)\r\n        else \r\n            getDigitalTwins()\r\n                .then((result: DigitalTwin[]) => res(result))\r\n                .catch((error: RequestResponseState) => rej(error))\r\n    })\r\n\r\n}\r\n\r\nexport const getOrDownloadFunctionalities = (functionalities: Functionality[]) :  Promise<Functionality[]> => {\r\n\r\n    return new Promise((res: Function, rej:Function) => {\r\n\r\n        if(functionalities.length) \r\n            res(functionalities)\r\n        else \r\n            getFunctionalities ()\r\n                .then((result:Functionality[]) => res(result))\r\n                .catch((error: RequestResponseState) => rej(error))\r\n    })\r\n\r\n}\r\n\r\n\r\nexport const getOrDownloadMonitoredVariables = (monitoredVariables: MonitoredVariable[], id: number) :  Promise<MonitoredVariable[]> => {\r\n\r\n    return new Promise((res: Function, rej:Function) => {\r\n\r\n        if(monitoredVariables.length) \r\n            res(monitoredVariables,id)\r\n        else \r\n            getMonitoredVariables()\r\n                .then((result: MonitoredVariable[]) => res(result))\r\n                .catch((error: RequestResponseState) => rej(error))\r\n    })\r\n\r\n}\r\n\r\nexport const getOrDownloadMonitoredEvents = (monitoredEvents: MonitoredEvent[]) :  Promise<MonitoredEvent[]> => {\r\n\r\n    return new Promise((res: Function, rej:Function) => {\r\n\r\n        if(monitoredEvents.length) \r\n            res(monitoredEvents)\r\n        else \r\n            getMonitoredEvents()\r\n                .then((result: MonitoredEvent[]) => res(result))\r\n                .catch((error: RequestResponseState) => rej(error))\r\n    })\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}