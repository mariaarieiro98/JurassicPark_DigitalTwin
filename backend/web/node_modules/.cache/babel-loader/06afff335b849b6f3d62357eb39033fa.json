{"ast":null,"code":"var _jsxFileName = \"/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/FunctionBlocks/FunctionBlock/NewFunctionBlock.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navigator } from '../../templates/Navigator/Navigator';\nimport { Redirect } from 'react-router-dom';\nimport { routes } from '../../../App';\nimport { createFunctionBlock } from '../../../services/api/function-block';\nimport { ConfirmActionStateLabel } from '../../templates/ConfirmAction/ConfirmAction';\nimport { setTimeout } from 'timers';\nimport { FunctionBlockForm } from './FunctionBlockForm';\nimport { toBase64, useMountEffect } from '../../../utils/main';\nimport { useStore } from '../../templates/Store/Store';\nimport { FunctionBlockActions, FunctionBlockCategoriesActions } from '../../../redux/actions';\nimport { getOrDownloadFunctionBlocks } from '../../../utils/functionBlock';\n/**\n * for now\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fbUserId = 1;\nexport const NewFunctionBlock = () => {\n  _s();\n\n  useMountEffect(() => {\n    getOrDownloadFunctionBlocks(functionBlocks).then(result => {\n      dispatchFunctionBlocksActions(FunctionBlockActions.updateFunctionBlocks(result));\n    }).catch(e => {\n      console.error(e);\n    });\n  });\n  const {\n    data: functionBlocks,\n    dispatchAction: dispatchFunctionBlocksActions\n  } = useStore('functionBlocks');\n  const {\n    data: functionBlockCategories,\n    dispatchAction: dispatchFunctionBlockCategoriesActions\n  } = useStore('functionBlockCategories');\n  const [redirectTo, setRedirectTo] = useState(\"\");\n  const [fbType, setFbType] = useState('');\n  const [fbDescription, setFbDescription] = useState('');\n  const [fbCategory, setFbCategory] = useState({\n    fbcName: '',\n    fbcUserId: 1,\n    fbcId: -1\n  });\n  const [fbGeneralCategory, setfbGeneralCategory] = useState('');\n  const [fbImplFile, setFbImplFile] = useState(new File([], ''));\n  const [fbInputVariables, setFbInputVariables] = useState([]);\n  const [fbOutputVariables, setFbOutputVariables] = useState([]);\n  const [fbInputEvents, setFbInputEvents] = useState([]);\n  const [fbOutputEvents, setFbOutputEvents] = useState([]);\n  const [fbExternalDependencies, setFbExternalDependencies] = useState([]);\n  let fbId = 1;\n\n  const redirectToList = () => setRedirectTo(routes.functionBlockList);\n\n  const buildFunctionBlock = () => ({\n    fbType,\n    fbDescription,\n    fbId,\n    fbFbcId: fbCategory.fbcId,\n    fbUserId,\n    fbCategoryName: fbCategory.fbcName,\n    fbGeneralCategory,\n    fbInputEvents,\n    fbOutputEvents,\n    fbInputVariables,\n    fbOutputVariables,\n    fbExternalDependencies\n  });\n\n  const redirectToListAndUpdateLocal = () => {\n    dispatchFunctionBlocksActions(FunctionBlockActions.addFunctionBlock(buildFunctionBlock()));\n    const newCategories = functionBlockCategories.map(cat => {\n      var _cat$functionBlocks;\n\n      if (cat.fbcId !== fbCategory.fbcId) return cat;\n      const oldCatFbs = (_cat$functionBlocks = cat.functionBlocks) !== null && _cat$functionBlocks !== void 0 ? _cat$functionBlocks : [];\n      return { ...cat,\n        functionBlocks: [...oldCatFbs, fbType]\n      };\n    });\n    dispatchFunctionBlockCategoriesActions(FunctionBlockCategoriesActions.updateFunctionBlockCategories(newCategories));\n    redirectToList();\n  };\n\n  const createFunctionBlockAction = () => {\n    const functionBlock = buildFunctionBlock();\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        toBase64(fbImplFile).then(file => {\n          createFunctionBlock(functionBlock, file).then(r => {\n            fbId = r.extra.lastInsertedId;\n            res(r.msg);\n          }).catch(e => rej(e.msg));\n        }).catch(e => rej('Error sending implementation file'));\n      }, 0);\n    });\n  };\n\n  if (redirectTo !== \"\") return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: redirectTo,\n    push: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Navigator, {\n    title: \"New Function Block\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(FunctionBlockForm, {\n        fbType: {\n          fbType,\n          setFbType\n        },\n        fbGeneralCategory: {\n          fbGeneralCategory,\n          setfbGeneralCategory\n        },\n        fbCategory: {\n          fbCategory,\n          setFbCategory\n        },\n        fbDescription: {\n          fbDescription,\n          setFbDescription\n        },\n        fbInputVariables: {\n          fbInputVariables,\n          setFbInputVariables\n        },\n        fbOutputVariables: {\n          fbOutputVariables,\n          setFbOutputVariables\n        },\n        fbInputEvents: {\n          fbInputEvents,\n          setFbInputEvents\n        },\n        fbOutputEvents: {\n          fbOutputEvents,\n          setFbOutputEvents\n        },\n        fbExternalDependencies: {\n          fbExternalDependencies,\n          setFbExternalDependencies\n        },\n        fbImplFile: {\n          fbImplFile,\n          setFbImplFile\n        },\n        cancel: {\n          action: redirectToList,\n          label: 'Cancel'\n        },\n        confirmDialog: {\n          buttonTitle: 'Confirm',\n          title: 'Creating Function Block',\n          initialState: ConfirmActionStateLabel.executing,\n          action: createFunctionBlockAction,\n          onSuccess: redirectToListAndUpdateLocal,\n          success: {\n            label: '',\n            positiveLabel: 'Ok'\n          },\n          error: {\n            label: '',\n            positiveLabel: 'Ok'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewFunctionBlock, \"IdVg69O5+8UqxKgDT04GgRZjBXA=\", false, function () {\n  return [useMountEffect, useStore, useStore];\n});\n\n_c = NewFunctionBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFunctionBlock\");","map":{"version":3,"sources":["/media/maria/96ae9a87-ebe3-48cb-a2c1-fae5fe76b9e7/maria/Marketplace-JurassicPark/backend/web/src/components/FunctionBlocks/FunctionBlock/NewFunctionBlock.tsx"],"names":["React","useState","Navigator","Redirect","routes","createFunctionBlock","ConfirmActionStateLabel","setTimeout","FunctionBlockForm","toBase64","useMountEffect","useStore","FunctionBlockActions","FunctionBlockCategoriesActions","getOrDownloadFunctionBlocks","fbUserId","NewFunctionBlock","functionBlocks","then","result","dispatchFunctionBlocksActions","updateFunctionBlocks","catch","e","console","error","data","dispatchAction","functionBlockCategories","dispatchFunctionBlockCategoriesActions","redirectTo","setRedirectTo","fbType","setFbType","fbDescription","setFbDescription","fbCategory","setFbCategory","fbcName","fbcUserId","fbcId","fbGeneralCategory","setfbGeneralCategory","fbImplFile","setFbImplFile","File","fbInputVariables","setFbInputVariables","fbOutputVariables","setFbOutputVariables","fbInputEvents","setFbInputEvents","fbOutputEvents","setFbOutputEvents","fbExternalDependencies","setFbExternalDependencies","fbId","redirectToList","functionBlockList","buildFunctionBlock","fbFbcId","fbCategoryName","redirectToListAndUpdateLocal","addFunctionBlock","newCategories","map","cat","oldCatFbs","updateFunctionBlockCategories","createFunctionBlockAction","functionBlock","Promise","res","rej","file","r","extra","lastInsertedId","msg","action","label","buttonTitle","title","initialState","executing","onSuccess","success","positiveLabel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Navigator } from '../../templates/Navigator/Navigator'\nimport { FBGeneralCategory, Variable, Event, FunctionBlock, ExternalDependency, FBCategory } from '../../../model/index'\nimport { Redirect } from 'react-router-dom'\nimport { routes } from '../../../App'\nimport { createFunctionBlock } from '../../../services/api/function-block'\nimport { ConfirmActionStateLabel } from '../../templates/ConfirmAction/ConfirmAction'\nimport { RequestResponseState } from '../../../services/api/api'\nimport { setTimeout } from 'timers'\nimport { FunctionBlockForm } from './FunctionBlockForm'\nimport { toBase64, useMountEffect } from '../../../utils/main'\nimport { useStore } from '../../templates/Store/Store'\nimport { FunctionBlockActions, FunctionBlockCategoriesActions } from '../../../redux/actions'\nimport { getOrDownloadFunctionBlocks } from '../../../utils/functionBlock'\n\n/**\n * for now\n */\n\nconst fbUserId = 1\n\nexport const NewFunctionBlock = () => {\n\n  useMountEffect(() => {\n    \n    getOrDownloadFunctionBlocks(functionBlocks)\n      .then((result: FunctionBlock[]) => {\n          dispatchFunctionBlocksActions(FunctionBlockActions.updateFunctionBlocks(result))\n      })\n      .catch((e:RequestResponseState) => {\n          console.error(e)\n      })\n\n  })\n\n  const {data: functionBlocks, dispatchAction:dispatchFunctionBlocksActions} = useStore('functionBlocks')\n  const {data: functionBlockCategories, dispatchAction:dispatchFunctionBlockCategoriesActions} = useStore('functionBlockCategories')\n\n  const [redirectTo, setRedirectTo] : [string, Function] = useState(\"\")\n\n  const [fbType,setFbType] : [string,Function] = useState('')\n  const [fbDescription, setFbDescription] : [string,Function] = useState('')\n  const [fbCategory, setFbCategory] : [FBCategory, Function] = useState({fbcName: '', fbcUserId: 1, fbcId: -1})\n  const [fbGeneralCategory, setfbGeneralCategory] : ['' | FBGeneralCategory,Function] = useState('')\n  const [fbImplFile, setFbImplFile] : [File,Function] = useState(new File([],''))\n  \n  const [fbInputVariables, setFbInputVariables] : [Variable[],Function] = useState([])\n  const [fbOutputVariables, setFbOutputVariables] : [Variable[],Function] = useState([])\n\n  const [fbInputEvents, setFbInputEvents] : [Event[], Function] = useState([])\n  const [fbOutputEvents, setFbOutputEvents] : [Event[], Function] = useState([])\n\n  const [fbExternalDependencies, setFbExternalDependencies] : [ExternalDependency[], Function] = useState([])\n\n  let fbId = 1\n\n  const redirectToList = () => setRedirectTo(routes.functionBlockList)\n\n  const buildFunctionBlock = () : FunctionBlock => ({\n    fbType,fbDescription, fbId,\n    fbFbcId:fbCategory.fbcId as number, fbUserId, fbCategoryName: fbCategory.fbcName,\n    fbGeneralCategory, fbInputEvents, \n    fbOutputEvents, fbInputVariables, \n    fbOutputVariables, fbExternalDependencies\n  })\n\n  const redirectToListAndUpdateLocal = () => {\n    dispatchFunctionBlocksActions(FunctionBlockActions.addFunctionBlock(buildFunctionBlock()))\n\n    const newCategories = functionBlockCategories.map((cat: FBCategory) => {\n\n      if(cat.fbcId !== fbCategory.fbcId)\n        return cat\n\n      const oldCatFbs = cat.functionBlocks ?? []\n\n      return {...cat, functionBlocks: [...oldCatFbs, fbType]}\n\n    })\n\n    dispatchFunctionBlockCategoriesActions(FunctionBlockCategoriesActions.updateFunctionBlockCategories(newCategories))\n    redirectToList()\n  } \n\n  const createFunctionBlockAction = () : Promise<string> => {\n\n    const functionBlock : FunctionBlock = buildFunctionBlock()\n    \n    return new Promise<string>((res:Function, rej:Function)  => {\n\n      setTimeout(() => {\n\n        toBase64(fbImplFile)\n\n          .then((file:string) => {\n\n            createFunctionBlock(functionBlock,file)\n      \n              .then((r:RequestResponseState) => {\n                fbId = r.extra.lastInsertedId\n                res(r.msg)\n              }) \n              .catch((e:RequestResponseState) => rej(e.msg))\n\n\n          })\n\n          .catch(e => rej('Error sending implementation file'))\n\n      },0)\n\n    }) \n\n  }\n  \n  if(redirectTo !== \"\") \n    return <Redirect to={redirectTo} push={true} />\n  \n  return (\n    <Navigator title=\"New Function Block\">\n      <>\n      <FunctionBlockForm \n        fbType={{fbType, setFbType}}\n        fbGeneralCategory={{fbGeneralCategory,setfbGeneralCategory}}\n        fbCategory={{fbCategory,setFbCategory}}\n        fbDescription={{fbDescription,setFbDescription}}\n        fbInputVariables={{fbInputVariables,setFbInputVariables}}\n        fbOutputVariables={{fbOutputVariables,setFbOutputVariables}}\n        fbInputEvents={{fbInputEvents,setFbInputEvents}}\n        fbOutputEvents={{fbOutputEvents,setFbOutputEvents}}\n        fbExternalDependencies={{fbExternalDependencies,setFbExternalDependencies}}\n        fbImplFile={{fbImplFile,setFbImplFile}}\n        cancel={{action: redirectToList, label: 'Cancel'}}\n        confirmDialog={{\n          buttonTitle: 'Confirm',\n          title: 'Creating Function Block',\n          initialState: ConfirmActionStateLabel.executing,\n          action: createFunctionBlockAction,\n          onSuccess: redirectToListAndUpdateLocal,\n          success: {\n            label: '',\n            positiveLabel: 'Ok'\n          },\n          error: {\n            label: '',\n            positiveLabel: 'Ok'\n          },\n        }}\n      />\n      </>\n    </Navigator>\n  )\n}"]},"metadata":{},"sourceType":"module"}