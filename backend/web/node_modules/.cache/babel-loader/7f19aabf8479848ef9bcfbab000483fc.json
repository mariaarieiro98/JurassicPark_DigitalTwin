{"ast":null,"code":"var _jsxFileName = \"/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/SmartComponents/SmartComponent/SmartComponent.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useRouteMatch, Redirect } from 'react-router-dom';\nimport { ConfirmActionStateLabel, ConfirmAction } from '../../templates/ConfirmAction/ConfirmAction';\nimport { Navigator } from '../../templates/Navigator/Navigator';\nimport { LazyComponent } from '../../templates/LazyComponent/LazyComponent';\nimport { useMountEffect } from '../../../utils/main';\nimport { SocketConnection, SOCKET_EVENT } from '../../../services/socket/socket';\nimport { Typography, Card, CardHeader, CardContent, Grid, Box, Divider, withTheme } from '@material-ui/core';\nimport { useSmartComponentStyles } from '../style';\nimport { BarChart } from '../../templates/Charts/Bars';\nimport { GaugeChart } from '../../templates/Charts/Gauge';\nimport { JPTable } from '../../templates/Table/JPTable';\nimport { Settings, Error } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FunctionBlockInstanceList = props => {\n  _s();\n\n  const classes = useSmartComponentStyles();\n  return /*#__PURE__*/_jsxDEV(JPTable, {\n    data: props.fbInstances.map(i => {\n      return { ...i,\n        stateData: {\n          key: i.state,\n          data: i.state === 1 ? /*#__PURE__*/_jsxDEV(Settings, {\n            className: classes.functionBlockGood\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(Error, {\n            className: classes.functionBlockError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 100\n          }, this)\n        }\n      };\n    }),\n    indexes: [{\n      label: 'Instance Name',\n      key: 'id'\n    }, {\n      label: 'Function Block Type',\n      key: 'fbType'\n    }, {\n      label: 'Function Block Category',\n      key: 'fbCategory'\n    }, {\n      label: 'Function Block Opcua Category',\n      key: 'fbGeneralCategory'\n    }, {\n      label: 'State',\n      key: 'stateData'\n    }],\n    tName: \"\",\n    updateData: props.update,\n    sortedkey: \"id\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FunctionBlockInstanceList, \"s6nXBa0WT17T8Dv0xiOGUVVHj/c=\", false, function () {\n  return [useSmartComponentStyles];\n});\n\n_c = FunctionBlockInstanceList;\n\nconst InfoItem = props => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Box, {\n    p: 1,\n    bgcolor: \"primary.main\",\n    textAlign: \"center\",\n    color: \"primary.contrastText\",\n    children: props.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    py: 1,\n    border: 1,\n    textAlign: \"center\",\n    borderColor: \"secondary\",\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this)]\n}, void 0, true);\n\n_c2 = InfoItem;\nconst MainComponent = withTheme(_c3 = _s2(props => {\n  _s2();\n\n  const classes = useSmartComponentStyles();\n  const matchParams = useRouteMatch();\n  const id = matchParams.params.id;\n  const socket = new SocketConnection(SocketConnection.getSmartComponentNamespace(id));\n  const [initialData, setInititalData] = useState(false);\n  const [smartComponentName, setSmartComponentName] = useState('');\n  const [smartComponentState, setSmartComponentState] = useState('');\n  const [smartComponentType, setSmartComponentType] = useState('');\n  const [smartComponentCpuMaxFreq, setSmartComponentCpuMaxFreq] = useState(0.0);\n  const [smartComponentCpuMinFreq, setSmartComponentCpuMinFreq] = useState(0.0);\n  const [smartComponentCpuCurrentFreq, setSmartComponentCpuCurrentFreq] = useState(0.0);\n  const [smartComponentCpuPercent, setSmartComponentCpuPercent] = useState(0.0);\n  const [smartComponentMemAvailable, setSmartComponentMemAvailable] = useState(0.0);\n  const [smartComponentMemTotal, setSmartComponentMemTotal] = useState(0.0);\n  const [smartComponentMemUsed, setSmartComponentMemUsed] = useState(0.0);\n  const [smartComponentMemPercentage, setSmartComponentMemPercentage] = useState(0.0);\n  const [smartComponentFbInstances, setSmartComponentFbInstances] = useState([]);\n  useMountEffect(() => {\n    setTimeout(() => {\n      socket.connect(() => {}, () => {}, onInitialData);\n      socket.addListener(SOCKET_EVENT.UPDATED_SC_EVENT, updateSmartComponent);\n      socket.addListener(SOCKET_EVENT.EDITED_FBI_EVENT, updateSmartComponentFunctionBlockInstances);\n    }, 0);\n  }, () => socket === null || socket === void 0 ? void 0 : socket.disconnect());\n\n  const onInitialData = data => {\n    var _data$fbInstances;\n\n    updateSmartComponent({\n      sc: data\n    });\n    updateSmartComponentFunctionBlockInstances((_data$fbInstances = data.fbInstances) !== null && _data$fbInstances !== void 0 ? _data$fbInstances : []);\n    setInititalData(true);\n  };\n\n  const updateSmartComponent = data => {\n    var _sc$cpuFreqCurrent, _sc$cpuFreqCurrent2, _sc$memAvailable, _, _sc$memTotal, _2, _sc$memUsed, _3;\n\n    const sc = data.sc;\n    if (smartComponentName !== sc.scName) setSmartComponentName(sc.scName);\n    if (smartComponentState !== sc.scState) setSmartComponentState(sc.scState);\n    if (smartComponentType !== sc.scType) setSmartComponentType(sc.scType);\n    if (smartComponentCpuMaxFreq !== sc.cpuFreqMax) setSmartComponentCpuMaxFreq(sc.cpuFreqMax);\n    if (smartComponentCpuMinFreq !== sc.cpuFreqMin) setSmartComponentCpuMinFreq(sc.cpuFreqMin);\n    if (smartComponentCpuCurrentFreq !== ((_sc$cpuFreqCurrent = sc.cpuFreqCurrent) !== null && _sc$cpuFreqCurrent !== void 0 ? _sc$cpuFreqCurrent : 0) / 1000) setSmartComponentCpuCurrentFreq(((_sc$cpuFreqCurrent2 = sc.cpuFreqCurrent) !== null && _sc$cpuFreqCurrent2 !== void 0 ? _sc$cpuFreqCurrent2 : 0) / 1000);\n    if (smartComponentCpuPercent !== sc.cpuPercent) setSmartComponentCpuPercent(sc.cpuPercent);\n    if (smartComponentMemAvailable !== ((_sc$memAvailable = sc.memAvailable) !== null && _sc$memAvailable !== void 0 ? _sc$memAvailable : 0) / 1000000) setSmartComponentMemAvailable(((_ = sc.memAvailable[1]) !== null && _ !== void 0 ? _ : 0) / 1000000);\n    if (smartComponentMemTotal !== ((_sc$memTotal = sc.memTotal) !== null && _sc$memTotal !== void 0 ? _sc$memTotal : 0) / 1000000) setSmartComponentMemTotal(((_2 = sc.memTotal[1]) !== null && _2 !== void 0 ? _2 : 0) / 1000000);\n    if (smartComponentMemUsed !== ((_sc$memUsed = sc.memUsed) !== null && _sc$memUsed !== void 0 ? _sc$memUsed : 0) / 1000000) setSmartComponentMemUsed(((_3 = sc.memUsed[1]) !== null && _3 !== void 0 ? _3 : 0) / 1000000);\n    if (smartComponentMemPercentage !== sc.memPercentage) setSmartComponentMemPercentage(sc.memPercentage);\n  };\n\n  const updateSmartComponentFunctionBlockInstances = instances => {\n    setSmartComponentFbInstances(instances);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 1,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"space-between\",\n            direction: \"row\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(LazyComponent, {\n                loaded: smartComponentName !== '',\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: [\" \", smartComponentName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(LazyComponent, {\n                loaded: smartComponentType !== '',\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: smartComponentType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: `${classes.onLineState} ${classes.onLineStateComponent} ${smartComponentState === 'connected' ? classes.onLineStateOn : classes.onLineStateOff}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      direction: \"row\",\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"CPU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              alignItems: \"center\",\n              justify: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 7,\n                children: /*#__PURE__*/_jsxDEV(GaugeChart, {\n                  label: \"Usage\",\n                  value: smartComponentCpuPercent,\n                  ticks: 3,\n                  warnMin: 70,\n                  warnMax: 85,\n                  dangerMin: 85,\n                  dangerMax: 100,\n                  max: 100,\n                  min: 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 4,\n                item: true,\n                container: true,\n                direction: \"column\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(InfoItem, {\n                    label: \"Maximum Frequency\",\n                    value: `${smartComponentCpuMaxFreq} GHz`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(InfoItem, {\n                    label: \"Minimum Frequency\",\n                    value: `${smartComponentCpuMinFreq} GHz`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(InfoItem, {\n                    label: \"Current Frequency\",\n                    value: `${smartComponentCpuCurrentFreq.toFixed(2)} GHz`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              alignItems: \"center\",\n              justify: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 7,\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  colors: [smartComponentMemPercentage < 70 ? props.theme.palette.grey[100] : props.theme.palette.warning.main],\n                  data: [['Percentage', 'percentage'], ['', smartComponentMemPercentage]],\n                  title: 'Percentage',\n                  min: 0,\n                  max: 100\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                xs: 4,\n                item: true,\n                container: true,\n                direction: \"column\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(InfoItem, {\n                    label: \"Total\",\n                    value: `${smartComponentMemTotal.toFixed(3)} MB`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(InfoItem, {\n                    label: \"Available\",\n                    value: `${smartComponentMemAvailable.toFixed(3)} MB`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(InfoItem, {\n                    label: \"Used\",\n                    value: `${smartComponentMemUsed.toFixed(2)} MB`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: \"Function Block Instances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(LazyComponent, {\n            loaded: initialData,\n            children: /*#__PURE__*/_jsxDEV(FunctionBlockInstanceList, {\n              fbInstances: smartComponentFbInstances,\n              update: updateSmartComponentFunctionBlockInstances\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}, \"ql36aFhB5h8IkJWsRJh6rLkaHCI=\", false, function () {\n  return [useSmartComponentStyles, useRouteMatch, useMountEffect];\n}));\n_c4 = MainComponent;\nexport const SmartComponentDetail = () => {\n  _s3();\n\n  const [redirectToList, setRedirectToList] = useState(false);\n  const [error, setError] = useState('');\n  const confirmActionStates = {\n    error: {\n      label: error,\n      state: ConfirmActionStateLabel.error,\n      positiveLabel: 'Ok'\n    }\n  };\n  const confirmActionProps = {\n    title: 'Loading Smart-Component',\n    states: confirmActionStates,\n    currentState: confirmActionStates.error,\n    onCancel: () => setError(''),\n    onError: () => setRedirectToList(true)\n  };\n  if (redirectToList) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/smart-component\",\n    push: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Navigator, {\n    title: \"Smart Component Detail\",\n    children: error !== '' ? /*#__PURE__*/_jsxDEV(ConfirmAction, { ...confirmActionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(MainComponent, {\n      error: error,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(SmartComponentDetail, \"/lOUA1LKVk3B3oR5I3PhFZA7+6Q=\");\n\n_c5 = SmartComponentDetail;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"FunctionBlockInstanceList\");\n$RefreshReg$(_c2, \"InfoItem\");\n$RefreshReg$(_c3, \"MainComponent$withTheme\");\n$RefreshReg$(_c4, \"MainComponent\");\n$RefreshReg$(_c5, \"SmartComponentDetail\");","map":{"version":3,"sources":["/home/maria/Desktop/Marketplace-JurassicPark/backend/web/src/components/SmartComponents/SmartComponent/SmartComponent.tsx"],"names":["React","useState","useRouteMatch","Redirect","ConfirmActionStateLabel","ConfirmAction","Navigator","LazyComponent","useMountEffect","SocketConnection","SOCKET_EVENT","Typography","Card","CardHeader","CardContent","Grid","Box","Divider","withTheme","useSmartComponentStyles","BarChart","GaugeChart","JPTable","Settings","Error","FunctionBlockInstanceList","props","classes","fbInstances","map","i","stateData","key","state","data","functionBlockGood","functionBlockError","label","update","InfoItem","value","MainComponent","matchParams","id","params","socket","getSmartComponentNamespace","initialData","setInititalData","smartComponentName","setSmartComponentName","smartComponentState","setSmartComponentState","smartComponentType","setSmartComponentType","smartComponentCpuMaxFreq","setSmartComponentCpuMaxFreq","smartComponentCpuMinFreq","setSmartComponentCpuMinFreq","smartComponentCpuCurrentFreq","setSmartComponentCpuCurrentFreq","smartComponentCpuPercent","setSmartComponentCpuPercent","smartComponentMemAvailable","setSmartComponentMemAvailable","smartComponentMemTotal","setSmartComponentMemTotal","smartComponentMemUsed","setSmartComponentMemUsed","smartComponentMemPercentage","setSmartComponentMemPercentage","smartComponentFbInstances","setSmartComponentFbInstances","setTimeout","connect","onInitialData","addListener","UPDATED_SC_EVENT","updateSmartComponent","EDITED_FBI_EVENT","updateSmartComponentFunctionBlockInstances","disconnect","sc","scName","scState","scType","cpuFreqMax","cpuFreqMin","cpuFreqCurrent","cpuPercent","memAvailable","memTotal","memUsed","memPercentage","instances","onLineState","onLineStateComponent","onLineStateOn","onLineStateOff","toFixed","theme","palette","grey","warning","main","SmartComponentDetail","redirectToList","setRedirectToList","error","setError","confirmActionStates","positiveLabel","confirmActionProps","title","states","currentState","onCancel","onError"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useRouteMatch, match, Redirect } from 'react-router-dom'\nimport { ConfirmActionStateLabel, ConfirmActionProps, ConfirmAction } from '../../templates/ConfirmAction/ConfirmAction'\nimport { Navigator } from '../../templates/Navigator/Navigator'\nimport { LazyComponent } from '../../templates/LazyComponent/LazyComponent'\nimport { useMountEffect } from '../../../utils/main'\nimport { SocketConnection, SOCKET_EVENT } from '../../../services/socket/socket'\nimport { SmartComponent, FbInstance } from '../../../model'\nimport { Typography, Card, CardHeader, CardContent, Grid, Box, Divider, withTheme, Theme } from '@material-ui/core'\nimport { useSmartComponentStyles } from '../style'\nimport { BarChart } from '../../templates/Charts/Bars'\nimport { GaugeChart } from '../../templates/Charts/Gauge'\nimport { JPTable } from '../../templates/Table/JPTable'\nimport {Settings, Error} from '@material-ui/icons'\n\n\nconst FunctionBlockInstanceList = (props: {fbInstances: any[], update: (instances: any[]) => void}) => {\n    \n    const classes = useSmartComponentStyles()\n\n    return (\n        <JPTable\n            data={props.fbInstances.map((i:FbInstance) => {\n\n                return {\n                    ...i,\n                    stateData: {\n                        key: i.state,\n                        data: i.state === 1 ? <Settings className={classes.functionBlockGood} /> : <Error className={classes.functionBlockError}/>\n                    }\n                }\n            })}\n            indexes={[\n                {label: 'Instance Name', key: 'id'},\n                {label: 'Function Block Type', key: 'fbType'},\n                {label: 'Function Block Category', key: 'fbCategory'},\n                {label: 'Function Block Opcua Category', key: 'fbGeneralCategory'},\n                {label: 'State', key: 'stateData'},\n            ]}\n            tName=''\n            updateData={props.update}\n            sortedkey='id'\n\n        />\n    )\n}\n\nconst InfoItem = (props:{label:string, value: any}) => (\n    <>\n        <Box p={1} bgcolor=\"primary.main\" textAlign=\"center\" color=\"primary.contrastText\">{props.label}</Box>\n        <Box py={1} border={1} textAlign=\"center\" borderColor=\"secondary\">{props.value}</Box>\n    </>\n)\n\nconst MainComponent = withTheme((props:{theme:Theme, error:string, setError:Function}) => {\n\n    const classes = useSmartComponentStyles()\n\n    const matchParams : match = useRouteMatch()\n    const id = (matchParams.params as any).id\n\n    const socket : SocketConnection = new SocketConnection(SocketConnection.getSmartComponentNamespace(id))\n\n    const [initialData,setInititalData] = useState(false)\n\n    const [smartComponentName,setSmartComponentName] : [string,Function] = useState('')\n    const [smartComponentState,setSmartComponentState] : [string,Function] = useState('')\n    const [smartComponentType,setSmartComponentType] : [string,Function] = useState('')\n\n    const [smartComponentCpuMaxFreq,setSmartComponentCpuMaxFreq] : [number,Function] = useState(0.0)\n    const [smartComponentCpuMinFreq,setSmartComponentCpuMinFreq] : [number,Function] = useState(0.0)\n    const [smartComponentCpuCurrentFreq,setSmartComponentCpuCurrentFreq] : [number,Function] = useState(0.0)\n    const [smartComponentCpuPercent,setSmartComponentCpuPercent] : [number,Function] = useState(0.0)\n\n    const [smartComponentMemAvailable,setSmartComponentMemAvailable] : [number,Function] = useState(0.0)\n    const [smartComponentMemTotal,setSmartComponentMemTotal] : [number,Function] = useState(0.0)\n    const [smartComponentMemUsed,setSmartComponentMemUsed] : [number,Function] = useState(0.0)\n    const [smartComponentMemPercentage,setSmartComponentMemPercentage] : [number,Function] = useState(0.0)\n    \n    const [smartComponentFbInstances,setSmartComponentFbInstances] : [FbInstance[],Function] = useState([])\n\n    useMountEffect(() => {\n        \n        setTimeout(() => {\n            \n            socket.connect(()=>{}, () => {},onInitialData)\n            socket.addListener(SOCKET_EVENT.UPDATED_SC_EVENT,updateSmartComponent)\n            socket.addListener(SOCKET_EVENT.EDITED_FBI_EVENT,updateSmartComponentFunctionBlockInstances)\n\n        }\n        ,0)\n\n    }, () => socket?.disconnect())\n\n    const onInitialData = (data:SmartComponent) => {\n        updateSmartComponent({sc: data})\n        updateSmartComponentFunctionBlockInstances(data.fbInstances ?? [])\n        setInititalData(true)\n\n    } \n\n    const updateSmartComponent = (data: any) => {\n\n        const sc : SmartComponent = data.sc\n        \n        if(smartComponentName !== sc.scName)\n            setSmartComponentName(sc.scName)\n        if(smartComponentState !== sc.scState)\n            setSmartComponentState(sc.scState)\n        if(smartComponentType !== sc.scType)\n            setSmartComponentType(sc.scType)\n        if(smartComponentCpuMaxFreq !== sc.cpuFreqMax)\n            setSmartComponentCpuMaxFreq(sc.cpuFreqMax)\n        if(smartComponentCpuMinFreq !== sc.cpuFreqMin)\n            setSmartComponentCpuMinFreq(sc.cpuFreqMin)\n        if(smartComponentCpuCurrentFreq !== (sc.cpuFreqCurrent ?? 0)/1000)\n            setSmartComponentCpuCurrentFreq((sc.cpuFreqCurrent ?? 0)/1000)\n        if(smartComponentCpuPercent !== sc.cpuPercent)\n            setSmartComponentCpuPercent(sc.cpuPercent)\n        if(smartComponentMemAvailable !== (sc.memAvailable ?? 0)/1000000)\n            setSmartComponentMemAvailable(((sc.memAvailable as any)[1] ?? 0) / 1000000)\n        if(smartComponentMemTotal !== (sc.memTotal ?? 0)/1000000)\n            setSmartComponentMemTotal(((sc.memTotal as any)[1] ?? 0) / 1000000)\n        if(smartComponentMemUsed !== (sc.memUsed ?? 0)/1000000)\n            setSmartComponentMemUsed(((sc.memUsed as any)[1] ?? 0) / 1000000)\n        if(smartComponentMemPercentage !== sc.memPercentage)\n            setSmartComponentMemPercentage(sc.memPercentage)\n        \n    }\n\n    const updateSmartComponentFunctionBlockInstances = (instances: FbInstance[]) => {\n\n        setSmartComponentFbInstances(instances)\n\n    }\n    \n    return (\n\n        <Grid container direction=\"column\" spacing={1}>\n            <Grid item>\n                <Card>\n                    <CardContent>\n                        <Grid container justify=\"space-between\" direction=\"row\" alignItems=\"center\">\n                            <Grid item>\n                                <LazyComponent loaded={smartComponentName !== ''}>\n                                    <Typography variant=\"h4\"> {smartComponentName} </Typography>\n                                </LazyComponent>\n                                <LazyComponent loaded={smartComponentType !== ''}>\n                                    <Typography>{smartComponentType}</Typography>\n                                </LazyComponent>\n                            </Grid>\n                            <Grid item>\n                                <Box className={`${classes.onLineState} ${classes.onLineStateComponent} ${smartComponentState === 'connected' ? classes.onLineStateOn : classes.onLineStateOff}`} />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Grid item container direction=\"row\" spacing={1}>\n                <Grid item xs={6}>\n                    <Card>\n                        <CardHeader title=\"CPU\" />\n                        <Divider />\n                        <CardContent>\n                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Grid item xs={7}>\n                                    <GaugeChart\n                                        label=\"Usage\"\n                                        value={smartComponentCpuPercent}\n                                        ticks={3}\n                                        warnMin={70}\n                                        warnMax={85}\n                                        dangerMin={85}\n                                        dangerMax={100}\n                                        max={100}\n                                        min={0}\n                                    />\n                                </Grid>\n                                <Grid xs={4} item container direction=\"column\" spacing={2}>\n                                    <Grid item>\n                                        <InfoItem label=\"Maximum Frequency\" value={`${smartComponentCpuMaxFreq} GHz`} />\n                                    </Grid>\n                                    <Grid item>\n                                        <InfoItem label=\"Minimum Frequency\" value={`${smartComponentCpuMinFreq} GHz`} />\n                                    </Grid>\n                                    <Grid item>\n                                        <InfoItem label=\"Current Frequency\" value={`${smartComponentCpuCurrentFreq.toFixed(2)} GHz`} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={6}>\n                    <Card>\n                        <CardHeader title=\"Memory\" />\n                        <Divider />\n                        <CardContent>\n                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                                <Grid item xs={7}>\n                                    <BarChart\n                                        colors={[smartComponentMemPercentage < 70 ? props.theme.palette.grey[100] : props.theme.palette.warning.main]}\n                                        data={[['Percentage','percentage'], ['', smartComponentMemPercentage]]}\n                                        title={'Percentage'}\n                                        min={0}\n                                        max={100} \n                                    />\n                                </Grid>\n                                <Grid xs={4} item container direction=\"column\" spacing={2}>\n                                    <Grid item>\n                                        <InfoItem label=\"Total\" value={`${smartComponentMemTotal.toFixed(3)} MB`} />\n                                    </Grid>\n                                    <Grid item>\n                                        <InfoItem label=\"Available\" value={`${smartComponentMemAvailable.toFixed(3)} MB`} />\n                                    </Grid>\n                                    <Grid item>\n                                        <InfoItem label=\"Used\" value={`${smartComponentMemUsed.toFixed(2)} MB`} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Card>\n                    <CardHeader title=\"Function Block Instances\" />\n                    <Divider />\n                    <CardContent>\n                        <LazyComponent loaded={initialData}>\n                            <FunctionBlockInstanceList \n                                fbInstances={smartComponentFbInstances}\n                                update={updateSmartComponentFunctionBlockInstances}\n                            />\n                        </LazyComponent>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n\n    )\n})\n\nexport const SmartComponentDetail = () => {\n\n    const [redirectToList, setRedirectToList] : [boolean,Function] = useState(false)\n    const [error, setError] : [string,Function] = useState('')\n\n    const confirmActionStates = {\n\n        error: {\n          label: error,\n          state: ConfirmActionStateLabel.error,\n          positiveLabel: 'Ok'\n        },\n    }\n    \n    const confirmActionProps : ConfirmActionProps = {\n\n        title: 'Loading Smart-Component',\n        states: confirmActionStates,\n        currentState: confirmActionStates.error,\n        onCancel: () => setError(''),\n        onError: () => setRedirectToList(true),\n      \n    }\n\n    if(redirectToList)\n        return <Redirect to=\"/smart-component\" push={true} />\n\n    return (\n        <Navigator title=\"Smart Component Detail\">\n            {error !== ''\n                ? <ConfirmAction {...confirmActionProps}/>\n                : <MainComponent error={error} setError={setError} />\n            }\n        </Navigator>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}